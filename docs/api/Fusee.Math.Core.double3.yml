### YamlMime:ManagedReference
items:
- uid: Fusee.Math.Core.double3
  commentId: T:Fusee.Math.Core.double3
  id: double3
  parent: Fusee.Math.Core
  children:
  - Fusee.Math.Core.double3.#ctor(Fusee.Math.Core.double2)
  - Fusee.Math.Core.double3.#ctor(Fusee.Math.Core.double3)
  - Fusee.Math.Core.double3.#ctor(Fusee.Math.Core.double4)
  - Fusee.Math.Core.double3.#ctor(System.Double,System.Double,System.Double)
  - Fusee.Math.Core.double3.Add(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  - Fusee.Math.Core.double3.b
  - Fusee.Math.Core.double3.Barycentric(Fusee.Math.Core.double3,Fusee.Math.Core.double3,Fusee.Math.Core.double3,System.Double,System.Double)
  - Fusee.Math.Core.double3.CalculateAngle(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  - Fusee.Math.Core.double3.Clamp(Fusee.Math.Core.double3,Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  - Fusee.Math.Core.double3.ComponentMax(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  - Fusee.Math.Core.double3.ComponentMin(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  - Fusee.Math.Core.double3.Cross(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  - Fusee.Math.Core.double3.Divide(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  - Fusee.Math.Core.double3.Divide(Fusee.Math.Core.double3,System.Double)
  - Fusee.Math.Core.double3.Dot(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  - Fusee.Math.Core.double3.Equals(Fusee.Math.Core.double3)
  - Fusee.Math.Core.double3.Equals(System.Object)
  - Fusee.Math.Core.double3.g
  - Fusee.Math.Core.double3.GetBarycentric(Fusee.Math.Core.double3,Fusee.Math.Core.double3,Fusee.Math.Core.double3,Fusee.Math.Core.double3,System.Double@,System.Double@)
  - Fusee.Math.Core.double3.GetHashCode
  - Fusee.Math.Core.double3.IsInfinity
  - Fusee.Math.Core.double3.IsNaN
  - Fusee.Math.Core.double3.Item(System.Int32)
  - Fusee.Math.Core.double3.Length
  - Fusee.Math.Core.double3.LengthSquared
  - Fusee.Math.Core.double3.Lerp(Fusee.Math.Core.double3,Fusee.Math.Core.double3,System.Double)
  - Fusee.Math.Core.double3.Max(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  - Fusee.Math.Core.double3.Min(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  - Fusee.Math.Core.double3.Multiply(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  - Fusee.Math.Core.double3.Multiply(Fusee.Math.Core.double3,System.Double)
  - Fusee.Math.Core.double3.NegativeInfinity
  - Fusee.Math.Core.double3.Normalize
  - Fusee.Math.Core.double3.Normalize(Fusee.Math.Core.double3)
  - Fusee.Math.Core.double3.NormalizeFast
  - Fusee.Math.Core.double3.NormalizeFast(Fusee.Math.Core.double3)
  - Fusee.Math.Core.double3.One
  - Fusee.Math.Core.double3.op_Addition(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  - Fusee.Math.Core.double3.op_Division(Fusee.Math.Core.double3,System.Double)
  - Fusee.Math.Core.double3.op_Equality(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  - Fusee.Math.Core.double3.op_Inequality(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  - Fusee.Math.Core.double3.op_Multiply(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  - Fusee.Math.Core.double3.op_Multiply(Fusee.Math.Core.double3,System.Double)
  - Fusee.Math.Core.double3.op_Multiply(System.Double,Fusee.Math.Core.double3)
  - Fusee.Math.Core.double3.op_Subtraction(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  - Fusee.Math.Core.double3.op_UnaryNegation(Fusee.Math.Core.double3)
  - Fusee.Math.Core.double3.Parse(System.String,System.IFormatProvider)
  - Fusee.Math.Core.double3.ParseConverter
  - Fusee.Math.Core.double3.PositiveInfinity
  - Fusee.Math.Core.double3.r
  - Fusee.Math.Core.double3.Rotate(Fusee.Math.Core.double3,Fusee.Math.Core.double3,System.Boolean)
  - Fusee.Math.Core.double3.Rotate(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.double3)
  - Fusee.Math.Core.double3.Subtract(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  - Fusee.Math.Core.double3.ToArray
  - Fusee.Math.Core.double3.ToString
  - Fusee.Math.Core.double3.ToString(System.IFormatProvider)
  - Fusee.Math.Core.double3.UnitX
  - Fusee.Math.Core.double3.UnitY
  - Fusee.Math.Core.double3.UnitZ
  - Fusee.Math.Core.double3.x
  - Fusee.Math.Core.double3.xy
  - Fusee.Math.Core.double3.xyz
  - Fusee.Math.Core.double3.xzy
  - Fusee.Math.Core.double3.y
  - Fusee.Math.Core.double3.yxz
  - Fusee.Math.Core.double3.yzx
  - Fusee.Math.Core.double3.z
  - Fusee.Math.Core.double3.Zero
  - Fusee.Math.Core.double3.zxy
  - Fusee.Math.Core.double3.zyx
  langs:
  - csharp
  - vb
  name: double3
  nameWithType: double3
  fullName: Fusee.Math.Core.double3
  type: Struct
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: double3
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 12
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nRepresents a 3D vector using three double-precision floating-point numbers.\n"
  remarks: "\nThe double3 structure is suitable for interoperation with unmanaged code requiring three consecutive doubles.\n"
  example: []
  syntax:
    content: 'public struct double3 : IEquatable<double3>'
    content.vb: >-
      Public Structure double3

          Implements IEquatable(Of double3)
  implements:
  - System.IEquatable{Fusee.Math.Core.double3}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Fusee.Math.Core.double3.x
  commentId: F:Fusee.Math.Core.double3.x
  id: x
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: x
  nameWithType: double3.x
  fullName: Fusee.Math.Core.double3.x
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: x
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 20
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nThe x component of the double3.\n"
  example: []
  syntax:
    content: public double x
    return:
      type: System.Double
    content.vb: Public x As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.double3.y
  commentId: F:Fusee.Math.Core.double3.y
  id: y
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: y
  nameWithType: double3.y
  fullName: Fusee.Math.Core.double3.y
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: y
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 25
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nThe y component of the double3.\n"
  example: []
  syntax:
    content: public double y
    return:
      type: System.Double
    content.vb: Public y As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.double3.z
  commentId: F:Fusee.Math.Core.double3.z
  id: z
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: z
  nameWithType: double3.z
  fullName: Fusee.Math.Core.double3.z
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: z
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 30
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nThe z component of the double3.\n"
  example: []
  syntax:
    content: public double z
    return:
      type: System.Double
    content.vb: Public z As Double
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.double3.#ctor(System.Double,System.Double,System.Double)
  commentId: M:Fusee.Math.Core.double3.#ctor(System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double)'
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: double3(Double, Double, Double)
  nameWithType: double3.double3(Double, Double, Double)
  fullName: Fusee.Math.Core.double3.double3(System.Double, System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: .ctor
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 42
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConstructs a new double3.\n"
  example: []
  syntax:
    content: public double3(double x, double y, double z)
    parameters:
    - id: x
      type: System.Double
      description: The x component of the double3.
    - id: y
      type: System.Double
      description: The y component of the double3.
    - id: z
      type: System.Double
      description: The z component of the double3.
    content.vb: Public Sub New(x As Double, y As Double, z As Double)
  overload: Fusee.Math.Core.double3.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.double3.#ctor(Fusee.Math.Core.double2)
  commentId: M:Fusee.Math.Core.double3.#ctor(Fusee.Math.Core.double2)
  id: '#ctor(Fusee.Math.Core.double2)'
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: double3(double2)
  nameWithType: double3.double3(double2)
  fullName: Fusee.Math.Core.double3.double3(Fusee.Math.Core.double2)
  type: Constructor
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: .ctor
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 53
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConstructs a new double3 from the given double2.\n"
  example: []
  syntax:
    content: public double3(double2 v)
    parameters:
    - id: v
      type: Fusee.Math.Core.double2
      description: The double2 to copy components from.
    content.vb: Public Sub New(v As double2)
  overload: Fusee.Math.Core.double3.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.double3.#ctor(Fusee.Math.Core.double3)
  commentId: M:Fusee.Math.Core.double3.#ctor(Fusee.Math.Core.double3)
  id: '#ctor(Fusee.Math.Core.double3)'
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: double3(double3)
  nameWithType: double3.double3(double3)
  fullName: Fusee.Math.Core.double3.double3(Fusee.Math.Core.double3)
  type: Constructor
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: .ctor
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 64
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConstructs a new double3 from the given double3.\n"
  example: []
  syntax:
    content: public double3(double3 v)
    parameters:
    - id: v
      type: Fusee.Math.Core.double3
      description: The double3 to copy components from.
    content.vb: Public Sub New(v As double3)
  overload: Fusee.Math.Core.double3.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.double3.#ctor(Fusee.Math.Core.double4)
  commentId: M:Fusee.Math.Core.double3.#ctor(Fusee.Math.Core.double4)
  id: '#ctor(Fusee.Math.Core.double4)'
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: double3(double4)
  nameWithType: double3.double3(double4)
  fullName: Fusee.Math.Core.double3.double3(Fusee.Math.Core.double4)
  type: Constructor
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: .ctor
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 75
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConstructs a new double3 from the given double4.\n"
  example: []
  syntax:
    content: public double3(double4 v)
    parameters:
    - id: v
      type: Fusee.Math.Core.double4
      description: The double4 to copy components from.
    content.vb: Public Sub New(v As double4)
  overload: Fusee.Math.Core.double3.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.double3.Item(System.Int32)
  commentId: P:Fusee.Math.Core.double3.Item(System.Int32)
  id: Item(System.Int32)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: double3.Item[Int32]
  fullName: Fusee.Math.Core.double3.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: this[]
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 93
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets or sets the individual components x, y, or z, depending on their index.\n"
  example: []
  syntax:
    content: public double this[int idx] { get; set; }
    parameters:
    - id: idx
      type: System.Int32
      description: The index (between 0 and 2).
    return:
      type: System.Double
      description: The x or y component of the double3.
    content.vb: Public Property Item(idx As Integer) As Double
  overload: Fusee.Math.Core.double3.Item*
  nameWithType.vb: double3.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Fusee.Math.Core.double3.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Fusee.Math.Core.double3.Length
  commentId: P:Fusee.Math.Core.double3.Length
  id: Length
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: double3.Length
  fullName: Fusee.Math.Core.double3.Length
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Length
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 147
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets the length (magnitude) of the vector.\n"
  example: []
  syntax:
    content: public double Length { get; }
    parameters: []
    return:
      type: System.Double
      description: "\nThe length.\n"
    content.vb: Public ReadOnly Property Length As Double
  overload: Fusee.Math.Core.double3.Length*
  seealso:
  - linkId: Fusee.Math.Core.double3.LengthSquared
    commentId: P:Fusee.Math.Core.double3.LengthSquared
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Math.Core.double3.LengthSquared
  commentId: P:Fusee.Math.Core.double3.LengthSquared
  id: LengthSquared
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: LengthSquared
  nameWithType: double3.LengthSquared
  fullName: Fusee.Math.Core.double3.LengthSquared
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: LengthSquared
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 170
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets the square of the vector length (magnitude).\n"
  remarks: "\nThis property avoids the costly square root operation required by the Length property. This makes it more suitable\nfor comparisons.\n"
  example: []
  syntax:
    content: public double LengthSquared { get; }
    parameters: []
    return:
      type: System.Double
      description: "\nThe length squared.\n"
    content.vb: Public ReadOnly Property LengthSquared As Double
  overload: Fusee.Math.Core.double3.LengthSquared*
  see:
  - linkId: Fusee.Math.Core.double3.Length
    commentId: P:Fusee.Math.Core.double3.Length
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Math.Core.double3.Normalize
  commentId: M:Fusee.Math.Core.double3.Normalize
  id: Normalize
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Normalize()
  nameWithType: double3.Normalize()
  fullName: Fusee.Math.Core.double3.Normalize()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Normalize
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 185
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nScales the double3 to unit length.\n"
  example: []
  syntax:
    content: public double3 Normalize()
    return:
      type: Fusee.Math.Core.double3
    content.vb: Public Function Normalize As double3
  overload: Fusee.Math.Core.double3.Normalize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.double3.NormalizeFast
  commentId: M:Fusee.Math.Core.double3.NormalizeFast
  id: NormalizeFast
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: NormalizeFast()
  nameWithType: double3.NormalizeFast()
  fullName: Fusee.Math.Core.double3.NormalizeFast()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: NormalizeFast
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 197
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nScales the double3 to approximately unit length.\n"
  example: []
  syntax:
    content: public double3 NormalizeFast()
    return:
      type: Fusee.Math.Core.double3
    content.vb: Public Function NormalizeFast As double3
  overload: Fusee.Math.Core.double3.NormalizeFast*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.double3.ToArray
  commentId: M:Fusee.Math.Core.double3.ToArray
  id: ToArray
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: ToArray()
  nameWithType: double3.ToArray()
  fullName: Fusee.Math.Core.double3.ToArray()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: ToArray
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 208
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns an array of doubles with the three components of the vector.\n"
  example: []
  syntax:
    content: public double[] ToArray()
    return:
      type: System.Double[]
      description: Returns an array of doubles with the three components of the vector.
    content.vb: Public Function ToArray As Double()
  overload: Fusee.Math.Core.double3.ToArray*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.double3.IsNaN
  commentId: P:Fusee.Math.Core.double3.IsNaN
  id: IsNaN
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: IsNaN
  nameWithType: double3.IsNaN
  fullName: Fusee.Math.Core.double3.IsNaN
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: IsNaN
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 216
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns a bool which determines wether this float3 isNaN\n"
  example: []
  syntax:
    content: public bool IsNaN { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsNaN As Boolean
  overload: Fusee.Math.Core.double3.IsNaN*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Math.Core.double3.IsInfinity
  commentId: P:Fusee.Math.Core.double3.IsInfinity
  id: IsInfinity
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: IsInfinity
  nameWithType: double3.IsInfinity
  fullName: Fusee.Math.Core.double3.IsInfinity
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: IsInfinity
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 221
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns a bool which determines whether this double3 contains a infinity value\n"
  example: []
  syntax:
    content: public bool IsInfinity { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInfinity As Boolean
  overload: Fusee.Math.Core.double3.IsInfinity*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Math.Core.double3.UnitX
  commentId: F:Fusee.Math.Core.double3.UnitX
  id: UnitX
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: UnitX
  nameWithType: double3.UnitX
  fullName: Fusee.Math.Core.double3.UnitX
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: UnitX
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 232
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDefines a unit-length double3 that points towards the x-axis.\n"
  example: []
  syntax:
    content: public static readonly double3 UnitX
    return:
      type: Fusee.Math.Core.double3
    content.vb: Public Shared ReadOnly UnitX As double3
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Fusee.Math.Core.double3.UnitY
  commentId: F:Fusee.Math.Core.double3.UnitY
  id: UnitY
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: UnitY
  nameWithType: double3.UnitY
  fullName: Fusee.Math.Core.double3.UnitY
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: UnitY
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 237
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDefines a unit-length double3 that points towards the y-axis.\n"
  example: []
  syntax:
    content: public static readonly double3 UnitY
    return:
      type: Fusee.Math.Core.double3
    content.vb: Public Shared ReadOnly UnitY As double3
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Fusee.Math.Core.double3.UnitZ
  commentId: F:Fusee.Math.Core.double3.UnitZ
  id: UnitZ
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: UnitZ
  nameWithType: double3.UnitZ
  fullName: Fusee.Math.Core.double3.UnitZ
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: UnitZ
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 242
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDefines a unit-length double3 that points towards the z-axis.\n"
  example: []
  syntax:
    content: public static readonly double3 UnitZ
    return:
      type: Fusee.Math.Core.double3
    content.vb: Public Shared ReadOnly UnitZ As double3
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Fusee.Math.Core.double3.Zero
  commentId: F:Fusee.Math.Core.double3.Zero
  id: Zero
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Zero
  nameWithType: double3.Zero
  fullName: Fusee.Math.Core.double3.Zero
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Zero
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 247
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDefines a zero-length double3.\n"
  example: []
  syntax:
    content: public static readonly double3 Zero
    return:
      type: Fusee.Math.Core.double3
    content.vb: Public Shared ReadOnly Zero As double3
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Fusee.Math.Core.double3.One
  commentId: F:Fusee.Math.Core.double3.One
  id: One
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: One
  nameWithType: double3.One
  fullName: Fusee.Math.Core.double3.One
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: One
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 252
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDefines an instance with all components set to 1.\n"
  example: []
  syntax:
    content: public static readonly double3 One
    return:
      type: Fusee.Math.Core.double3
    content.vb: Public Shared ReadOnly One As double3
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Fusee.Math.Core.double3.PositiveInfinity
  commentId: P:Fusee.Math.Core.double3.PositiveInfinity
  id: PositiveInfinity
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: PositiveInfinity
  nameWithType: double3.PositiveInfinity
  fullName: Fusee.Math.Core.double3.PositiveInfinity
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: PositiveInfinity
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 266
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns a double3 which contains positive infinity values\n"
  example: []
  syntax:
    content: public static double3 PositiveInfinity { get; }
    parameters: []
    return:
      type: Fusee.Math.Core.double3
    content.vb: Public Shared ReadOnly Property PositiveInfinity As double3
  overload: Fusee.Math.Core.double3.PositiveInfinity*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Fusee.Math.Core.double3.NegativeInfinity
  commentId: P:Fusee.Math.Core.double3.NegativeInfinity
  id: NegativeInfinity
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: NegativeInfinity
  nameWithType: double3.NegativeInfinity
  fullName: Fusee.Math.Core.double3.NegativeInfinity
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: NegativeInfinity
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 271
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns a double3 which contains negative infinity values\n"
  example: []
  syntax:
    content: public static double3 NegativeInfinity { get; }
    parameters: []
    return:
      type: Fusee.Math.Core.double3
    content.vb: Public Shared ReadOnly Property NegativeInfinity As double3
  overload: Fusee.Math.Core.double3.NegativeInfinity*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Fusee.Math.Core.double3.Add(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  commentId: M:Fusee.Math.Core.double3.Add(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  id: Add(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Add(double3, double3)
  nameWithType: double3.Add(double3, double3)
  fullName: Fusee.Math.Core.double3.Add(Fusee.Math.Core.double3, Fusee.Math.Core.double3)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Add
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 285
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nAdds two vectors.\n"
  example: []
  syntax:
    content: public static double3 Add(double3 a, double3 b)
    parameters:
    - id: a
      type: Fusee.Math.Core.double3
      description: Left operand.
    - id: b
      type: Fusee.Math.Core.double3
      description: Right operand.
    return:
      type: Fusee.Math.Core.double3
      description: "\nResult of operation.\n"
    content.vb: Public Shared Function Add(a As double3, b As double3) As double3
  overload: Fusee.Math.Core.double3.Add*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.Subtract(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  commentId: M:Fusee.Math.Core.double3.Subtract(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  id: Subtract(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Subtract(double3, double3)
  nameWithType: double3.Subtract(double3, double3)
  fullName: Fusee.Math.Core.double3.Subtract(Fusee.Math.Core.double3, Fusee.Math.Core.double3)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Subtract
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 302
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nSubtract one Vector from another\n"
  example: []
  syntax:
    content: public static double3 Subtract(double3 a, double3 b)
    parameters:
    - id: a
      type: Fusee.Math.Core.double3
      description: First operand
    - id: b
      type: Fusee.Math.Core.double3
      description: Second operand
    return:
      type: Fusee.Math.Core.double3
      description: "\nResult of subtraction\n"
    content.vb: Public Shared Function Subtract(a As double3, b As double3) As double3
  overload: Fusee.Math.Core.double3.Subtract*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.Multiply(Fusee.Math.Core.double3,System.Double)
  commentId: M:Fusee.Math.Core.double3.Multiply(Fusee.Math.Core.double3,System.Double)
  id: Multiply(Fusee.Math.Core.double3,System.Double)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Multiply(double3, Double)
  nameWithType: double3.Multiply(double3, Double)
  fullName: Fusee.Math.Core.double3.Multiply(Fusee.Math.Core.double3, System.Double)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Multiply
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 319
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nMultiplies a vector by a scalar.\n"
  example: []
  syntax:
    content: public static double3 Multiply(double3 vector, double scale)
    parameters:
    - id: vector
      type: Fusee.Math.Core.double3
      description: Left operand.
    - id: scale
      type: System.Double
      description: Right operand.
    return:
      type: Fusee.Math.Core.double3
      description: "\nResult of the operation.\n"
    content.vb: Public Shared Function Multiply(vector As double3, scale As Double) As double3
  overload: Fusee.Math.Core.double3.Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.Multiply(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  commentId: M:Fusee.Math.Core.double3.Multiply(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  id: Multiply(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Multiply(double3, double3)
  nameWithType: double3.Multiply(double3, double3)
  fullName: Fusee.Math.Core.double3.Multiply(Fusee.Math.Core.double3, Fusee.Math.Core.double3)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Multiply
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 332
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nMultiplies a vector by the components a vector (scale).\n"
  example: []
  syntax:
    content: public static double3 Multiply(double3 vector, double3 scale)
    parameters:
    - id: vector
      type: Fusee.Math.Core.double3
      description: Left operand.
    - id: scale
      type: Fusee.Math.Core.double3
      description: Right operand.
    return:
      type: Fusee.Math.Core.double3
      description: "\nResult of the operation.\n"
    content.vb: Public Shared Function Multiply(vector As double3, scale As double3) As double3
  overload: Fusee.Math.Core.double3.Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.Divide(Fusee.Math.Core.double3,System.Double)
  commentId: M:Fusee.Math.Core.double3.Divide(Fusee.Math.Core.double3,System.Double)
  id: Divide(Fusee.Math.Core.double3,System.Double)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Divide(double3, Double)
  nameWithType: double3.Divide(double3, Double)
  fullName: Fusee.Math.Core.double3.Divide(Fusee.Math.Core.double3, System.Double)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Divide
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 349
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDivides a vector by a scalar.\n"
  example: []
  syntax:
    content: public static double3 Divide(double3 vector, double scale)
    parameters:
    - id: vector
      type: Fusee.Math.Core.double3
      description: Left operand.
    - id: scale
      type: System.Double
      description: Right operand.
    return:
      type: Fusee.Math.Core.double3
      description: "\nResult of the operation.\n"
    content.vb: Public Shared Function Divide(vector As double3, scale As Double) As double3
  overload: Fusee.Math.Core.double3.Divide*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.Divide(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  commentId: M:Fusee.Math.Core.double3.Divide(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  id: Divide(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Divide(double3, double3)
  nameWithType: double3.Divide(double3, double3)
  fullName: Fusee.Math.Core.double3.Divide(Fusee.Math.Core.double3, Fusee.Math.Core.double3)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Divide
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 362
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDivides a vector by the components of a vector (scale).\n"
  example: []
  syntax:
    content: public static double3 Divide(double3 vector, double3 scale)
    parameters:
    - id: vector
      type: Fusee.Math.Core.double3
      description: Left operand.
    - id: scale
      type: Fusee.Math.Core.double3
      description: Right operand.
    return:
      type: Fusee.Math.Core.double3
      description: "\nResult of the operation.\n"
    content.vb: Public Shared Function Divide(vector As double3, scale As double3) As double3
  overload: Fusee.Math.Core.double3.Divide*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.ComponentMin(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  commentId: M:Fusee.Math.Core.double3.ComponentMin(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  id: ComponentMin(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: ComponentMin(double3, double3)
  nameWithType: double3.ComponentMin(double3, double3)
  fullName: Fusee.Math.Core.double3.ComponentMin(Fusee.Math.Core.double3, Fusee.Math.Core.double3)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: ComponentMin
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 379
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCalculate the component-wise minimum of two vectors\n"
  example: []
  syntax:
    content: public static double3 ComponentMin(double3 a, double3 b)
    parameters:
    - id: a
      type: Fusee.Math.Core.double3
      description: First operand
    - id: b
      type: Fusee.Math.Core.double3
      description: Second operand
    return:
      type: Fusee.Math.Core.double3
      description: "\nThe component-wise minimum\n"
    content.vb: Public Shared Function ComponentMin(a As double3, b As double3) As double3
  overload: Fusee.Math.Core.double3.ComponentMin*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.ComponentMax(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  commentId: M:Fusee.Math.Core.double3.ComponentMax(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  id: ComponentMax(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: ComponentMax(double3, double3)
  nameWithType: double3.ComponentMax(double3, double3)
  fullName: Fusee.Math.Core.double3.ComponentMax(Fusee.Math.Core.double3, Fusee.Math.Core.double3)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: ComponentMax
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 399
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCalculate the component-wise maximum of two vectors\n"
  example: []
  syntax:
    content: public static double3 ComponentMax(double3 a, double3 b)
    parameters:
    - id: a
      type: Fusee.Math.Core.double3
      description: First operand
    - id: b
      type: Fusee.Math.Core.double3
      description: Second operand
    return:
      type: Fusee.Math.Core.double3
      description: "\nThe component-wise maximum\n"
    content.vb: Public Shared Function ComponentMax(a As double3, b As double3) As double3
  overload: Fusee.Math.Core.double3.ComponentMax*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.Min(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  commentId: M:Fusee.Math.Core.double3.Min(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  id: Min(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Min(double3, double3)
  nameWithType: double3.Min(double3, double3)
  fullName: Fusee.Math.Core.double3.Min(Fusee.Math.Core.double3, Fusee.Math.Core.double3)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Min
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 419
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns the double3 with the minimum magnitude\n"
  example: []
  syntax:
    content: public static double3 Min(double3 left, double3 right)
    parameters:
    - id: left
      type: Fusee.Math.Core.double3
      description: Left operand
    - id: right
      type: Fusee.Math.Core.double3
      description: Right operand
    return:
      type: Fusee.Math.Core.double3
      description: "\nThe minimum double3\n"
    content.vb: Public Shared Function Min(left As double3, right As double3) As double3
  overload: Fusee.Math.Core.double3.Min*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.Max(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  commentId: M:Fusee.Math.Core.double3.Max(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  id: Max(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Max(double3, double3)
  nameWithType: double3.Max(double3, double3)
  fullName: Fusee.Math.Core.double3.Max(Fusee.Math.Core.double3, Fusee.Math.Core.double3)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Max
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 436
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns the double3 with the minimum magnitude\n"
  example: []
  syntax:
    content: public static double3 Max(double3 left, double3 right)
    parameters:
    - id: left
      type: Fusee.Math.Core.double3
      description: Left operand
    - id: right
      type: Fusee.Math.Core.double3
      description: Right operand
    return:
      type: Fusee.Math.Core.double3
      description: "\nThe minimum double3\n"
    content.vb: Public Shared Function Max(left As double3, right As double3) As double3
  overload: Fusee.Math.Core.double3.Max*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.Clamp(Fusee.Math.Core.double3,Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  commentId: M:Fusee.Math.Core.double3.Clamp(Fusee.Math.Core.double3,Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  id: Clamp(Fusee.Math.Core.double3,Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Clamp(double3, double3, double3)
  nameWithType: double3.Clamp(double3, double3, double3)
  fullName: Fusee.Math.Core.double3.Clamp(Fusee.Math.Core.double3, Fusee.Math.Core.double3, Fusee.Math.Core.double3)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Clamp
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 454
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nClamp a vector to the given minimum and maximum vectors\n"
  example: []
  syntax:
    content: public static double3 Clamp(double3 vec, double3 min, double3 max)
    parameters:
    - id: vec
      type: Fusee.Math.Core.double3
      description: Input vector
    - id: min
      type: Fusee.Math.Core.double3
      description: Minimum vector
    - id: max
      type: Fusee.Math.Core.double3
      description: Maximum vector
    return:
      type: Fusee.Math.Core.double3
      description: "\nThe clamped vector\n"
    content.vb: Public Shared Function Clamp(vec As double3, min As double3, max As double3) As double3
  overload: Fusee.Math.Core.double3.Clamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.Normalize(Fusee.Math.Core.double3)
  commentId: M:Fusee.Math.Core.double3.Normalize(Fusee.Math.Core.double3)
  id: Normalize(Fusee.Math.Core.double3)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Normalize(double3)
  nameWithType: double3.Normalize(double3)
  fullName: Fusee.Math.Core.double3.Normalize(Fusee.Math.Core.double3)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Normalize
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 473
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nScale a vector to unit length\n"
  example: []
  syntax:
    content: public static double3 Normalize(double3 vec)
    parameters:
    - id: vec
      type: Fusee.Math.Core.double3
      description: The input vector
    return:
      type: Fusee.Math.Core.double3
      description: "\nThe normalized vector\n"
    content.vb: Public Shared Function Normalize(vec As double3) As double3
  overload: Fusee.Math.Core.double3.Normalize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.NormalizeFast(Fusee.Math.Core.double3)
  commentId: M:Fusee.Math.Core.double3.NormalizeFast(Fusee.Math.Core.double3)
  id: NormalizeFast(Fusee.Math.Core.double3)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: NormalizeFast(double3)
  nameWithType: double3.NormalizeFast(double3)
  fullName: Fusee.Math.Core.double3.NormalizeFast(Fusee.Math.Core.double3)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: NormalizeFast
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 493
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nScale a vector to approximately unit length\n"
  example: []
  syntax:
    content: public static double3 NormalizeFast(double3 vec)
    parameters:
    - id: vec
      type: Fusee.Math.Core.double3
      description: The input vector
    return:
      type: Fusee.Math.Core.double3
      description: "\nThe normalized vector\n"
    content.vb: Public Shared Function NormalizeFast(vec As double3) As double3
  overload: Fusee.Math.Core.double3.NormalizeFast*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.Dot(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  commentId: M:Fusee.Math.Core.double3.Dot(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  id: Dot(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Dot(double3, double3)
  nameWithType: double3.Dot(double3, double3)
  fullName: Fusee.Math.Core.double3.Dot(Fusee.Math.Core.double3, Fusee.Math.Core.double3)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Dot
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 514
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCalculate the dot (scalar) product of two vectors\n"
  example: []
  syntax:
    content: public static double Dot(double3 left, double3 right)
    parameters:
    - id: left
      type: Fusee.Math.Core.double3
      description: First operand
    - id: right
      type: Fusee.Math.Core.double3
      description: Second operand
    return:
      type: System.Double
      description: "\nThe dot product of the two inputs\n"
    content.vb: Public Shared Function Dot(left As double3, right As double3) As Double
  overload: Fusee.Math.Core.double3.Dot*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.Cross(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  commentId: M:Fusee.Math.Core.double3.Cross(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  id: Cross(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Cross(double3, double3)
  nameWithType: double3.Cross(double3, double3)
  fullName: Fusee.Math.Core.double3.Cross(Fusee.Math.Core.double3, Fusee.Math.Core.double3)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Cross
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 531
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCaclulate the cross (vector) product of two vectors\n"
  example: []
  syntax:
    content: public static double3 Cross(double3 left, double3 right)
    parameters:
    - id: left
      type: Fusee.Math.Core.double3
      description: First operand
    - id: right
      type: Fusee.Math.Core.double3
      description: Second operand
    return:
      type: Fusee.Math.Core.double3
      description: "\nThe cross product of the two inputs\n"
    content.vb: Public Shared Function Cross(left As double3, right As double3) As double3
  overload: Fusee.Math.Core.double3.Cross*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.Lerp(Fusee.Math.Core.double3,Fusee.Math.Core.double3,System.Double)
  commentId: M:Fusee.Math.Core.double3.Lerp(Fusee.Math.Core.double3,Fusee.Math.Core.double3,System.Double)
  id: Lerp(Fusee.Math.Core.double3,Fusee.Math.Core.double3,System.Double)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Lerp(double3, double3, Double)
  nameWithType: double3.Lerp(double3, double3, Double)
  fullName: Fusee.Math.Core.double3.Lerp(Fusee.Math.Core.double3, Fusee.Math.Core.double3, System.Double)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Lerp
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 553
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns a new Vector that is the linear blend of the 2 given Vectors\n"
  example: []
  syntax:
    content: public static double3 Lerp(double3 a, double3 b, double blend)
    parameters:
    - id: a
      type: Fusee.Math.Core.double3
      description: First input vector
    - id: b
      type: Fusee.Math.Core.double3
      description: Second input vector
    - id: blend
      type: System.Double
      description: The blend factor. a when blend=0, b when blend=1.
    return:
      type: Fusee.Math.Core.double3
      description: "\na when blend=0, b when blend=1, and a linear combination otherwise\n"
    content.vb: Public Shared Function Lerp(a As double3, b As double3, blend As Double) As double3
  overload: Fusee.Math.Core.double3.Lerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.Barycentric(Fusee.Math.Core.double3,Fusee.Math.Core.double3,Fusee.Math.Core.double3,System.Double,System.Double)
  commentId: M:Fusee.Math.Core.double3.Barycentric(Fusee.Math.Core.double3,Fusee.Math.Core.double3,Fusee.Math.Core.double3,System.Double,System.Double)
  id: Barycentric(Fusee.Math.Core.double3,Fusee.Math.Core.double3,Fusee.Math.Core.double3,System.Double,System.Double)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Barycentric(double3, double3, double3, Double, Double)
  nameWithType: double3.Barycentric(double3, double3, double3, Double, Double)
  fullName: Fusee.Math.Core.double3.Barycentric(Fusee.Math.Core.double3, Fusee.Math.Core.double3, Fusee.Math.Core.double3, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Barycentric
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 576
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nInterpolate 3 Vectors using Barycentric coordinates\n"
  example: []
  syntax:
    content: public static double3 Barycentric(double3 a, double3 b, double3 c, double u, double v)
    parameters:
    - id: a
      type: Fusee.Math.Core.double3
      description: First input Vector
    - id: b
      type: Fusee.Math.Core.double3
      description: Second input Vector
    - id: c
      type: Fusee.Math.Core.double3
      description: Third input Vector
    - id: u
      type: System.Double
      description: First Barycentric Coordinate
    - id: v
      type: System.Double
      description: Second Barycentric Coordinate
    return:
      type: Fusee.Math.Core.double3
      description: "\na when u=v=0, b when u=1,v=0, c when u=0,v=1, and a linear combination of a,b,c otherwise\n"
    content.vb: Public Shared Function Barycentric(a As double3, b As double3, c As double3, u As Double, v As Double) As double3
  overload: Fusee.Math.Core.double3.Barycentric*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.GetBarycentric(Fusee.Math.Core.double3,Fusee.Math.Core.double3,Fusee.Math.Core.double3,Fusee.Math.Core.double3,System.Double@,System.Double@)
  commentId: M:Fusee.Math.Core.double3.GetBarycentric(Fusee.Math.Core.double3,Fusee.Math.Core.double3,Fusee.Math.Core.double3,Fusee.Math.Core.double3,System.Double@,System.Double@)
  id: GetBarycentric(Fusee.Math.Core.double3,Fusee.Math.Core.double3,Fusee.Math.Core.double3,Fusee.Math.Core.double3,System.Double@,System.Double@)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: GetBarycentric(double3, double3, double3, double3, out Double, out Double)
  nameWithType: double3.GetBarycentric(double3, double3, double3, double3, out Double, out Double)
  fullName: Fusee.Math.Core.double3.GetBarycentric(Fusee.Math.Core.double3, Fusee.Math.Core.double3, Fusee.Math.Core.double3, Fusee.Math.Core.double3, out System.Double, out System.Double)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: GetBarycentric
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 590
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCalculates the barycentric coordinates for the given point in the given triangle, such that u*a + v*b + (1-u-v)*c = point.\n"
  example: []
  syntax:
    content: public static void GetBarycentric(double3 a, double3 b, double3 c, double3 point, out double u, out double v)
    parameters:
    - id: a
      type: Fusee.Math.Core.double3
      description: The first point of the triangle.
    - id: b
      type: Fusee.Math.Core.double3
      description: The second point of the triangle.
    - id: c
      type: Fusee.Math.Core.double3
      description: The third point of the triangle.
    - id: point
      type: Fusee.Math.Core.double3
      description: The point to calculate the barycentric coordinates for.
    - id: u
      type: System.Double
      description: The resulting u coordinate.
    - id: v
      type: System.Double
      description: The resulting v coordinate.
    content.vb: Public Shared Sub GetBarycentric(a As double3, b As double3, c As double3, point As double3, ByRef u As Double, ByRef v As Double)
  overload: Fusee.Math.Core.double3.GetBarycentric*
  nameWithType.vb: double3.GetBarycentric(double3, double3, double3, double3, ByRef Double, ByRef Double)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Fusee.Math.Core.double3.GetBarycentric(Fusee.Math.Core.double3, Fusee.Math.Core.double3, Fusee.Math.Core.double3, Fusee.Math.Core.double3, ByRef System.Double, ByRef System.Double)
  name.vb: GetBarycentric(double3, double3, double3, double3, ByRef Double, ByRef Double)
- uid: Fusee.Math.Core.double3.Rotate(Fusee.Math.Core.double3,Fusee.Math.Core.double3,System.Boolean)
  commentId: M:Fusee.Math.Core.double3.Rotate(Fusee.Math.Core.double3,Fusee.Math.Core.double3,System.Boolean)
  id: Rotate(Fusee.Math.Core.double3,Fusee.Math.Core.double3,System.Boolean)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Rotate(double3, double3, Boolean)
  nameWithType: double3.Rotate(double3, double3, Boolean)
  fullName: Fusee.Math.Core.double3.Rotate(Fusee.Math.Core.double3, Fusee.Math.Core.double3, System.Boolean)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Rotate
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 616
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nRotates a vector by the given euler-angles in the following order: yaw (y-axis), pitch (x-axis), roll (z-axis).\n"
  example: []
  syntax:
    content: public static double3 Rotate(double3 euler, double3 vec, bool inDegrees = false)
    parameters:
    - id: euler
      type: Fusee.Math.Core.double3
      description: The angles used for the rotation.
    - id: vec
      type: Fusee.Math.Core.double3
      description: The vector to rotate.
    - id: inDegrees
      type: System.Boolean
      description: 'Optional: Whether the angles are given in degrees (true) or radians (false). Defautl is radians.'
    return:
      type: Fusee.Math.Core.double3
      description: The rotated vector.
    content.vb: Public Shared Function Rotate(euler As double3, vec As double3, inDegrees As Boolean = False) As double3
  overload: Fusee.Math.Core.double3.Rotate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.Rotate(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.double3)
  commentId: M:Fusee.Math.Core.double3.Rotate(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.double3)
  id: Rotate(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.double3)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Rotate(QuaternionD, double3)
  nameWithType: double3.Rotate(QuaternionD, double3)
  fullName: Fusee.Math.Core.double3.Rotate(Fusee.Math.Core.QuaternionD, Fusee.Math.Core.double3)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Rotate
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 644
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nRotates a vector by the given quaternion.\n"
  example: []
  syntax:
    content: public static double3 Rotate(QuaternionD quat, double3 vec)
    parameters:
    - id: quat
      type: Fusee.Math.Core.QuaternionD
      description: The quaternion used for the rotation.
    - id: vec
      type: Fusee.Math.Core.double3
      description: The vector to rotate.
    return:
      type: Fusee.Math.Core.double3
      description: The rotated vector.
    content.vb: Public Shared Function Rotate(quat As QuaternionD, vec As double3) As double3
  overload: Fusee.Math.Core.double3.Rotate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.CalculateAngle(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  commentId: M:Fusee.Math.Core.double3.CalculateAngle(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  id: CalculateAngle(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: CalculateAngle(double3, double3)
  nameWithType: double3.CalculateAngle(double3, double3)
  fullName: Fusee.Math.Core.double3.CalculateAngle(Fusee.Math.Core.double3, Fusee.Math.Core.double3)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: CalculateAngle
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 670
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCalculates the angle (in radians) between two vectors.\n"
  remarks: "\nNote that the returned angle is never bigger than the constant Pi.\n"
  example: []
  syntax:
    content: public static double CalculateAngle(double3 first, double3 second)
    parameters:
    - id: first
      type: Fusee.Math.Core.double3
      description: The first vector.
    - id: second
      type: Fusee.Math.Core.double3
      description: The second vector.
    return:
      type: System.Double
      description: "\nAngle (in radians) between the vectors.\n"
    content.vb: Public Shared Function CalculateAngle(first As double3, second As double3) As Double
  overload: Fusee.Math.Core.double3.CalculateAngle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.xy
  commentId: P:Fusee.Math.Core.double3.xy
  id: xy
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: xy
  nameWithType: double3.xy
  fullName: Fusee.Math.Core.double3.xy
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: xy
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 687
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets and sets an OpenTK.double2 with the x and y components of this instance.\n"
  example: []
  syntax:
    content: public double2 xy { get; set; }
    parameters: []
    return:
      type: Fusee.Math.Core.double2
      description: "\nThe xy.\n"
    content.vb: Public Property xy As double2
  overload: Fusee.Math.Core.double3.xy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.double3.xyz
  commentId: P:Fusee.Math.Core.double3.xyz
  id: xyz
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: xyz
  nameWithType: double3.xyz
  fullName: Fusee.Math.Core.double3.xyz
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: xyz
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 692
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets or sets an OpenTK.float3 with the x, y and z components of this instance.\n"
  example: []
  syntax:
    content: public double3 xyz { get; set; }
    parameters: []
    return:
      type: Fusee.Math.Core.double3
    content.vb: Public Property xyz As double3
  overload: Fusee.Math.Core.double3.xyz*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.double3.xzy
  commentId: P:Fusee.Math.Core.double3.xzy
  id: xzy
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: xzy
  nameWithType: double3.xzy
  fullName: Fusee.Math.Core.double3.xzy
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: xzy
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 697
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets or sets an OpenTK.float3 with the x, z and y components of this instance.\n"
  example: []
  syntax:
    content: public double3 xzy { get; set; }
    parameters: []
    return:
      type: Fusee.Math.Core.double3
    content.vb: Public Property xzy As double3
  overload: Fusee.Math.Core.double3.xzy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.double3.yzx
  commentId: P:Fusee.Math.Core.double3.yzx
  id: yzx
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: yzx
  nameWithType: double3.yzx
  fullName: Fusee.Math.Core.double3.yzx
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: yzx
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 702
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets or sets an OpenTK.float3 with the y, z and x components of this instance.\n"
  example: []
  syntax:
    content: public double3 yzx { get; set; }
    parameters: []
    return:
      type: Fusee.Math.Core.double3
    content.vb: Public Property yzx As double3
  overload: Fusee.Math.Core.double3.yzx*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.double3.yxz
  commentId: P:Fusee.Math.Core.double3.yxz
  id: yxz
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: yxz
  nameWithType: double3.yxz
  fullName: Fusee.Math.Core.double3.yxz
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: yxz
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 707
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets or sets an OpenTK.float3 with the y, x and z components of this instance.\n"
  example: []
  syntax:
    content: public double3 yxz { get; set; }
    parameters: []
    return:
      type: Fusee.Math.Core.double3
    content.vb: Public Property yxz As double3
  overload: Fusee.Math.Core.double3.yxz*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.double3.zxy
  commentId: P:Fusee.Math.Core.double3.zxy
  id: zxy
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: zxy
  nameWithType: double3.zxy
  fullName: Fusee.Math.Core.double3.zxy
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: zxy
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 712
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets or sets an OpenTK.float3 with the z, x and y components of this instance.\n"
  example: []
  syntax:
    content: public double3 zxy { get; set; }
    parameters: []
    return:
      type: Fusee.Math.Core.double3
    content.vb: Public Property zxy As double3
  overload: Fusee.Math.Core.double3.zxy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.double3.zyx
  commentId: P:Fusee.Math.Core.double3.zyx
  id: zyx
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: zyx
  nameWithType: double3.zyx
  fullName: Fusee.Math.Core.double3.zyx
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: zyx
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 717
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets or sets an OpenTK.float3 with the z, y and x components of this instance.\n"
  example: []
  syntax:
    content: public double3 zyx { get; set; }
    parameters: []
    return:
      type: Fusee.Math.Core.double3
    content.vb: Public Property zyx As double3
  overload: Fusee.Math.Core.double3.zyx*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.double3.op_Addition(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  commentId: M:Fusee.Math.Core.double3.op_Addition(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  id: op_Addition(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Addition(double3, double3)
  nameWithType: double3.Addition(double3, double3)
  fullName: Fusee.Math.Core.double3.Addition(Fusee.Math.Core.double3, Fusee.Math.Core.double3)
  type: Operator
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: op_Addition
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 731
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nAdds two instances.\n"
  example: []
  syntax:
    content: public static double3 operator +(double3 left, double3 right)
    parameters:
    - id: left
      type: Fusee.Math.Core.double3
      description: The first instance.
    - id: right
      type: Fusee.Math.Core.double3
      description: The second instance.
    return:
      type: Fusee.Math.Core.double3
      description: "\nThe result of the calculation.\n"
    content.vb: Public Shared Operator +(left As double3, right As double3) As double3
  overload: Fusee.Math.Core.double3.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.op_Subtraction(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  commentId: M:Fusee.Math.Core.double3.op_Subtraction(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  id: op_Subtraction(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Subtraction(double3, double3)
  nameWithType: double3.Subtraction(double3, double3)
  fullName: Fusee.Math.Core.double3.Subtraction(Fusee.Math.Core.double3, Fusee.Math.Core.double3)
  type: Operator
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: op_Subtraction
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 744
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nSubtracts two instances.\n"
  example: []
  syntax:
    content: public static double3 operator -(double3 left, double3 right)
    parameters:
    - id: left
      type: Fusee.Math.Core.double3
      description: The first instance.
    - id: right
      type: Fusee.Math.Core.double3
      description: The second instance.
    return:
      type: Fusee.Math.Core.double3
      description: "\nThe result of the calculation.\n"
    content.vb: Public Shared Operator -(left As double3, right As double3) As double3
  overload: Fusee.Math.Core.double3.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.op_UnaryNegation(Fusee.Math.Core.double3)
  commentId: M:Fusee.Math.Core.double3.op_UnaryNegation(Fusee.Math.Core.double3)
  id: op_UnaryNegation(Fusee.Math.Core.double3)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: UnaryNegation(double3)
  nameWithType: double3.UnaryNegation(double3)
  fullName: Fusee.Math.Core.double3.UnaryNegation(Fusee.Math.Core.double3)
  type: Operator
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: op_UnaryNegation
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 756
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nNegates an instance.\n"
  example: []
  syntax:
    content: public static double3 operator -(double3 vec)
    parameters:
    - id: vec
      type: Fusee.Math.Core.double3
      description: The instance.
    return:
      type: Fusee.Math.Core.double3
      description: "\nThe result of the calculation.\n"
    content.vb: Public Shared Operator -(vec As double3) As double3
  overload: Fusee.Math.Core.double3.op_UnaryNegation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.op_Multiply(Fusee.Math.Core.double3,System.Double)
  commentId: M:Fusee.Math.Core.double3.op_Multiply(Fusee.Math.Core.double3,System.Double)
  id: op_Multiply(Fusee.Math.Core.double3,System.Double)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Multiply(double3, Double)
  nameWithType: double3.Multiply(double3, Double)
  fullName: Fusee.Math.Core.double3.Multiply(Fusee.Math.Core.double3, System.Double)
  type: Operator
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: op_Multiply
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 772
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nMultiplies an instance by a scalar.\n"
  example: []
  syntax:
    content: public static double3 operator *(double3 vec, double scale)
    parameters:
    - id: vec
      type: Fusee.Math.Core.double3
      description: The instance.
    - id: scale
      type: System.Double
      description: The scalar.
    return:
      type: Fusee.Math.Core.double3
      description: "\nThe result of the calculation.\n"
    content.vb: Public Shared Operator *(vec As double3, scale As Double) As double3
  overload: Fusee.Math.Core.double3.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.op_Multiply(System.Double,Fusee.Math.Core.double3)
  commentId: M:Fusee.Math.Core.double3.op_Multiply(System.Double,Fusee.Math.Core.double3)
  id: op_Multiply(System.Double,Fusee.Math.Core.double3)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Multiply(Double, double3)
  nameWithType: double3.Multiply(Double, double3)
  fullName: Fusee.Math.Core.double3.Multiply(System.Double, Fusee.Math.Core.double3)
  type: Operator
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: op_Multiply
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 785
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nMultiplies an instance by a scalar.\n"
  example: []
  syntax:
    content: public static double3 operator *(double scale, double3 vec)
    parameters:
    - id: scale
      type: System.Double
      description: The scalar.
    - id: vec
      type: Fusee.Math.Core.double3
      description: The instance.
    return:
      type: Fusee.Math.Core.double3
      description: "\nThe result of the calculation.\n"
    content.vb: Public Shared Operator *(scale As Double, vec As double3) As double3
  overload: Fusee.Math.Core.double3.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.op_Multiply(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  commentId: M:Fusee.Math.Core.double3.op_Multiply(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  id: op_Multiply(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Multiply(double3, double3)
  nameWithType: double3.Multiply(double3, double3)
  fullName: Fusee.Math.Core.double3.Multiply(Fusee.Math.Core.double3, Fusee.Math.Core.double3)
  type: Operator
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: op_Multiply
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 798
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nMultiplies a vector by the components a vector (scale).\n"
  example: []
  syntax:
    content: public static double3 operator *(double3 vec, double3 scale)
    parameters:
    - id: vec
      type: Fusee.Math.Core.double3
      description: Left operand.
    - id: scale
      type: Fusee.Math.Core.double3
      description: Right operand.
    return:
      type: Fusee.Math.Core.double3
      description: "\nResult of the operation.\n"
    content.vb: Public Shared Operator *(vec As double3, scale As double3) As double3
  overload: Fusee.Math.Core.double3.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.op_Division(Fusee.Math.Core.double3,System.Double)
  commentId: M:Fusee.Math.Core.double3.op_Division(Fusee.Math.Core.double3,System.Double)
  id: op_Division(Fusee.Math.Core.double3,System.Double)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Division(double3, Double)
  nameWithType: double3.Division(double3, Double)
  fullName: Fusee.Math.Core.double3.Division(Fusee.Math.Core.double3, System.Double)
  type: Operator
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: op_Division
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 811
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDivides an instance by a scalar.\n"
  example: []
  syntax:
    content: public static double3 operator /(double3 vec, double scale)
    parameters:
    - id: vec
      type: Fusee.Math.Core.double3
      description: The instance.
    - id: scale
      type: System.Double
      description: The scalar.
    return:
      type: Fusee.Math.Core.double3
      description: "\nThe result of the calculation.\n"
    content.vb: Public Shared Operator /(vec As double3, scale As Double) As double3
  overload: Fusee.Math.Core.double3.op_Division*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.op_Equality(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  commentId: M:Fusee.Math.Core.double3.op_Equality(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  id: op_Equality(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Equality(double3, double3)
  nameWithType: double3.Equality(double3, double3)
  fullName: Fusee.Math.Core.double3.Equality(Fusee.Math.Core.double3, Fusee.Math.Core.double3)
  type: Operator
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: op_Equality
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 824
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCompares two instances for equality.\n"
  example: []
  syntax:
    content: public static bool operator ==(double3 left, double3 right)
    parameters:
    - id: left
      type: Fusee.Math.Core.double3
      description: The first instance.
    - id: right
      type: Fusee.Math.Core.double3
      description: The second instance.
    return:
      type: System.Boolean
      description: "\nTrue, if left equals right; false otherwise.\n"
    content.vb: Public Shared Operator =(left As double3, right As double3) As Boolean
  overload: Fusee.Math.Core.double3.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.op_Inequality(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  commentId: M:Fusee.Math.Core.double3.op_Inequality(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  id: op_Inequality(Fusee.Math.Core.double3,Fusee.Math.Core.double3)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Inequality(double3, double3)
  nameWithType: double3.Inequality(double3, double3)
  fullName: Fusee.Math.Core.double3.Inequality(Fusee.Math.Core.double3, Fusee.Math.Core.double3)
  type: Operator
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: op_Inequality
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 837
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCompares two instances for inequality.\n"
  example: []
  syntax:
    content: public static bool operator !=(double3 left, double3 right)
    parameters:
    - id: left
      type: Fusee.Math.Core.double3
      description: The first instance.
    - id: right
      type: Fusee.Math.Core.double3
      description: The second instance.
    return:
      type: System.Boolean
      description: "\nTrue, if left does not equa lright; false otherwise.\n"
    content.vb: Public Shared Operator <>(left As double3, right As double3) As Boolean
  overload: Fusee.Math.Core.double3.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.ToString
  commentId: M:Fusee.Math.Core.double3.ToString
  id: ToString
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: double3.ToString()
  fullName: Fusee.Math.Core.double3.ToString()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: ToString
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 854
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns a System.String that represents the current double3.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Fusee.Math.Core.double3.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Fusee.Math.Core.double3.ToString(System.IFormatProvider)
  commentId: M:Fusee.Math.Core.double3.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  nameWithType: double3.ToString(IFormatProvider)
  fullName: Fusee.Math.Core.double3.ToString(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: ToString
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 866
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns a System.String that represents the current double3.\n"
  example: []
  syntax:
    content: public string ToString(IFormatProvider provider)
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: Provides information about a specific culture.
    return:
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
    content.vb: Public Function ToString(provider As IFormatProvider) As String
  overload: Fusee.Math.Core.double3.ToString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.double3.GetHashCode
  commentId: M:Fusee.Math.Core.double3.GetHashCode
  id: GetHashCode
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: double3.GetHashCode()
  fullName: Fusee.Math.Core.double3.GetHashCode()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: GetHashCode
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 891
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns the hashcode for this instance.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: "\nA System.Int32 containing the unique hashcode for this instance.\n"
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: Fusee.Math.Core.double3.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Fusee.Math.Core.double3.Equals(System.Object)
  commentId: M:Fusee.Math.Core.double3.Equals(System.Object)
  id: Equals(System.Object)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: double3.Equals(Object)
  fullName: Fusee.Math.Core.double3.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Equals
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 907
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nIndicates whether this instance and a specified object are equal.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object to compare to.
    return:
      type: System.Boolean
      description: "\nTrue if the instances are equal; false otherwise.\n"
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Fusee.Math.Core.double3.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Fusee.Math.Core.double3.r
  commentId: P:Fusee.Math.Core.double3.r
  id: r
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: r
  nameWithType: double3.r
  fullName: Fusee.Math.Core.double3.r
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: r
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 924
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nThe red component (same as x)\n"
  example: []
  syntax:
    content: public double r { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property r As Double
  overload: Fusee.Math.Core.double3.r*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.double3.g
  commentId: P:Fusee.Math.Core.double3.g
  id: g
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: g
  nameWithType: double3.g
  fullName: Fusee.Math.Core.double3.g
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: g
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 933
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nThe green component (same as y)\n"
  example: []
  syntax:
    content: public double g { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property g As Double
  overload: Fusee.Math.Core.double3.g*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.double3.b
  commentId: P:Fusee.Math.Core.double3.b
  id: b
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: b
  nameWithType: double3.b
  fullName: Fusee.Math.Core.double3.b
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: b
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 942
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nThe blue component (same as z)\n"
  example: []
  syntax:
    content: public double b { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property b As Double
  overload: Fusee.Math.Core.double3.b*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.double3.Equals(Fusee.Math.Core.double3)
  commentId: M:Fusee.Math.Core.double3.Equals(Fusee.Math.Core.double3)
  id: Equals(Fusee.Math.Core.double3)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Equals(double3)
  nameWithType: double3.Equals(double3)
  fullName: Fusee.Math.Core.double3.Equals(Fusee.Math.Core.double3)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Equals
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 961
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nIndicates whether the current vector is equal to another vector.\n"
  example: []
  syntax:
    content: public bool Equals(double3 other)
    parameters:
    - id: other
      type: Fusee.Math.Core.double3
      description: A vector to compare with this vector.
    return:
      type: System.Boolean
      description: "\ntrue if the current vector is equal to the vector parameter; otherwise, false.\n"
    content.vb: Public Function Equals(other As double3) As Boolean
  overload: Fusee.Math.Core.double3.Equals*
  implements:
  - System.IEquatable{Fusee.Math.Core.double3}.Equals(Fusee.Math.Core.double3)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.double3.ParseConverter
  commentId: P:Fusee.Math.Core.double3.ParseConverter
  id: ParseConverter
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: ParseConverter
  nameWithType: double3.ParseConverter
  fullName: Fusee.Math.Core.double3.ParseConverter
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: ParseConverter
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 977
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets and sets the Converter object. Has the ability to convert a string to a double3.\n"
  example: []
  syntax:
    content: public static Converter<string, double3> ParseConverter { get; set; }
    parameters: []
    return:
      type: Fusee.Math.Core.Converter{System.String,Fusee.Math.Core.double3}
      description: "\nThe parse property.\n"
    content.vb: Public Shared Property ParseConverter As Converter(Of String, double3)
  overload: Fusee.Math.Core.double3.ParseConverter*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.double3.Parse(System.String,System.IFormatProvider)
  commentId: M:Fusee.Math.Core.double3.Parse(System.String,System.IFormatProvider)
  id: Parse(System.String,System.IFormatProvider)
  parent: Fusee.Math.Core.double3
  langs:
  - csharp
  - vb
  name: Parse(String, IFormatProvider)
  nameWithType: double3.Parse(String, IFormatProvider)
  fullName: Fusee.Math.Core.double3.Parse(System.String, System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/double3.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Parse
    path: src/Fusee/src/Math/Core/double3.cs
    startLine: 985
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nParses a string into a double3.\n"
  example: []
  syntax:
    content: public static double3 Parse(string source, IFormatProvider provider = null)
    parameters:
    - id: source
      type: System.String
      description: ''
    - id: provider
      type: System.IFormatProvider
      description: ''
    return:
      type: Fusee.Math.Core.double3
      description: ''
    content.vb: Public Shared Function Parse(source As String, provider As IFormatProvider = Nothing) As double3
  overload: Fusee.Math.Core.double3.Parse*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Fusee.Math.Core
  commentId: N:Fusee.Math.Core
  name: Fusee.Math.Core
  nameWithType: Fusee.Math.Core
  fullName: Fusee.Math.Core
- uid: System.IEquatable{Fusee.Math.Core.double3}
  commentId: T:System.IEquatable{Fusee.Math.Core.double3}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<double3>
  nameWithType: IEquatable<double3>
  fullName: System.IEquatable<Fusee.Math.Core.double3>
  nameWithType.vb: IEquatable(Of double3)
  fullName.vb: System.IEquatable(Of Fusee.Math.Core.double3)
  name.vb: IEquatable(Of double3)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Fusee.Math.Core.double3
    name: double3
    nameWithType: double3
    fullName: Fusee.Math.Core.double3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Fusee.Math.Core.double3
    name: double3
    nameWithType: double3
    fullName: Fusee.Math.Core.double3
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Fusee.Math.Core.double3.#ctor*
  commentId: Overload:Fusee.Math.Core.double3.#ctor
  name: double3
  nameWithType: double3.double3
  fullName: Fusee.Math.Core.double3.double3
- uid: Fusee.Math.Core.double2
  commentId: T:Fusee.Math.Core.double2
  parent: Fusee.Math.Core
  name: double2
  nameWithType: double2
  fullName: Fusee.Math.Core.double2
- uid: Fusee.Math.Core.double3
  commentId: T:Fusee.Math.Core.double3
  parent: Fusee.Math.Core
  name: double3
  nameWithType: double3
  fullName: Fusee.Math.Core.double3
- uid: Fusee.Math.Core.double4
  commentId: T:Fusee.Math.Core.double4
  parent: Fusee.Math.Core
  name: double4
  nameWithType: double4
  fullName: Fusee.Math.Core.double4
- uid: Fusee.Math.Core.double3.Item*
  commentId: Overload:Fusee.Math.Core.double3.Item
  name: Item
  nameWithType: double3.Item
  fullName: Fusee.Math.Core.double3.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Fusee.Math.Core.double3.LengthSquared
  commentId: P:Fusee.Math.Core.double3.LengthSquared
  isExternal: true
- uid: Fusee.Math.Core.double3.Length*
  commentId: Overload:Fusee.Math.Core.double3.Length
  name: Length
  nameWithType: double3.Length
  fullName: Fusee.Math.Core.double3.Length
- uid: Fusee.Math.Core.double3.Length
  commentId: P:Fusee.Math.Core.double3.Length
  isExternal: true
- uid: Fusee.Math.Core.double3.LengthSquared*
  commentId: Overload:Fusee.Math.Core.double3.LengthSquared
  name: LengthSquared
  nameWithType: double3.LengthSquared
  fullName: Fusee.Math.Core.double3.LengthSquared
- uid: Fusee.Math.Core.double3.Normalize*
  commentId: Overload:Fusee.Math.Core.double3.Normalize
  name: Normalize
  nameWithType: double3.Normalize
  fullName: Fusee.Math.Core.double3.Normalize
- uid: Fusee.Math.Core.double3.NormalizeFast*
  commentId: Overload:Fusee.Math.Core.double3.NormalizeFast
  name: NormalizeFast
  nameWithType: double3.NormalizeFast
  fullName: Fusee.Math.Core.double3.NormalizeFast
- uid: Fusee.Math.Core.double3.ToArray*
  commentId: Overload:Fusee.Math.Core.double3.ToArray
  name: ToArray
  nameWithType: double3.ToArray
  fullName: Fusee.Math.Core.double3.ToArray
- uid: System.Double[]
  isExternal: true
  name: Double[]
  nameWithType: Double[]
  fullName: System.Double[]
  nameWithType.vb: Double()
  fullName.vb: System.Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Fusee.Math.Core.double3.IsNaN*
  commentId: Overload:Fusee.Math.Core.double3.IsNaN
  name: IsNaN
  nameWithType: double3.IsNaN
  fullName: Fusee.Math.Core.double3.IsNaN
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Fusee.Math.Core.double3.IsInfinity*
  commentId: Overload:Fusee.Math.Core.double3.IsInfinity
  name: IsInfinity
  nameWithType: double3.IsInfinity
  fullName: Fusee.Math.Core.double3.IsInfinity
- uid: Fusee.Math.Core.double3.PositiveInfinity*
  commentId: Overload:Fusee.Math.Core.double3.PositiveInfinity
  name: PositiveInfinity
  nameWithType: double3.PositiveInfinity
  fullName: Fusee.Math.Core.double3.PositiveInfinity
- uid: Fusee.Math.Core.double3.NegativeInfinity*
  commentId: Overload:Fusee.Math.Core.double3.NegativeInfinity
  name: NegativeInfinity
  nameWithType: double3.NegativeInfinity
  fullName: Fusee.Math.Core.double3.NegativeInfinity
- uid: Fusee.Math.Core.double3.Add*
  commentId: Overload:Fusee.Math.Core.double3.Add
  name: Add
  nameWithType: double3.Add
  fullName: Fusee.Math.Core.double3.Add
- uid: Fusee.Math.Core.double3.Subtract*
  commentId: Overload:Fusee.Math.Core.double3.Subtract
  name: Subtract
  nameWithType: double3.Subtract
  fullName: Fusee.Math.Core.double3.Subtract
- uid: Fusee.Math.Core.double3.Multiply*
  commentId: Overload:Fusee.Math.Core.double3.Multiply
  name: Multiply
  nameWithType: double3.Multiply
  fullName: Fusee.Math.Core.double3.Multiply
- uid: Fusee.Math.Core.double3.Divide*
  commentId: Overload:Fusee.Math.Core.double3.Divide
  name: Divide
  nameWithType: double3.Divide
  fullName: Fusee.Math.Core.double3.Divide
- uid: Fusee.Math.Core.double3.ComponentMin*
  commentId: Overload:Fusee.Math.Core.double3.ComponentMin
  name: ComponentMin
  nameWithType: double3.ComponentMin
  fullName: Fusee.Math.Core.double3.ComponentMin
- uid: Fusee.Math.Core.double3.ComponentMax*
  commentId: Overload:Fusee.Math.Core.double3.ComponentMax
  name: ComponentMax
  nameWithType: double3.ComponentMax
  fullName: Fusee.Math.Core.double3.ComponentMax
- uid: Fusee.Math.Core.double3.Min*
  commentId: Overload:Fusee.Math.Core.double3.Min
  name: Min
  nameWithType: double3.Min
  fullName: Fusee.Math.Core.double3.Min
- uid: Fusee.Math.Core.double3.Max*
  commentId: Overload:Fusee.Math.Core.double3.Max
  name: Max
  nameWithType: double3.Max
  fullName: Fusee.Math.Core.double3.Max
- uid: Fusee.Math.Core.double3.Clamp*
  commentId: Overload:Fusee.Math.Core.double3.Clamp
  name: Clamp
  nameWithType: double3.Clamp
  fullName: Fusee.Math.Core.double3.Clamp
- uid: Fusee.Math.Core.double3.Dot*
  commentId: Overload:Fusee.Math.Core.double3.Dot
  name: Dot
  nameWithType: double3.Dot
  fullName: Fusee.Math.Core.double3.Dot
- uid: Fusee.Math.Core.double3.Cross*
  commentId: Overload:Fusee.Math.Core.double3.Cross
  name: Cross
  nameWithType: double3.Cross
  fullName: Fusee.Math.Core.double3.Cross
- uid: Fusee.Math.Core.double3.Lerp*
  commentId: Overload:Fusee.Math.Core.double3.Lerp
  name: Lerp
  nameWithType: double3.Lerp
  fullName: Fusee.Math.Core.double3.Lerp
- uid: Fusee.Math.Core.double3.Barycentric*
  commentId: Overload:Fusee.Math.Core.double3.Barycentric
  name: Barycentric
  nameWithType: double3.Barycentric
  fullName: Fusee.Math.Core.double3.Barycentric
- uid: Fusee.Math.Core.double3.GetBarycentric*
  commentId: Overload:Fusee.Math.Core.double3.GetBarycentric
  name: GetBarycentric
  nameWithType: double3.GetBarycentric
  fullName: Fusee.Math.Core.double3.GetBarycentric
- uid: Fusee.Math.Core.double3.Rotate*
  commentId: Overload:Fusee.Math.Core.double3.Rotate
  name: Rotate
  nameWithType: double3.Rotate
  fullName: Fusee.Math.Core.double3.Rotate
- uid: Fusee.Math.Core.QuaternionD
  commentId: T:Fusee.Math.Core.QuaternionD
  parent: Fusee.Math.Core
  name: QuaternionD
  nameWithType: QuaternionD
  fullName: Fusee.Math.Core.QuaternionD
- uid: Fusee.Math.Core.double3.CalculateAngle*
  commentId: Overload:Fusee.Math.Core.double3.CalculateAngle
  name: CalculateAngle
  nameWithType: double3.CalculateAngle
  fullName: Fusee.Math.Core.double3.CalculateAngle
- uid: Fusee.Math.Core.double3.xy*
  commentId: Overload:Fusee.Math.Core.double3.xy
  name: xy
  nameWithType: double3.xy
  fullName: Fusee.Math.Core.double3.xy
- uid: Fusee.Math.Core.double3.xyz*
  commentId: Overload:Fusee.Math.Core.double3.xyz
  name: xyz
  nameWithType: double3.xyz
  fullName: Fusee.Math.Core.double3.xyz
- uid: Fusee.Math.Core.double3.xzy*
  commentId: Overload:Fusee.Math.Core.double3.xzy
  name: xzy
  nameWithType: double3.xzy
  fullName: Fusee.Math.Core.double3.xzy
- uid: Fusee.Math.Core.double3.yzx*
  commentId: Overload:Fusee.Math.Core.double3.yzx
  name: yzx
  nameWithType: double3.yzx
  fullName: Fusee.Math.Core.double3.yzx
- uid: Fusee.Math.Core.double3.yxz*
  commentId: Overload:Fusee.Math.Core.double3.yxz
  name: yxz
  nameWithType: double3.yxz
  fullName: Fusee.Math.Core.double3.yxz
- uid: Fusee.Math.Core.double3.zxy*
  commentId: Overload:Fusee.Math.Core.double3.zxy
  name: zxy
  nameWithType: double3.zxy
  fullName: Fusee.Math.Core.double3.zxy
- uid: Fusee.Math.Core.double3.zyx*
  commentId: Overload:Fusee.Math.Core.double3.zyx
  name: zyx
  nameWithType: double3.zyx
  fullName: Fusee.Math.Core.double3.zyx
- uid: Fusee.Math.Core.double3.op_Addition*
  commentId: Overload:Fusee.Math.Core.double3.op_Addition
  name: Addition
  nameWithType: double3.Addition
  fullName: Fusee.Math.Core.double3.Addition
- uid: Fusee.Math.Core.double3.op_Subtraction*
  commentId: Overload:Fusee.Math.Core.double3.op_Subtraction
  name: Subtraction
  nameWithType: double3.Subtraction
  fullName: Fusee.Math.Core.double3.Subtraction
- uid: Fusee.Math.Core.double3.op_UnaryNegation*
  commentId: Overload:Fusee.Math.Core.double3.op_UnaryNegation
  name: UnaryNegation
  nameWithType: double3.UnaryNegation
  fullName: Fusee.Math.Core.double3.UnaryNegation
- uid: Fusee.Math.Core.double3.op_Multiply*
  commentId: Overload:Fusee.Math.Core.double3.op_Multiply
  name: Multiply
  nameWithType: double3.Multiply
  fullName: Fusee.Math.Core.double3.Multiply
- uid: Fusee.Math.Core.double3.op_Division*
  commentId: Overload:Fusee.Math.Core.double3.op_Division
  name: Division
  nameWithType: double3.Division
  fullName: Fusee.Math.Core.double3.Division
- uid: Fusee.Math.Core.double3.op_Equality*
  commentId: Overload:Fusee.Math.Core.double3.op_Equality
  name: Equality
  nameWithType: double3.Equality
  fullName: Fusee.Math.Core.double3.Equality
- uid: Fusee.Math.Core.double3.op_Inequality*
  commentId: Overload:Fusee.Math.Core.double3.op_Inequality
  name: Inequality
  nameWithType: double3.Inequality
  fullName: Fusee.Math.Core.double3.Inequality
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Math.Core.double3.ToString*
  commentId: Overload:Fusee.Math.Core.double3.ToString
  name: ToString
  nameWithType: double3.ToString
  fullName: Fusee.Math.Core.double3.ToString
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Math.Core.double3.GetHashCode*
  commentId: Overload:Fusee.Math.Core.double3.GetHashCode
  name: GetHashCode
  nameWithType: double3.GetHashCode
  fullName: Fusee.Math.Core.double3.GetHashCode
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Math.Core.double3.Equals*
  commentId: Overload:Fusee.Math.Core.double3.Equals
  name: Equals
  nameWithType: double3.Equals
  fullName: Fusee.Math.Core.double3.Equals
- uid: Fusee.Math.Core.double3.r*
  commentId: Overload:Fusee.Math.Core.double3.r
  name: r
  nameWithType: double3.r
  fullName: Fusee.Math.Core.double3.r
- uid: Fusee.Math.Core.double3.g*
  commentId: Overload:Fusee.Math.Core.double3.g
  name: g
  nameWithType: double3.g
  fullName: Fusee.Math.Core.double3.g
- uid: Fusee.Math.Core.double3.b*
  commentId: Overload:Fusee.Math.Core.double3.b
  name: b
  nameWithType: double3.b
  fullName: Fusee.Math.Core.double3.b
- uid: System.IEquatable{Fusee.Math.Core.double3}.Equals(Fusee.Math.Core.double3)
  commentId: M:System.IEquatable{Fusee.Math.Core.double3}.Equals(Fusee.Math.Core.double3)
  parent: System.IEquatable{Fusee.Math.Core.double3}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(double3)
  nameWithType: IEquatable<double3>.Equals(double3)
  fullName: System.IEquatable<Fusee.Math.Core.double3>.Equals(Fusee.Math.Core.double3)
  nameWithType.vb: IEquatable(Of double3).Equals(double3)
  fullName.vb: System.IEquatable(Of Fusee.Math.Core.double3).Equals(Fusee.Math.Core.double3)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<double3>.Equals
    fullName: System.IEquatable<Fusee.Math.Core.double3>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Fusee.Math.Core.double3
    name: double3
    nameWithType: double3
    fullName: Fusee.Math.Core.double3
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of double3).Equals
    fullName: System.IEquatable(Of Fusee.Math.Core.double3).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Fusee.Math.Core.double3
    name: double3
    nameWithType: double3
    fullName: Fusee.Math.Core.double3
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Math.Core.double3.ParseConverter*
  commentId: Overload:Fusee.Math.Core.double3.ParseConverter
  name: ParseConverter
  nameWithType: double3.ParseConverter
  fullName: Fusee.Math.Core.double3.ParseConverter
- uid: Fusee.Math.Core.Converter{System.String,Fusee.Math.Core.double3}
  commentId: T:Fusee.Math.Core.Converter{System.String,Fusee.Math.Core.double3}
  parent: Fusee.Math.Core
  definition: Fusee.Math.Core.Converter`2
  name: Converter<String, double3>
  nameWithType: Converter<String, double3>
  fullName: Fusee.Math.Core.Converter<System.String, Fusee.Math.Core.double3>
  nameWithType.vb: Converter(Of String, double3)
  fullName.vb: Fusee.Math.Core.Converter(Of System.String, Fusee.Math.Core.double3)
  name.vb: Converter(Of String, double3)
  spec.csharp:
  - uid: Fusee.Math.Core.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: Fusee.Math.Core.Converter
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Fusee.Math.Core.double3
    name: double3
    nameWithType: double3
    fullName: Fusee.Math.Core.double3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Fusee.Math.Core.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: Fusee.Math.Core.Converter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Fusee.Math.Core.double3
    name: double3
    nameWithType: double3
    fullName: Fusee.Math.Core.double3
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Math.Core.Converter`2
  commentId: T:Fusee.Math.Core.Converter`2
  name: Converter<TInput, TOutput>
  nameWithType: Converter<TInput, TOutput>
  fullName: Fusee.Math.Core.Converter<TInput, TOutput>
  nameWithType.vb: Converter(Of TInput, TOutput)
  fullName.vb: Fusee.Math.Core.Converter(Of TInput, TOutput)
  name.vb: Converter(Of TInput, TOutput)
  spec.csharp:
  - uid: Fusee.Math.Core.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: Fusee.Math.Core.Converter
  - name: <
    nameWithType: <
    fullName: <
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Fusee.Math.Core.Converter`2
    name: Converter
    nameWithType: Converter
    fullName: Fusee.Math.Core.Converter
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TInput
    nameWithType: TInput
    fullName: TInput
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TOutput
    nameWithType: TOutput
    fullName: TOutput
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Math.Core.double3.Parse*
  commentId: Overload:Fusee.Math.Core.double3.Parse
  name: Parse
  nameWithType: double3.Parse
  fullName: Fusee.Math.Core.double3.Parse

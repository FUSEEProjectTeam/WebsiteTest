### YamlMime:ManagedReference
items:
- uid: Fusee.Math.Core.Quaternion
  commentId: T:Fusee.Math.Core.Quaternion
  id: Quaternion
  parent: Fusee.Math.Core
  children:
  - Fusee.Math.Core.Quaternion.#ctor(Fusee.Math.Core.float3,System.Single)
  - Fusee.Math.Core.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)
  - Fusee.Math.Core.Quaternion.Add(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  - Fusee.Math.Core.Quaternion.Conjugate
  - Fusee.Math.Core.Quaternion.Conjugate(Fusee.Math.Core.Quaternion)
  - Fusee.Math.Core.Quaternion.CopySign(System.Single,System.Single)
  - Fusee.Math.Core.Quaternion.Equals(Fusee.Math.Core.Quaternion)
  - Fusee.Math.Core.Quaternion.Equals(System.Object)
  - Fusee.Math.Core.Quaternion.EulerToQuaternion(Fusee.Math.Core.float3,System.Boolean)
  - Fusee.Math.Core.Quaternion.FromAxisAngle(Fusee.Math.Core.float3,System.Single)
  - Fusee.Math.Core.Quaternion.FromQuatToEuler(Fusee.Math.Core.Quaternion)
  - Fusee.Math.Core.Quaternion.FromToRotation(Fusee.Math.Core.float3,Fusee.Math.Core.float3)
  - Fusee.Math.Core.Quaternion.GetHashCode
  - Fusee.Math.Core.Quaternion.Identity
  - Fusee.Math.Core.Quaternion.Invert
  - Fusee.Math.Core.Quaternion.Invert(Fusee.Math.Core.Quaternion)
  - Fusee.Math.Core.Quaternion.Item(System.Int32)
  - Fusee.Math.Core.Quaternion.Length
  - Fusee.Math.Core.Quaternion.LengthSquared
  - Fusee.Math.Core.Quaternion.LookRotation(Fusee.Math.Core.float3,Fusee.Math.Core.float3)
  - Fusee.Math.Core.Quaternion.Multiply(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  - Fusee.Math.Core.Quaternion.Multiply(Fusee.Math.Core.Quaternion,System.Single)
  - Fusee.Math.Core.Quaternion.Normalize
  - Fusee.Math.Core.Quaternion.Normalize(Fusee.Math.Core.Quaternion)
  - Fusee.Math.Core.Quaternion.op_Addition(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  - Fusee.Math.Core.Quaternion.op_Equality(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  - Fusee.Math.Core.Quaternion.op_Inequality(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  - Fusee.Math.Core.Quaternion.op_Multiply(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  - Fusee.Math.Core.Quaternion.op_Multiply(Fusee.Math.Core.Quaternion,System.Single)
  - Fusee.Math.Core.Quaternion.op_Multiply(System.Single,Fusee.Math.Core.Quaternion)
  - Fusee.Math.Core.Quaternion.op_Subtraction(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  - Fusee.Math.Core.Quaternion.QuaternionToEuler(Fusee.Math.Core.Quaternion,System.Boolean)
  - Fusee.Math.Core.Quaternion.QuaternionToMatrix(Fusee.Math.Core.Quaternion)
  - Fusee.Math.Core.Quaternion.Slerp(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion,System.Single)
  - Fusee.Math.Core.Quaternion.Sub(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  - Fusee.Math.Core.Quaternion.ToAxisAngle
  - Fusee.Math.Core.Quaternion.ToAxisAngle(Fusee.Math.Core.Quaternion)
  - Fusee.Math.Core.Quaternion.ToRotMat
  - Fusee.Math.Core.Quaternion.ToRotMat(Fusee.Math.Core.Quaternion)
  - Fusee.Math.Core.Quaternion.ToString
  - Fusee.Math.Core.Quaternion.ToString(System.IFormatProvider)
  - Fusee.Math.Core.Quaternion.Transform(Fusee.Math.Core.float4,Fusee.Math.Core.Quaternion)
  - Fusee.Math.Core.Quaternion.w
  - Fusee.Math.Core.Quaternion.x
  - Fusee.Math.Core.Quaternion.xyz
  - Fusee.Math.Core.Quaternion.y
  - Fusee.Math.Core.Quaternion.z
  langs:
  - csharp
  - vb
  name: Quaternion
  nameWithType: Quaternion
  fullName: Fusee.Math.Core.Quaternion
  type: Struct
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Quaternion
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 9
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nRepresents a Quaternion (single precision).\n"
  example: []
  syntax:
    content: 'public struct Quaternion : IEquatable<Quaternion>'
    content.vb: >-
      Public Structure Quaternion
          Implements IEquatable(Of Quaternion)
  implements:
  - System.IEquatable{Fusee.Math.Core.Quaternion}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Fusee.Math.Core.Quaternion.#ctor(Fusee.Math.Core.float3,System.Single)
  commentId: M:Fusee.Math.Core.Quaternion.#ctor(Fusee.Math.Core.float3,System.Single)
  id: '#ctor(Fusee.Math.Core.float3,System.Single)'
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Quaternion(float3, Single)
  nameWithType: Quaternion.Quaternion(float3, Single)
  fullName: Fusee.Math.Core.Quaternion.Quaternion(Fusee.Math.Core.float3, System.Single)
  type: Constructor
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: .ctor
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 26
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConstruct a new Quaternion from vector and w components\n"
  example: []
  syntax:
    content: public Quaternion(float3 v, float w)
    parameters:
    - id: v
      type: Fusee.Math.Core.float3
      description: The vector part
    - id: w
      type: System.Single
      description: The w part
    content.vb: Public Sub New(v As float3, w As Single)
  overload: Fusee.Math.Core.Quaternion.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)
  commentId: M:Fusee.Math.Core.Quaternion.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Quaternion(Single, Single, Single, Single)
  nameWithType: Quaternion.Quaternion(Single, Single, Single, Single)
  fullName: Fusee.Math.Core.Quaternion.Quaternion(System.Single, System.Single, System.Single, System.Single)
  type: Constructor
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: .ctor
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 39
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConstruct a new Quaternion\n"
  example: []
  syntax:
    content: public Quaternion(float xx, float yy, float zz, float w)
    parameters:
    - id: xx
      type: System.Single
      description: The xx component
    - id: yy
      type: System.Single
      description: The yy component
    - id: zz
      type: System.Single
      description: The zz component
    - id: w
      type: System.Single
      description: The w component
    content.vb: Public Sub New(xx As Single, yy As Single, zz As Single, w As Single)
  overload: Fusee.Math.Core.Quaternion.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.Quaternion.xyz
  commentId: P:Fusee.Math.Core.Quaternion.xyz
  id: xyz
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: xyz
  nameWithType: Quaternion.xyz
  fullName: Fusee.Math.Core.Quaternion.xyz
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: xyz
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 53
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets and sets an Fusee.Math.float3 with the x, y and z components of this instance.\n"
  example: []
  syntax:
    content: public float3 xyz { get; set; }
    parameters: []
    return:
      type: Fusee.Math.Core.float3
    content.vb: Public Property xyz As float3
  overload: Fusee.Math.Core.Quaternion.xyz*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.Quaternion.x
  commentId: P:Fusee.Math.Core.Quaternion.x
  id: x
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: x
  nameWithType: Quaternion.x
  fullName: Fusee.Math.Core.Quaternion.x
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: x
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 62
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets and sets the x component of this instance.\n"
  example: []
  syntax:
    content: public float x { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property x As Single
  overload: Fusee.Math.Core.Quaternion.x*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.Quaternion.y
  commentId: P:Fusee.Math.Core.Quaternion.y
  id: y
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: y
  nameWithType: Quaternion.y
  fullName: Fusee.Math.Core.Quaternion.y
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: y
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 71
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets and sets the y component of this instance.\n"
  example: []
  syntax:
    content: public float y { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property y As Single
  overload: Fusee.Math.Core.Quaternion.y*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.Quaternion.z
  commentId: P:Fusee.Math.Core.Quaternion.z
  id: z
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: z
  nameWithType: Quaternion.z
  fullName: Fusee.Math.Core.Quaternion.z
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: z
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 80
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets and sets the z component of this instance.\n"
  example: []
  syntax:
    content: public float z { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property z As Single
  overload: Fusee.Math.Core.Quaternion.z*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.Quaternion.w
  commentId: P:Fusee.Math.Core.Quaternion.w
  id: w
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: w
  nameWithType: Quaternion.w
  fullName: Fusee.Math.Core.Quaternion.w
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: w
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 89
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets and sets the w component of this instance.\n"
  example: []
  syntax:
    content: public float w { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property w As Single
  overload: Fusee.Math.Core.Quaternion.w*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.Quaternion.Item(System.Int32)
  commentId: P:Fusee.Math.Core.Quaternion.Item(System.Int32)
  id: Item(System.Int32)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: Quaternion.Item[Int32]
  fullName: Fusee.Math.Core.Quaternion.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: this[]
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 106
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nSets/Gets value from given idx\n"
  example: []
  syntax:
    content: public float this[int idx] { get; set; }
    parameters:
    - id: idx
      type: System.Int32
      description: ''
    return:
      type: System.Single
      description: ''
    content.vb: Public Property Item(idx As Integer) As Single
  overload: Fusee.Math.Core.Quaternion.Item*
  nameWithType.vb: Quaternion.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Fusee.Math.Core.Quaternion.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Fusee.Math.Core.Quaternion.ToAxisAngle
  commentId: M:Fusee.Math.Core.Quaternion.ToAxisAngle
  id: ToAxisAngle
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: ToAxisAngle()
  nameWithType: Quaternion.ToAxisAngle()
  fullName: Fusee.Math.Core.Quaternion.ToAxisAngle()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: ToAxisAngle
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 162
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConvert this instance to an axis-angle representation.\n"
  example: []
  syntax:
    content: public float4 ToAxisAngle()
    return:
      type: Fusee.Math.Core.float4
      description: A float4 that is the axis-angle representation of this quaternion.
    content.vb: Public Function ToAxisAngle As float4
  overload: Fusee.Math.Core.Quaternion.ToAxisAngle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.Quaternion.ToRotMat
  commentId: M:Fusee.Math.Core.Quaternion.ToRotMat
  id: ToRotMat
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: ToRotMat()
  nameWithType: Quaternion.ToRotMat()
  fullName: Fusee.Math.Core.Quaternion.ToRotMat()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: ToRotMat
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 170
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConverts the quaternion into a rotation matrix.\n"
  example: []
  syntax:
    content: public float4x4 ToRotMat()
    return:
      type: Fusee.Math.Core.float4x4
    content.vb: Public Function ToRotMat As float4x4
  overload: Fusee.Math.Core.Quaternion.ToRotMat*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.Quaternion.Length
  commentId: P:Fusee.Math.Core.Quaternion.Length
  id: Length
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: Quaternion.Length
  fullName: Fusee.Math.Core.Quaternion.Length
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Length
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 183
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets the length (magnitude) of the quaternion.\n"
  example: []
  syntax:
    content: public float Length { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Length As Single
  overload: Fusee.Math.Core.Quaternion.Length*
  seealso:
  - linkId: Fusee.Math.Core.Quaternion.LengthSquared
    commentId: P:Fusee.Math.Core.Quaternion.LengthSquared
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Math.Core.Quaternion.LengthSquared
  commentId: P:Fusee.Math.Core.Quaternion.LengthSquared
  id: LengthSquared
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: LengthSquared
  nameWithType: Quaternion.LengthSquared
  fullName: Fusee.Math.Core.Quaternion.LengthSquared
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: LengthSquared
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 195
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets the square of the quaternion length (magnitude).\n"
  example: []
  syntax:
    content: public float LengthSquared { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property LengthSquared As Single
  overload: Fusee.Math.Core.Quaternion.LengthSquared*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Math.Core.Quaternion.Normalize
  commentId: M:Fusee.Math.Core.Quaternion.Normalize
  id: Normalize
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Normalize()
  nameWithType: Quaternion.Normalize()
  fullName: Fusee.Math.Core.Quaternion.Normalize()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Normalize
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 207
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nScales the Quaternion to unit length.\n"
  example: []
  syntax:
    content: public Quaternion Normalize()
    return:
      type: Fusee.Math.Core.Quaternion
    content.vb: Public Function Normalize As Quaternion
  overload: Fusee.Math.Core.Quaternion.Normalize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.Quaternion.Conjugate
  commentId: M:Fusee.Math.Core.Quaternion.Conjugate
  id: Conjugate
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Conjugate()
  nameWithType: Quaternion.Conjugate()
  fullName: Fusee.Math.Core.Quaternion.Conjugate()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Conjugate
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 219
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConvert this quaternion to its conjugate.\n"
  example: []
  syntax:
    content: public Quaternion Conjugate()
    return:
      type: Fusee.Math.Core.Quaternion
    content.vb: Public Function Conjugate As Quaternion
  overload: Fusee.Math.Core.Quaternion.Conjugate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.Quaternion.Invert
  commentId: M:Fusee.Math.Core.Quaternion.Invert
  id: Invert
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Invert()
  nameWithType: Quaternion.Invert()
  fullName: Fusee.Math.Core.Quaternion.Invert()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Invert
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 231
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConvert this quaternion to its inverse.\n"
  example: []
  syntax:
    content: public Quaternion Invert()
    return:
      type: Fusee.Math.Core.Quaternion
    content.vb: Public Function Invert As Quaternion
  overload: Fusee.Math.Core.Quaternion.Invert*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.Quaternion.Identity
  commentId: F:Fusee.Math.Core.Quaternion.Identity
  id: Identity
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Identity
  nameWithType: Quaternion.Identity
  fullName: Fusee.Math.Core.Quaternion.Identity
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Identity
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 247
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDefines the identity quaternion.\n"
  example: []
  syntax:
    content: public static Quaternion Identity
    return:
      type: Fusee.Math.Core.Quaternion
    content.vb: Public Shared Identity As Quaternion
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.Add(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  commentId: M:Fusee.Math.Core.Quaternion.Add(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  id: Add(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Add(Quaternion, Quaternion)
  nameWithType: Quaternion.Add(Quaternion, Quaternion)
  fullName: Fusee.Math.Core.Quaternion.Add(Fusee.Math.Core.Quaternion, Fusee.Math.Core.Quaternion)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Add
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 259
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nAdd two quaternions\n"
  example: []
  syntax:
    content: public static Quaternion Add(Quaternion left, Quaternion right)
    parameters:
    - id: left
      type: Fusee.Math.Core.Quaternion
      description: The first operand
    - id: right
      type: Fusee.Math.Core.Quaternion
      description: The second operand
    return:
      type: Fusee.Math.Core.Quaternion
      description: The result of the addition
    content.vb: Public Shared Function Add(left As Quaternion, right As Quaternion) As Quaternion
  overload: Fusee.Math.Core.Quaternion.Add*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.Sub(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  commentId: M:Fusee.Math.Core.Quaternion.Sub(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  id: Sub(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Sub(Quaternion, Quaternion)
  nameWithType: Quaternion.Sub(Quaternion, Quaternion)
  fullName: Fusee.Math.Core.Quaternion.Sub(Fusee.Math.Core.Quaternion, Fusee.Math.Core.Quaternion)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Sub
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 276
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nSubtracts two instances.\n"
  example: []
  syntax:
    content: public static Quaternion Sub(Quaternion left, Quaternion right)
    parameters:
    - id: left
      type: Fusee.Math.Core.Quaternion
      description: The left instance.
    - id: right
      type: Fusee.Math.Core.Quaternion
      description: The right instance.
    return:
      type: Fusee.Math.Core.Quaternion
      description: The result of the operation.
    content.vb: Public Shared Function Sub(left As Quaternion, right As Quaternion) As Quaternion
  overload: Fusee.Math.Core.Quaternion.Sub*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.Multiply(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  commentId: M:Fusee.Math.Core.Quaternion.Multiply(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  id: Multiply(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Multiply(Quaternion, Quaternion)
  nameWithType: Quaternion.Multiply(Quaternion, Quaternion)
  fullName: Fusee.Math.Core.Quaternion.Multiply(Fusee.Math.Core.Quaternion, Fusee.Math.Core.Quaternion)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Multiply
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 293
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nMultiplies two instances.\n"
  example: []
  syntax:
    content: public static Quaternion Multiply(Quaternion left, Quaternion right)
    parameters:
    - id: left
      type: Fusee.Math.Core.Quaternion
      description: The first instance.
    - id: right
      type: Fusee.Math.Core.Quaternion
      description: The second instance.
    return:
      type: Fusee.Math.Core.Quaternion
      description: A new instance containing the result of the calculation.
    content.vb: Public Shared Function Multiply(left As Quaternion, right As Quaternion) As Quaternion
  overload: Fusee.Math.Core.Quaternion.Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.Multiply(Fusee.Math.Core.Quaternion,System.Single)
  commentId: M:Fusee.Math.Core.Quaternion.Multiply(Fusee.Math.Core.Quaternion,System.Single)
  id: Multiply(Fusee.Math.Core.Quaternion,System.Single)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Multiply(Quaternion, Single)
  nameWithType: Quaternion.Multiply(Quaternion, Single)
  fullName: Fusee.Math.Core.Quaternion.Multiply(Fusee.Math.Core.Quaternion, System.Single)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Multiply
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 310
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nMultiplies an instance by a scalar.\n"
  example: []
  syntax:
    content: public static Quaternion Multiply(Quaternion quaternion, float scale)
    parameters:
    - id: quaternion
      type: Fusee.Math.Core.Quaternion
      description: The instance.
    - id: scale
      type: System.Single
      description: The scalar.
    return:
      type: Fusee.Math.Core.Quaternion
      description: A new instance containing the result of the calculation.
    content.vb: Public Shared Function Multiply(quaternion As Quaternion, scale As Single) As Quaternion
  overload: Fusee.Math.Core.Quaternion.Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.Conjugate(Fusee.Math.Core.Quaternion)
  commentId: M:Fusee.Math.Core.Quaternion.Conjugate(Fusee.Math.Core.Quaternion)
  id: Conjugate(Fusee.Math.Core.Quaternion)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Conjugate(Quaternion)
  nameWithType: Quaternion.Conjugate(Quaternion)
  fullName: Fusee.Math.Core.Quaternion.Conjugate(Fusee.Math.Core.Quaternion)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Conjugate
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 324
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGet the conjugate of the given quaternion\n"
  example: []
  syntax:
    content: public static Quaternion Conjugate(Quaternion q)
    parameters:
    - id: q
      type: Fusee.Math.Core.Quaternion
      description: The quaternion
    return:
      type: Fusee.Math.Core.Quaternion
      description: The conjugate of the given quaternion
    content.vb: Public Shared Function Conjugate(q As Quaternion) As Quaternion
  overload: Fusee.Math.Core.Quaternion.Conjugate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.Invert(Fusee.Math.Core.Quaternion)
  commentId: M:Fusee.Math.Core.Quaternion.Invert(Fusee.Math.Core.Quaternion)
  id: Invert(Fusee.Math.Core.Quaternion)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Invert(Quaternion)
  nameWithType: Quaternion.Invert(Quaternion)
  fullName: Fusee.Math.Core.Quaternion.Invert(Fusee.Math.Core.Quaternion)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Invert
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 338
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGet the inverse of the given quaternion\n"
  example: []
  syntax:
    content: public static Quaternion Invert(Quaternion q)
    parameters:
    - id: q
      type: Fusee.Math.Core.Quaternion
      description: The quaternion to invert
    return:
      type: Fusee.Math.Core.Quaternion
      description: The inverse of the given quaternion
    content.vb: Public Shared Function Invert(q As Quaternion) As Quaternion
  overload: Fusee.Math.Core.Quaternion.Invert*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.Normalize(Fusee.Math.Core.Quaternion)
  commentId: M:Fusee.Math.Core.Quaternion.Normalize(Fusee.Math.Core.Quaternion)
  id: Normalize(Fusee.Math.Core.Quaternion)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Normalize(Quaternion)
  nameWithType: Quaternion.Normalize(Quaternion)
  fullName: Fusee.Math.Core.Quaternion.Normalize(Fusee.Math.Core.Quaternion)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Normalize
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 366
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nScale the given quaternion to unit length\n"
  example: []
  syntax:
    content: public static Quaternion Normalize(Quaternion q)
    parameters:
    - id: q
      type: Fusee.Math.Core.Quaternion
      description: The quaternion to normalize
    return:
      type: Fusee.Math.Core.Quaternion
      description: The normalized quaternion
    content.vb: Public Shared Function Normalize(q As Quaternion) As Quaternion
  overload: Fusee.Math.Core.Quaternion.Normalize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.FromAxisAngle(Fusee.Math.Core.float3,System.Single)
  commentId: M:Fusee.Math.Core.Quaternion.FromAxisAngle(Fusee.Math.Core.float3,System.Single)
  id: FromAxisAngle(Fusee.Math.Core.float3,System.Single)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: FromAxisAngle(float3, Single)
  nameWithType: Quaternion.FromAxisAngle(float3, Single)
  fullName: Fusee.Math.Core.Quaternion.FromAxisAngle(Fusee.Math.Core.float3, System.Single)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: FromAxisAngle
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 392
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nBuild a quaternion from the given axis and angle\n"
  example: []
  syntax:
    content: public static Quaternion FromAxisAngle(float3 axis, float angle)
    parameters:
    - id: axis
      type: Fusee.Math.Core.float3
      description: The axis to rotate about
    - id: angle
      type: System.Single
      description: The rotation angle in radians
    return:
      type: Fusee.Math.Core.Quaternion
      description: A normalized quaternion rotation.
    content.vb: Public Shared Function FromAxisAngle(axis As float3, angle As Single) As Quaternion
  overload: Fusee.Math.Core.Quaternion.FromAxisAngle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.ToRotMat(Fusee.Math.Core.Quaternion)
  commentId: M:Fusee.Math.Core.Quaternion.ToRotMat(Fusee.Math.Core.Quaternion)
  id: ToRotMat(Fusee.Math.Core.Quaternion)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: ToRotMat(Quaternion)
  nameWithType: Quaternion.ToRotMat(Quaternion)
  fullName: Fusee.Math.Core.Quaternion.ToRotMat(Fusee.Math.Core.Quaternion)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: ToRotMat
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 417
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConstructs a rotation matrix from a given quaternion\nThis uses some geometric algebra magic https://en.wikipedia.org/wiki/Geometric_algebra\nFrom: https://sourceforge.net/p/mjbworld/discussion/122133/thread/c59339da/#62ce\n"
  example: []
  syntax:
    content: public static float4x4 ToRotMat(Quaternion quat)
    parameters:
    - id: quat
      type: Fusee.Math.Core.Quaternion
      description: Input quaternion
    return:
      type: Fusee.Math.Core.float4x4
      description: ''
    content.vb: Public Shared Function ToRotMat(quat As Quaternion) As float4x4
  overload: Fusee.Math.Core.Quaternion.ToRotMat*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.ToAxisAngle(Fusee.Math.Core.Quaternion)
  commentId: M:Fusee.Math.Core.Quaternion.ToAxisAngle(Fusee.Math.Core.Quaternion)
  id: ToAxisAngle(Fusee.Math.Core.Quaternion)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: ToAxisAngle(Quaternion)
  nameWithType: Quaternion.ToAxisAngle(Quaternion)
  fullName: Fusee.Math.Core.Quaternion.ToAxisAngle(Fusee.Math.Core.Quaternion)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: ToAxisAngle
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 439
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nAngle axis representation of the given quaternion.\n"
  example: []
  syntax:
    content: public static float4 ToAxisAngle(Quaternion quat)
    parameters:
    - id: quat
      type: Fusee.Math.Core.Quaternion
      description: The quaternion to transform.
    return:
      type: Fusee.Math.Core.float4
      description: ''
    content.vb: Public Shared Function ToAxisAngle(quat As Quaternion) As float4
  overload: Fusee.Math.Core.Quaternion.ToAxisAngle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.Slerp(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion,System.Single)
  commentId: M:Fusee.Math.Core.Quaternion.Slerp(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion,System.Single)
  id: Slerp(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion,System.Single)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Slerp(Quaternion, Quaternion, Single)
  nameWithType: Quaternion.Slerp(Quaternion, Quaternion, Single)
  fullName: Fusee.Math.Core.Quaternion.Slerp(Fusee.Math.Core.Quaternion, Fusee.Math.Core.Quaternion, System.Single)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Slerp
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 476
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDo Spherical linear interpolation between two quaternions\n"
  example: []
  syntax:
    content: public static Quaternion Slerp(Quaternion q1, Quaternion q2, float blend)
    parameters:
    - id: q1
      type: Fusee.Math.Core.Quaternion
      description: The first quaternion
    - id: q2
      type: Fusee.Math.Core.Quaternion
      description: The second quaternion
    - id: blend
      type: System.Single
      description: The blend factor
    return:
      type: Fusee.Math.Core.Quaternion
      description: A smooth blend between the given quaternions
    content.vb: Public Shared Function Slerp(q1 As Quaternion, q2 As Quaternion, blend As Single) As Quaternion
  overload: Fusee.Math.Core.Quaternion.Slerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.EulerToQuaternion(Fusee.Math.Core.float3,System.Boolean)
  commentId: M:Fusee.Math.Core.Quaternion.EulerToQuaternion(Fusee.Math.Core.float3,System.Boolean)
  id: EulerToQuaternion(Fusee.Math.Core.float3,System.Boolean)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: EulerToQuaternion(float3, Boolean)
  nameWithType: Quaternion.EulerToQuaternion(float3, Boolean)
  fullName: Fusee.Math.Core.Quaternion.EulerToQuaternion(Fusee.Math.Core.float3, System.Boolean)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: EulerToQuaternion
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 560
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConvert Euler angle to Quaternion rotation.\n"
  remarks: >
    The euler angle is assumed to be in common aviation order where the y axis is up. Thus x is pitch/attitude,

    y is yaw/heading, and z is roll/bank. In practice x is never out of [-PI/2, PI/2] while y and z may well be in

    the range of [-PI, PI].


    See also <a href="http://www.euclideanspace.com/maths/geometry/rotations/conversions/eulerToQuaternion/index.htm">the euclideanspace website</a>.
  example: []
  syntax:
    content: public static Quaternion EulerToQuaternion(float3 e, bool inDegrees = false)
    parameters:
    - id: e
      type: Fusee.Math.Core.float3
      description: Euler angle to convert.
    - id: inDegrees
      type: System.Boolean
      description: Whether the angles are in degrees or radians.
    return:
      type: Fusee.Math.Core.Quaternion
      description: A Quaternion representing the euler angle passed to this method.
    content.vb: Public Shared Function EulerToQuaternion(e As float3, inDegrees As Boolean = False) As Quaternion
  overload: Fusee.Math.Core.Quaternion.EulerToQuaternion*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.FromQuatToEuler(Fusee.Math.Core.Quaternion)
  commentId: M:Fusee.Math.Core.Quaternion.FromQuatToEuler(Fusee.Math.Core.Quaternion)
  id: FromQuatToEuler(Fusee.Math.Core.Quaternion)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: FromQuatToEuler(Quaternion)
  nameWithType: Quaternion.FromQuatToEuler(Quaternion)
  fullName: Fusee.Math.Core.Quaternion.FromQuatToEuler(Fusee.Math.Core.Quaternion)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: FromQuatToEuler
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 600
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets the euler angles from a given quaternion.\n"
  example: []
  syntax:
    content: public static float3 FromQuatToEuler(Quaternion quat)
    parameters:
    - id: quat
      type: Fusee.Math.Core.Quaternion
      description: The quaternion.
    return:
      type: Fusee.Math.Core.float3
      description: ''
    content.vb: Public Shared Function FromQuatToEuler(quat As Quaternion) As float3
  overload: Fusee.Math.Core.Quaternion.FromQuatToEuler*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.QuaternionToEuler(Fusee.Math.Core.Quaternion,System.Boolean)
  commentId: M:Fusee.Math.Core.Quaternion.QuaternionToEuler(Fusee.Math.Core.Quaternion,System.Boolean)
  id: QuaternionToEuler(Fusee.Math.Core.Quaternion,System.Boolean)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: QuaternionToEuler(Quaternion, Boolean)
  nameWithType: Quaternion.QuaternionToEuler(Quaternion, Boolean)
  fullName: Fusee.Math.Core.Quaternion.QuaternionToEuler(Fusee.Math.Core.Quaternion, System.Boolean)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: QuaternionToEuler
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 659
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConvert Quaternion rotation to Euler Angles.\n"
  remarks: >
    The euler angle is assumed to be in common aviation order where the y axis is up. Thus x is pitch/attitude,

    y is yaw/heading, and z is roll/bank. In practice x is never out of [-PI/2, PI/2] while y and z may well be in

    the range of [-PI, PI].


    See also <a href="http://www.euclideanspace.com/maths/geometry/rotations/conversions/eulerToQuaternion/index.htm">the euclidean space website</a>.
  example: []
  syntax:
    content: public static float3 QuaternionToEuler(Quaternion q, bool inDegrees = false)
    parameters:
    - id: q
      type: Fusee.Math.Core.Quaternion
      description: Quaternion rotation to convert.
    - id: inDegrees
      type: System.Boolean
      description: Whether the angles shall be in degrees or radians.
    return:
      type: Fusee.Math.Core.float3
    content.vb: Public Shared Function QuaternionToEuler(q As Quaternion, inDegrees As Boolean = False) As float3
  overload: Fusee.Math.Core.Quaternion.QuaternionToEuler*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.LookRotation(Fusee.Math.Core.float3,Fusee.Math.Core.float3)
  commentId: M:Fusee.Math.Core.Quaternion.LookRotation(Fusee.Math.Core.float3,Fusee.Math.Core.float3)
  id: LookRotation(Fusee.Math.Core.float3,Fusee.Math.Core.float3)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: LookRotation(float3, float3)
  nameWithType: Quaternion.LookRotation(float3, float3)
  fullName: Fusee.Math.Core.Quaternion.LookRotation(Fusee.Math.Core.float3, Fusee.Math.Core.float3)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: LookRotation
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 715
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nTakes a lookAt and upDirection vector and returns a quaternion rotation.\n"
  example: []
  syntax:
    content: public static Quaternion LookRotation(float3 lookAt, float3 upDirection)
    parameters:
    - id: lookAt
      type: Fusee.Math.Core.float3
      description: The look at.
    - id: upDirection
      type: Fusee.Math.Core.float3
      description: Up direction.
    return:
      type: Fusee.Math.Core.Quaternion
      description: A Quaternion.
    content.vb: Public Shared Function LookRotation(lookAt As float3, upDirection As float3) As Quaternion
  overload: Fusee.Math.Core.Quaternion.LookRotation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.QuaternionToMatrix(Fusee.Math.Core.Quaternion)
  commentId: M:Fusee.Math.Core.Quaternion.QuaternionToMatrix(Fusee.Math.Core.Quaternion)
  id: QuaternionToMatrix(Fusee.Math.Core.Quaternion)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: QuaternionToMatrix(Quaternion)
  nameWithType: Quaternion.QuaternionToMatrix(Quaternion)
  fullName: Fusee.Math.Core.Quaternion.QuaternionToMatrix(Fusee.Math.Core.Quaternion)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: QuaternionToMatrix
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 737
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConvert Quaternion to rotation matrix\n"
  example: []
  syntax:
    content: public static float4x4 QuaternionToMatrix(Quaternion q)
    parameters:
    - id: q
      type: Fusee.Math.Core.Quaternion
      description: Quaternion to convert.
    return:
      type: Fusee.Math.Core.float4x4
      description: A matrix of type float4x4 from the passed Quaternion.
    content.vb: Public Shared Function QuaternionToMatrix(q As Quaternion) As float4x4
  overload: Fusee.Math.Core.Quaternion.QuaternionToMatrix*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.CopySign(System.Single,System.Single)
  commentId: M:Fusee.Math.Core.Quaternion.CopySign(System.Single,System.Single)
  id: CopySign(System.Single,System.Single)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: CopySign(Single, Single)
  nameWithType: Quaternion.CopySign(Single, Single)
  fullName: Fusee.Math.Core.Quaternion.CopySign(System.Single, System.Single)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: CopySign
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 772
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\na with the algebraic sign of b.\n"
  remarks: "\nTakes a as an absolute value and multiplies it with: +1 for any positiv number for b, -1 for any negative\nnumber for b or 0 for 0 for b.\n"
  example: []
  syntax:
    content: public static float CopySign(float a, float b)
    parameters:
    - id: a
      type: System.Single
      description: Absolut value
    - id: b
      type: System.Single
      description: A positiv/negativ number or zero.
    return:
      type: System.Single
      description: Returns a with the algebraic sign of b.
    content.vb: Public Shared Function CopySign(a As Single, b As Single) As Single
  overload: Fusee.Math.Core.Quaternion.CopySign*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.FromToRotation(Fusee.Math.Core.float3,Fusee.Math.Core.float3)
  commentId: M:Fusee.Math.Core.Quaternion.FromToRotation(Fusee.Math.Core.float3,Fusee.Math.Core.float3)
  id: FromToRotation(Fusee.Math.Core.float3,Fusee.Math.Core.float3)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: FromToRotation(float3, float3)
  nameWithType: Quaternion.FromToRotation(float3, float3)
  fullName: Fusee.Math.Core.Quaternion.FromToRotation(Fusee.Math.Core.float3, Fusee.Math.Core.float3)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: FromToRotation
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 787
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nBuild a quaternion with the shortest rotation from to.\n"
  example: []
  syntax:
    content: public static Quaternion FromToRotation(float3 from, float3 to)
    parameters:
    - id: from
      type: Fusee.Math.Core.float3
      description: ''
    - id: to
      type: Fusee.Math.Core.float3
      description: ''
    return:
      type: Fusee.Math.Core.Quaternion
      description: A normalized quaternion rotation.
    content.vb: Public Shared Function FromToRotation(from As float3, to As float3) As Quaternion
  overload: Fusee.Math.Core.Quaternion.FromToRotation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.Transform(Fusee.Math.Core.float4,Fusee.Math.Core.Quaternion)
  commentId: M:Fusee.Math.Core.Quaternion.Transform(Fusee.Math.Core.float4,Fusee.Math.Core.Quaternion)
  id: Transform(Fusee.Math.Core.float4,Fusee.Math.Core.Quaternion)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Transform(float4, Quaternion)
  nameWithType: Quaternion.Transform(float4, Quaternion)
  fullName: Fusee.Math.Core.Quaternion.Transform(Fusee.Math.Core.float4, Fusee.Math.Core.Quaternion)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Transform
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 811
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nTransforms a vector by a quaternion rotation.\n"
  example: []
  syntax:
    content: public static float4 Transform(float4 vec, Quaternion quat)
    parameters:
    - id: vec
      type: Fusee.Math.Core.float4
      description: The vector to transform.
    - id: quat
      type: Fusee.Math.Core.Quaternion
      description: The quaternion to rotate the vector by.
    return:
      type: Fusee.Math.Core.float4
      description: The result of the operation.
    content.vb: Public Shared Function Transform(vec As float4, quat As Quaternion) As float4
  overload: Fusee.Math.Core.Quaternion.Transform*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.op_Addition(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  commentId: M:Fusee.Math.Core.Quaternion.op_Addition(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  id: op_Addition(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Addition(Quaternion, Quaternion)
  nameWithType: Quaternion.Addition(Quaternion, Quaternion)
  fullName: Fusee.Math.Core.Quaternion.Addition(Fusee.Math.Core.Quaternion, Fusee.Math.Core.Quaternion)
  type: Operator
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: op_Addition
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 833
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nAdds two instances.\n"
  example: []
  syntax:
    content: public static Quaternion operator +(Quaternion left, Quaternion right)
    parameters:
    - id: left
      type: Fusee.Math.Core.Quaternion
      description: The first instance.
    - id: right
      type: Fusee.Math.Core.Quaternion
      description: The second instance.
    return:
      type: Fusee.Math.Core.Quaternion
      description: The result of the calculation.
    content.vb: Public Shared Operator +(left As Quaternion, right As Quaternion) As Quaternion
  overload: Fusee.Math.Core.Quaternion.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.op_Subtraction(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  commentId: M:Fusee.Math.Core.Quaternion.op_Subtraction(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  id: op_Subtraction(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Subtraction(Quaternion, Quaternion)
  nameWithType: Quaternion.Subtraction(Quaternion, Quaternion)
  fullName: Fusee.Math.Core.Quaternion.Subtraction(Fusee.Math.Core.Quaternion, Fusee.Math.Core.Quaternion)
  type: Operator
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: op_Subtraction
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 844
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nSubtracts two instances.\n"
  example: []
  syntax:
    content: public static Quaternion operator -(Quaternion left, Quaternion right)
    parameters:
    - id: left
      type: Fusee.Math.Core.Quaternion
      description: The first instance.
    - id: right
      type: Fusee.Math.Core.Quaternion
      description: The second instance.
    return:
      type: Fusee.Math.Core.Quaternion
      description: The result of the calculation.
    content.vb: Public Shared Operator -(left As Quaternion, right As Quaternion) As Quaternion
  overload: Fusee.Math.Core.Quaternion.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.op_Multiply(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  commentId: M:Fusee.Math.Core.Quaternion.op_Multiply(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  id: op_Multiply(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Multiply(Quaternion, Quaternion)
  nameWithType: Quaternion.Multiply(Quaternion, Quaternion)
  fullName: Fusee.Math.Core.Quaternion.Multiply(Fusee.Math.Core.Quaternion, Fusee.Math.Core.Quaternion)
  type: Operator
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: op_Multiply
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 855
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nMultiplies two instances.\n"
  example: []
  syntax:
    content: public static Quaternion operator *(Quaternion left, Quaternion right)
    parameters:
    - id: left
      type: Fusee.Math.Core.Quaternion
      description: The first instance.
    - id: right
      type: Fusee.Math.Core.Quaternion
      description: The second instance.
    return:
      type: Fusee.Math.Core.Quaternion
      description: The result of the calculation.
    content.vb: Public Shared Operator *(left As Quaternion, right As Quaternion) As Quaternion
  overload: Fusee.Math.Core.Quaternion.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.op_Multiply(Fusee.Math.Core.Quaternion,System.Single)
  commentId: M:Fusee.Math.Core.Quaternion.op_Multiply(Fusee.Math.Core.Quaternion,System.Single)
  id: op_Multiply(Fusee.Math.Core.Quaternion,System.Single)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Multiply(Quaternion, Single)
  nameWithType: Quaternion.Multiply(Quaternion, Single)
  fullName: Fusee.Math.Core.Quaternion.Multiply(Fusee.Math.Core.Quaternion, System.Single)
  type: Operator
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: op_Multiply
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 866
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nMultiplies an instance by a scalar.\n"
  example: []
  syntax:
    content: public static Quaternion operator *(Quaternion quaternion, float scale)
    parameters:
    - id: quaternion
      type: Fusee.Math.Core.Quaternion
      description: The instance.
    - id: scale
      type: System.Single
      description: The scalar.
    return:
      type: Fusee.Math.Core.Quaternion
      description: A new instance containing the result of the calculation.
    content.vb: Public Shared Operator *(quaternion As Quaternion, scale As Single) As Quaternion
  overload: Fusee.Math.Core.Quaternion.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.op_Multiply(System.Single,Fusee.Math.Core.Quaternion)
  commentId: M:Fusee.Math.Core.Quaternion.op_Multiply(System.Single,Fusee.Math.Core.Quaternion)
  id: op_Multiply(System.Single,Fusee.Math.Core.Quaternion)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Multiply(Single, Quaternion)
  nameWithType: Quaternion.Multiply(Single, Quaternion)
  fullName: Fusee.Math.Core.Quaternion.Multiply(System.Single, Fusee.Math.Core.Quaternion)
  type: Operator
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: op_Multiply
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 877
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nMultiplies an instance by a scalar.\n"
  example: []
  syntax:
    content: public static Quaternion operator *(float scale, Quaternion quaternion)
    parameters:
    - id: scale
      type: System.Single
      description: The scalar.
    - id: quaternion
      type: Fusee.Math.Core.Quaternion
      description: The instance.
    return:
      type: Fusee.Math.Core.Quaternion
      description: A new instance containing the result of the calculation.
    content.vb: Public Shared Operator *(scale As Single, quaternion As Quaternion) As Quaternion
  overload: Fusee.Math.Core.Quaternion.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.op_Equality(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  commentId: M:Fusee.Math.Core.Quaternion.op_Equality(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  id: op_Equality(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Equality(Quaternion, Quaternion)
  nameWithType: Quaternion.Equality(Quaternion, Quaternion)
  fullName: Fusee.Math.Core.Quaternion.Equality(Fusee.Math.Core.Quaternion, Fusee.Math.Core.Quaternion)
  type: Operator
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: op_Equality
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 888
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCompares two instances for equality.\n"
  example: []
  syntax:
    content: public static bool operator ==(Quaternion left, Quaternion right)
    parameters:
    - id: left
      type: Fusee.Math.Core.Quaternion
      description: The first instance.
    - id: right
      type: Fusee.Math.Core.Quaternion
      description: The second instance.
    return:
      type: System.Boolean
      description: True, if left equals right; false otherwise.
    content.vb: Public Shared Operator =(left As Quaternion, right As Quaternion) As Boolean
  overload: Fusee.Math.Core.Quaternion.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.op_Inequality(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  commentId: M:Fusee.Math.Core.Quaternion.op_Inequality(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  id: op_Inequality(Fusee.Math.Core.Quaternion,Fusee.Math.Core.Quaternion)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Inequality(Quaternion, Quaternion)
  nameWithType: Quaternion.Inequality(Quaternion, Quaternion)
  fullName: Fusee.Math.Core.Quaternion.Inequality(Fusee.Math.Core.Quaternion, Fusee.Math.Core.Quaternion)
  type: Operator
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: op_Inequality
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 899
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCompares two instances for inequality.\n"
  example: []
  syntax:
    content: public static bool operator !=(Quaternion left, Quaternion right)
    parameters:
    - id: left
      type: Fusee.Math.Core.Quaternion
      description: The first instance.
    - id: right
      type: Fusee.Math.Core.Quaternion
      description: The second instance.
    return:
      type: System.Boolean
      description: True, if left does not equal right; false otherwise.
    content.vb: Public Shared Operator <>(left As Quaternion, right As Quaternion) As Boolean
  overload: Fusee.Math.Core.Quaternion.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.Quaternion.ToString
  commentId: M:Fusee.Math.Core.Quaternion.ToString
  id: ToString
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Quaternion.ToString()
  fullName: Fusee.Math.Core.Quaternion.ToString()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: ToString
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 914
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns a System.String that represents the current Quaternion.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string.
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Fusee.Math.Core.Quaternion.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Fusee.Math.Core.Quaternion.ToString(System.IFormatProvider)
  commentId: M:Fusee.Math.Core.Quaternion.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  nameWithType: Quaternion.ToString(IFormatProvider)
  fullName: Fusee.Math.Core.Quaternion.ToString(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: ToString
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 926
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns a System.String that represents the current Quaternion.\n"
  example: []
  syntax:
    content: public string ToString(IFormatProvider provider)
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: Provides information about a specific culture.
    return:
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
    content.vb: Public Function ToString(provider As IFormatProvider) As String
  overload: Fusee.Math.Core.Quaternion.ToString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.Quaternion.Equals(System.Object)
  commentId: M:Fusee.Math.Core.Quaternion.Equals(System.Object)
  id: Equals(System.Object)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Quaternion.Equals(Object)
  fullName: Fusee.Math.Core.Quaternion.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Equals
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 948
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCompares this object instance to another object for equality.\n"
  example: []
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
      description: The other object to be used in the comparison.
    return:
      type: System.Boolean
      description: True if both objects are Quaternions of equal value. Otherwise it returns false.
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Fusee.Math.Core.Quaternion.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Fusee.Math.Core.Quaternion.GetHashCode
  commentId: M:Fusee.Math.Core.Quaternion.GetHashCode
  id: GetHashCode
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: Quaternion.GetHashCode()
  fullName: Fusee.Math.Core.Quaternion.GetHashCode()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: GetHashCode
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 962
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nProvides the hash code for this object.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code formed from the bitwise XOR of this objects members.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: Fusee.Math.Core.Quaternion.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Fusee.Math.Core.Quaternion.Equals(Fusee.Math.Core.Quaternion)
  commentId: M:Fusee.Math.Core.Quaternion.Equals(Fusee.Math.Core.Quaternion)
  id: Equals(Fusee.Math.Core.Quaternion)
  parent: Fusee.Math.Core.Quaternion
  langs:
  - csharp
  - vb
  name: Equals(Quaternion)
  nameWithType: Quaternion.Equals(Quaternion)
  fullName: Fusee.Math.Core.Quaternion.Equals(Fusee.Math.Core.Quaternion)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Quaternion.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Equals
    path: src/Fusee/src/Math/Core/Quaternion.cs
    startLine: 980
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCompares this Quaternion instance to another Quaternion for equality.\n"
  example: []
  syntax:
    content: public bool Equals(Quaternion other)
    parameters:
    - id: other
      type: Fusee.Math.Core.Quaternion
      description: The other Quaternion to be used in the comparison.
    return:
      type: System.Boolean
      description: True if both instances are equal; false otherwise.
    content.vb: Public Function Equals(other As Quaternion) As Boolean
  overload: Fusee.Math.Core.Quaternion.Equals*
  implements:
  - System.IEquatable{Fusee.Math.Core.Quaternion}.Equals(Fusee.Math.Core.Quaternion)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Fusee.Math.Core
  commentId: N:Fusee.Math.Core
  name: Fusee.Math.Core
  nameWithType: Fusee.Math.Core
  fullName: Fusee.Math.Core
- uid: System.IEquatable{Fusee.Math.Core.Quaternion}
  commentId: T:System.IEquatable{Fusee.Math.Core.Quaternion}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<Quaternion>
  nameWithType: IEquatable<Quaternion>
  fullName: System.IEquatable<Fusee.Math.Core.Quaternion>
  nameWithType.vb: IEquatable(Of Quaternion)
  fullName.vb: System.IEquatable(Of Fusee.Math.Core.Quaternion)
  name.vb: IEquatable(Of Quaternion)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Fusee.Math.Core.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Fusee.Math.Core.Quaternion
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Fusee.Math.Core.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Fusee.Math.Core.Quaternion
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Fusee.Math.Core.Quaternion.#ctor*
  commentId: Overload:Fusee.Math.Core.Quaternion.#ctor
  name: Quaternion
  nameWithType: Quaternion.Quaternion
  fullName: Fusee.Math.Core.Quaternion.Quaternion
- uid: Fusee.Math.Core.float3
  commentId: T:Fusee.Math.Core.float3
  parent: Fusee.Math.Core
  name: float3
  nameWithType: float3
  fullName: Fusee.Math.Core.float3
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Fusee.Math.Core.Quaternion.xyz*
  commentId: Overload:Fusee.Math.Core.Quaternion.xyz
  name: xyz
  nameWithType: Quaternion.xyz
  fullName: Fusee.Math.Core.Quaternion.xyz
- uid: Fusee.Math.Core.Quaternion.x*
  commentId: Overload:Fusee.Math.Core.Quaternion.x
  name: x
  nameWithType: Quaternion.x
  fullName: Fusee.Math.Core.Quaternion.x
- uid: Fusee.Math.Core.Quaternion.y*
  commentId: Overload:Fusee.Math.Core.Quaternion.y
  name: y
  nameWithType: Quaternion.y
  fullName: Fusee.Math.Core.Quaternion.y
- uid: Fusee.Math.Core.Quaternion.z*
  commentId: Overload:Fusee.Math.Core.Quaternion.z
  name: z
  nameWithType: Quaternion.z
  fullName: Fusee.Math.Core.Quaternion.z
- uid: Fusee.Math.Core.Quaternion.w*
  commentId: Overload:Fusee.Math.Core.Quaternion.w
  name: w
  nameWithType: Quaternion.w
  fullName: Fusee.Math.Core.Quaternion.w
- uid: Fusee.Math.Core.Quaternion.Item*
  commentId: Overload:Fusee.Math.Core.Quaternion.Item
  name: Item
  nameWithType: Quaternion.Item
  fullName: Fusee.Math.Core.Quaternion.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Fusee.Math.Core.Quaternion.ToAxisAngle*
  commentId: Overload:Fusee.Math.Core.Quaternion.ToAxisAngle
  name: ToAxisAngle
  nameWithType: Quaternion.ToAxisAngle
  fullName: Fusee.Math.Core.Quaternion.ToAxisAngle
- uid: Fusee.Math.Core.float4
  commentId: T:Fusee.Math.Core.float4
  parent: Fusee.Math.Core
  name: float4
  nameWithType: float4
  fullName: Fusee.Math.Core.float4
- uid: Fusee.Math.Core.Quaternion.ToRotMat*
  commentId: Overload:Fusee.Math.Core.Quaternion.ToRotMat
  name: ToRotMat
  nameWithType: Quaternion.ToRotMat
  fullName: Fusee.Math.Core.Quaternion.ToRotMat
- uid: Fusee.Math.Core.float4x4
  commentId: T:Fusee.Math.Core.float4x4
  parent: Fusee.Math.Core
  name: float4x4
  nameWithType: float4x4
  fullName: Fusee.Math.Core.float4x4
- uid: Fusee.Math.Core.Quaternion.LengthSquared
  commentId: P:Fusee.Math.Core.Quaternion.LengthSquared
  isExternal: true
- uid: Fusee.Math.Core.Quaternion.Length*
  commentId: Overload:Fusee.Math.Core.Quaternion.Length
  name: Length
  nameWithType: Quaternion.Length
  fullName: Fusee.Math.Core.Quaternion.Length
- uid: Fusee.Math.Core.Quaternion.LengthSquared*
  commentId: Overload:Fusee.Math.Core.Quaternion.LengthSquared
  name: LengthSquared
  nameWithType: Quaternion.LengthSquared
  fullName: Fusee.Math.Core.Quaternion.LengthSquared
- uid: Fusee.Math.Core.Quaternion.Normalize*
  commentId: Overload:Fusee.Math.Core.Quaternion.Normalize
  name: Normalize
  nameWithType: Quaternion.Normalize
  fullName: Fusee.Math.Core.Quaternion.Normalize
- uid: Fusee.Math.Core.Quaternion
  commentId: T:Fusee.Math.Core.Quaternion
  parent: Fusee.Math.Core
  name: Quaternion
  nameWithType: Quaternion
  fullName: Fusee.Math.Core.Quaternion
- uid: Fusee.Math.Core.Quaternion.Conjugate*
  commentId: Overload:Fusee.Math.Core.Quaternion.Conjugate
  name: Conjugate
  nameWithType: Quaternion.Conjugate
  fullName: Fusee.Math.Core.Quaternion.Conjugate
- uid: Fusee.Math.Core.Quaternion.Invert*
  commentId: Overload:Fusee.Math.Core.Quaternion.Invert
  name: Invert
  nameWithType: Quaternion.Invert
  fullName: Fusee.Math.Core.Quaternion.Invert
- uid: Fusee.Math.Core.Quaternion.Add*
  commentId: Overload:Fusee.Math.Core.Quaternion.Add
  name: Add
  nameWithType: Quaternion.Add
  fullName: Fusee.Math.Core.Quaternion.Add
- uid: Fusee.Math.Core.Quaternion.Sub*
  commentId: Overload:Fusee.Math.Core.Quaternion.Sub
  name: Sub
  nameWithType: Quaternion.Sub
  fullName: Fusee.Math.Core.Quaternion.Sub
- uid: Fusee.Math.Core.Quaternion.Multiply*
  commentId: Overload:Fusee.Math.Core.Quaternion.Multiply
  name: Multiply
  nameWithType: Quaternion.Multiply
  fullName: Fusee.Math.Core.Quaternion.Multiply
- uid: Fusee.Math.Core.Quaternion.FromAxisAngle*
  commentId: Overload:Fusee.Math.Core.Quaternion.FromAxisAngle
  name: FromAxisAngle
  nameWithType: Quaternion.FromAxisAngle
  fullName: Fusee.Math.Core.Quaternion.FromAxisAngle
- uid: Fusee.Math.Core.Quaternion.Slerp*
  commentId: Overload:Fusee.Math.Core.Quaternion.Slerp
  name: Slerp
  nameWithType: Quaternion.Slerp
  fullName: Fusee.Math.Core.Quaternion.Slerp
- uid: Fusee.Math.Core.Quaternion.EulerToQuaternion*
  commentId: Overload:Fusee.Math.Core.Quaternion.EulerToQuaternion
  name: EulerToQuaternion
  nameWithType: Quaternion.EulerToQuaternion
  fullName: Fusee.Math.Core.Quaternion.EulerToQuaternion
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Fusee.Math.Core.Quaternion.FromQuatToEuler*
  commentId: Overload:Fusee.Math.Core.Quaternion.FromQuatToEuler
  name: FromQuatToEuler
  nameWithType: Quaternion.FromQuatToEuler
  fullName: Fusee.Math.Core.Quaternion.FromQuatToEuler
- uid: Fusee.Math.Core.Quaternion.QuaternionToEuler*
  commentId: Overload:Fusee.Math.Core.Quaternion.QuaternionToEuler
  name: QuaternionToEuler
  nameWithType: Quaternion.QuaternionToEuler
  fullName: Fusee.Math.Core.Quaternion.QuaternionToEuler
- uid: Fusee.Math.Core.Quaternion.LookRotation*
  commentId: Overload:Fusee.Math.Core.Quaternion.LookRotation
  name: LookRotation
  nameWithType: Quaternion.LookRotation
  fullName: Fusee.Math.Core.Quaternion.LookRotation
- uid: Fusee.Math.Core.Quaternion.QuaternionToMatrix*
  commentId: Overload:Fusee.Math.Core.Quaternion.QuaternionToMatrix
  name: QuaternionToMatrix
  nameWithType: Quaternion.QuaternionToMatrix
  fullName: Fusee.Math.Core.Quaternion.QuaternionToMatrix
- uid: Fusee.Math.Core.Quaternion.CopySign*
  commentId: Overload:Fusee.Math.Core.Quaternion.CopySign
  name: CopySign
  nameWithType: Quaternion.CopySign
  fullName: Fusee.Math.Core.Quaternion.CopySign
- uid: Fusee.Math.Core.Quaternion.FromToRotation*
  commentId: Overload:Fusee.Math.Core.Quaternion.FromToRotation
  name: FromToRotation
  nameWithType: Quaternion.FromToRotation
  fullName: Fusee.Math.Core.Quaternion.FromToRotation
- uid: Fusee.Math.Core.Quaternion.Transform*
  commentId: Overload:Fusee.Math.Core.Quaternion.Transform
  name: Transform
  nameWithType: Quaternion.Transform
  fullName: Fusee.Math.Core.Quaternion.Transform
- uid: Fusee.Math.Core.Quaternion.op_Addition*
  commentId: Overload:Fusee.Math.Core.Quaternion.op_Addition
  name: Addition
  nameWithType: Quaternion.Addition
  fullName: Fusee.Math.Core.Quaternion.Addition
- uid: Fusee.Math.Core.Quaternion.op_Subtraction*
  commentId: Overload:Fusee.Math.Core.Quaternion.op_Subtraction
  name: Subtraction
  nameWithType: Quaternion.Subtraction
  fullName: Fusee.Math.Core.Quaternion.Subtraction
- uid: Fusee.Math.Core.Quaternion.op_Multiply*
  commentId: Overload:Fusee.Math.Core.Quaternion.op_Multiply
  name: Multiply
  nameWithType: Quaternion.Multiply
  fullName: Fusee.Math.Core.Quaternion.Multiply
- uid: Fusee.Math.Core.Quaternion.op_Equality*
  commentId: Overload:Fusee.Math.Core.Quaternion.op_Equality
  name: Equality
  nameWithType: Quaternion.Equality
  fullName: Fusee.Math.Core.Quaternion.Equality
- uid: Fusee.Math.Core.Quaternion.op_Inequality*
  commentId: Overload:Fusee.Math.Core.Quaternion.op_Inequality
  name: Inequality
  nameWithType: Quaternion.Inequality
  fullName: Fusee.Math.Core.Quaternion.Inequality
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Math.Core.Quaternion.ToString*
  commentId: Overload:Fusee.Math.Core.Quaternion.ToString
  name: ToString
  nameWithType: Quaternion.ToString
  fullName: Fusee.Math.Core.Quaternion.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Math.Core.Quaternion.Equals*
  commentId: Overload:Fusee.Math.Core.Quaternion.Equals
  name: Equals
  nameWithType: Quaternion.Equals
  fullName: Fusee.Math.Core.Quaternion.Equals
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Math.Core.Quaternion.GetHashCode*
  commentId: Overload:Fusee.Math.Core.Quaternion.GetHashCode
  name: GetHashCode
  nameWithType: Quaternion.GetHashCode
  fullName: Fusee.Math.Core.Quaternion.GetHashCode
- uid: System.IEquatable{Fusee.Math.Core.Quaternion}.Equals(Fusee.Math.Core.Quaternion)
  commentId: M:System.IEquatable{Fusee.Math.Core.Quaternion}.Equals(Fusee.Math.Core.Quaternion)
  parent: System.IEquatable{Fusee.Math.Core.Quaternion}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(Quaternion)
  nameWithType: IEquatable<Quaternion>.Equals(Quaternion)
  fullName: System.IEquatable<Fusee.Math.Core.Quaternion>.Equals(Fusee.Math.Core.Quaternion)
  nameWithType.vb: IEquatable(Of Quaternion).Equals(Quaternion)
  fullName.vb: System.IEquatable(Of Fusee.Math.Core.Quaternion).Equals(Fusee.Math.Core.Quaternion)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<Quaternion>.Equals
    fullName: System.IEquatable<Fusee.Math.Core.Quaternion>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Fusee.Math.Core.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Fusee.Math.Core.Quaternion
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of Quaternion).Equals
    fullName: System.IEquatable(Of Fusee.Math.Core.Quaternion).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Fusee.Math.Core.Quaternion
    name: Quaternion
    nameWithType: Quaternion
    fullName: Fusee.Math.Core.Quaternion
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )

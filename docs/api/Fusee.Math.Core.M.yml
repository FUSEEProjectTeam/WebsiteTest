### YamlMime:ManagedReference
items:
- uid: Fusee.Math.Core.M
  commentId: T:Fusee.Math.Core.M
  id: M
  parent: Fusee.Math.Core
  children:
  - Fusee.Math.Core.M.BinomialCoefficient(System.Int32,System.Int32)
  - Fusee.Math.Core.M.CalculateCentroid(System.Collections.Generic.IEnumerable{Fusee.Math.Core.double3})
  - Fusee.Math.Core.M.CalculateCentroid(System.Collections.Generic.IEnumerable{Fusee.Math.Core.float3})
  - Fusee.Math.Core.M.Clamp(System.Double,System.Double,System.Double)
  - Fusee.Math.Core.M.Clamp(System.Single,System.Single,System.Single)
  - Fusee.Math.Core.M.Cos(System.Single)
  - Fusee.Math.Core.M.CreateCovarianceMatrix(Fusee.Math.Core.double3,System.Collections.Generic.IEnumerable{Fusee.Math.Core.double3})
  - Fusee.Math.Core.M.CreateCovarianceMatrix(Fusee.Math.Core.float3,System.Collections.Generic.IEnumerable{Fusee.Math.Core.float3})
  - Fusee.Math.Core.M.DegreesToRadians(System.Single)
  - Fusee.Math.Core.M.DegreesToRadiansD(System.Double)
  - Fusee.Math.Core.M.Diagonalizer(Fusee.Math.Core.double4x4)
  - Fusee.Math.Core.M.Diagonalizer(Fusee.Math.Core.float4x4)
  - Fusee.Math.Core.M.E
  - Fusee.Math.Core.M.EigenFromCovarianceMat(Fusee.Math.Core.double4x4)
  - Fusee.Math.Core.M.EigenFromCovarianceMat(Fusee.Math.Core.float4x4)
  - Fusee.Math.Core.M.EpsilonDouble
  - Fusee.Math.Core.M.EpsilonFloat
  - Fusee.Math.Core.M.Equals(System.Double,System.Double)
  - Fusee.Math.Core.M.Equals(System.Single,System.Single)
  - Fusee.Math.Core.M.Factorial(System.Int32)
  - Fusee.Math.Core.M.Float4ToABGR(Fusee.Math.Core.float4)
  - Fusee.Math.Core.M.InverseSqrtFast(System.Double)
  - Fusee.Math.Core.M.InverseSqrtFast(System.Single)
  - Fusee.Math.Core.M.IsPowerOfTwo(System.Int32)
  - Fusee.Math.Core.M.Lerp(System.Single,System.Single,System.Single)
  - Fusee.Math.Core.M.Log10E
  - Fusee.Math.Core.M.Log2E
  - Fusee.Math.Core.M.Max(System.Double,System.Double)
  - Fusee.Math.Core.M.Max(System.Int16,System.Int16)
  - Fusee.Math.Core.M.Max(System.Int32,System.Int32)
  - Fusee.Math.Core.M.Max(System.Single,System.Single)
  - Fusee.Math.Core.M.Max(System.UInt16,System.UInt16)
  - Fusee.Math.Core.M.Max(System.UInt32,System.UInt32)
  - Fusee.Math.Core.M.Min(System.Double,System.Double)
  - Fusee.Math.Core.M.Min(System.Int16,System.Int16)
  - Fusee.Math.Core.M.Min(System.Int32,System.Int32)
  - Fusee.Math.Core.M.Min(System.Single,System.Single)
  - Fusee.Math.Core.M.Min(System.UInt16,System.UInt16)
  - Fusee.Math.Core.M.Min(System.UInt32,System.UInt32)
  - Fusee.Math.Core.M.MinAngle(System.Double)
  - Fusee.Math.Core.M.MinAngle(System.Single)
  - Fusee.Math.Core.M.NextPowerOfTwo(System.Double)
  - Fusee.Math.Core.M.NextPowerOfTwo(System.Int32)
  - Fusee.Math.Core.M.NextPowerOfTwo(System.Int64)
  - Fusee.Math.Core.M.NextPowerOfTwo(System.Single)
  - Fusee.Math.Core.M.Pi
  - Fusee.Math.Core.M.PiOver2
  - Fusee.Math.Core.M.PiOver3
  - Fusee.Math.Core.M.PiOver4
  - Fusee.Math.Core.M.PiOver6
  - Fusee.Math.Core.M.RadiansToDegrees(System.Single)
  - Fusee.Math.Core.M.RadiansToDegreesD(System.Double)
  - Fusee.Math.Core.M.Sin(System.Single)
  - Fusee.Math.Core.M.SineStep(System.Single)
  - Fusee.Math.Core.M.SmootherStep(System.Single)
  - Fusee.Math.Core.M.SmoothStep(System.Single)
  - Fusee.Math.Core.M.Swap(System.Double@,System.Double@)
  - Fusee.Math.Core.M.Swap(System.Single@,System.Single@)
  - Fusee.Math.Core.M.ThreePiOver2
  - Fusee.Math.Core.M.TwoPi
  langs:
  - csharp
  - vb
  name: M
  nameWithType: M
  fullName: Fusee.Math.Core.M
  type: Class
  source:
    id: M
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 19
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nProvides standard mathematical functions and helpers for different types.\n"
  example: []
  syntax:
    content: public static class M
    content.vb: Public Module M
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Fusee.Math.Core.M.Min(System.Single,System.Single)
  commentId: M:Fusee.Math.Core.M.Min(System.Single,System.Single)
  id: Min(System.Single,System.Single)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Min(Single, Single)
  nameWithType: M.Min(Single, Single)
  fullName: Fusee.Math.Core.M.Min(System.Single, System.Single)
  type: Method
  source:
    id: Min
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 29
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCalculates the minimum of a and b.\n"
  example: []
  syntax:
    content: public static float Min(float a, float b)
    parameters:
    - id: a
      type: System.Single
      description: a.
    - id: b
      type: System.Single
      description: b.
    return:
      type: System.Single
      description: The minimum of a and b.
    content.vb: Public Shared Function Min(a As Single, b As Single) As Single
  overload: Fusee.Math.Core.M.Min*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.Max(System.Single,System.Single)
  commentId: M:Fusee.Math.Core.M.Max(System.Single,System.Single)
  id: Max(System.Single,System.Single)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Max(Single, Single)
  nameWithType: M.Max(Single, Single)
  fullName: Fusee.Math.Core.M.Max(System.Single, System.Single)
  type: Method
  source:
    id: Max
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 40
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCalculates the maximum of a and b.\n"
  example: []
  syntax:
    content: public static float Max(float a, float b)
    parameters:
    - id: a
      type: System.Single
      description: a.
    - id: b
      type: System.Single
      description: b.
    return:
      type: System.Single
      description: The maximum of a and b.
    content.vb: Public Shared Function Max(a As Single, b As Single) As Single
  overload: Fusee.Math.Core.M.Max*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.Min(System.Double,System.Double)
  commentId: M:Fusee.Math.Core.M.Min(System.Double,System.Double)
  id: Min(System.Double,System.Double)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Min(Double, Double)
  nameWithType: M.Min(Double, Double)
  fullName: Fusee.Math.Core.M.Min(System.Double, System.Double)
  type: Method
  source:
    id: Min
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 51
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCalculates the minimum of a and b.\n"
  example: []
  syntax:
    content: public static double Min(double a, double b)
    parameters:
    - id: a
      type: System.Double
      description: a.
    - id: b
      type: System.Double
      description: b.
    return:
      type: System.Double
      description: The minimum of a and b.
    content.vb: Public Shared Function Min(a As Double, b As Double) As Double
  overload: Fusee.Math.Core.M.Min*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.Max(System.Double,System.Double)
  commentId: M:Fusee.Math.Core.M.Max(System.Double,System.Double)
  id: Max(System.Double,System.Double)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Max(Double, Double)
  nameWithType: M.Max(Double, Double)
  fullName: Fusee.Math.Core.M.Max(System.Double, System.Double)
  type: Method
  source:
    id: Max
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 62
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCalculates the maximum of a and b.\n"
  example: []
  syntax:
    content: public static double Max(double a, double b)
    parameters:
    - id: a
      type: System.Double
      description: a.
    - id: b
      type: System.Double
      description: b.
    return:
      type: System.Double
      description: The maximum of a and b.
    content.vb: Public Shared Function Max(a As Double, b As Double) As Double
  overload: Fusee.Math.Core.M.Max*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.Min(System.Int32,System.Int32)
  commentId: M:Fusee.Math.Core.M.Min(System.Int32,System.Int32)
  id: Min(System.Int32,System.Int32)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Min(Int32, Int32)
  nameWithType: M.Min(Int32, Int32)
  fullName: Fusee.Math.Core.M.Min(System.Int32, System.Int32)
  type: Method
  source:
    id: Min
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 73
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCalculates the minimum of a and b.\n"
  example: []
  syntax:
    content: public static int Min(int a, int b)
    parameters:
    - id: a
      type: System.Int32
      description: a.
    - id: b
      type: System.Int32
      description: b.
    return:
      type: System.Int32
      description: The minimum of a and b.
    content.vb: Public Shared Function Min(a As Integer, b As Integer) As Integer
  overload: Fusee.Math.Core.M.Min*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.Max(System.Int32,System.Int32)
  commentId: M:Fusee.Math.Core.M.Max(System.Int32,System.Int32)
  id: Max(System.Int32,System.Int32)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Max(Int32, Int32)
  nameWithType: M.Max(Int32, Int32)
  fullName: Fusee.Math.Core.M.Max(System.Int32, System.Int32)
  type: Method
  source:
    id: Max
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 84
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCalculates the maximum of a and b.\n"
  example: []
  syntax:
    content: public static int Max(int a, int b)
    parameters:
    - id: a
      type: System.Int32
      description: a.
    - id: b
      type: System.Int32
      description: b.
    return:
      type: System.Int32
      description: The maximum of a and b.
    content.vb: Public Shared Function Max(a As Integer, b As Integer) As Integer
  overload: Fusee.Math.Core.M.Max*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.Min(System.UInt32,System.UInt32)
  commentId: M:Fusee.Math.Core.M.Min(System.UInt32,System.UInt32)
  id: Min(System.UInt32,System.UInt32)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Min(UInt32, UInt32)
  nameWithType: M.Min(UInt32, UInt32)
  fullName: Fusee.Math.Core.M.Min(System.UInt32, System.UInt32)
  type: Method
  source:
    id: Min
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 95
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCalculates the minimum of a and b.\n"
  example: []
  syntax:
    content: public static uint Min(uint a, uint b)
    parameters:
    - id: a
      type: System.UInt32
      description: a.
    - id: b
      type: System.UInt32
      description: b.
    return:
      type: System.UInt32
      description: The minimum of a and b.
    content.vb: Public Shared Function Min(a As UInteger, b As UInteger) As UInteger
  overload: Fusee.Math.Core.M.Min*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.Max(System.UInt32,System.UInt32)
  commentId: M:Fusee.Math.Core.M.Max(System.UInt32,System.UInt32)
  id: Max(System.UInt32,System.UInt32)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Max(UInt32, UInt32)
  nameWithType: M.Max(UInt32, UInt32)
  fullName: Fusee.Math.Core.M.Max(System.UInt32, System.UInt32)
  type: Method
  source:
    id: Max
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 106
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCalculates the maximum of a and b.\n"
  example: []
  syntax:
    content: public static uint Max(uint a, uint b)
    parameters:
    - id: a
      type: System.UInt32
      description: a.
    - id: b
      type: System.UInt32
      description: b.
    return:
      type: System.UInt32
      description: The maximum of a and b.
    content.vb: Public Shared Function Max(a As UInteger, b As UInteger) As UInteger
  overload: Fusee.Math.Core.M.Max*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.Min(System.Int16,System.Int16)
  commentId: M:Fusee.Math.Core.M.Min(System.Int16,System.Int16)
  id: Min(System.Int16,System.Int16)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Min(Int16, Int16)
  nameWithType: M.Min(Int16, Int16)
  fullName: Fusee.Math.Core.M.Min(System.Int16, System.Int16)
  type: Method
  source:
    id: Min
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 117
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCalculates the minimum of a and b.\n"
  example: []
  syntax:
    content: public static short Min(short a, short b)
    parameters:
    - id: a
      type: System.Int16
      description: a.
    - id: b
      type: System.Int16
      description: b.
    return:
      type: System.Int16
      description: The minimum of a and b.
    content.vb: Public Shared Function Min(a As Short, b As Short) As Short
  overload: Fusee.Math.Core.M.Min*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.Max(System.Int16,System.Int16)
  commentId: M:Fusee.Math.Core.M.Max(System.Int16,System.Int16)
  id: Max(System.Int16,System.Int16)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Max(Int16, Int16)
  nameWithType: M.Max(Int16, Int16)
  fullName: Fusee.Math.Core.M.Max(System.Int16, System.Int16)
  type: Method
  source:
    id: Max
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 128
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCalculates the maximum of a and b.\n"
  example: []
  syntax:
    content: public static short Max(short a, short b)
    parameters:
    - id: a
      type: System.Int16
      description: a.
    - id: b
      type: System.Int16
      description: b.
    return:
      type: System.Int16
      description: The maximum of a and b.
    content.vb: Public Shared Function Max(a As Short, b As Short) As Short
  overload: Fusee.Math.Core.M.Max*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.Min(System.UInt16,System.UInt16)
  commentId: M:Fusee.Math.Core.M.Min(System.UInt16,System.UInt16)
  id: Min(System.UInt16,System.UInt16)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Min(UInt16, UInt16)
  nameWithType: M.Min(UInt16, UInt16)
  fullName: Fusee.Math.Core.M.Min(System.UInt16, System.UInt16)
  type: Method
  source:
    id: Min
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 139
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCalculates the minimum of a and b.\n"
  example: []
  syntax:
    content: public static ushort Min(ushort a, ushort b)
    parameters:
    - id: a
      type: System.UInt16
      description: a.
    - id: b
      type: System.UInt16
      description: b.
    return:
      type: System.UInt16
      description: The minimum of a and b.
    content.vb: Public Shared Function Min(a As UShort, b As UShort) As UShort
  overload: Fusee.Math.Core.M.Min*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.Max(System.UInt16,System.UInt16)
  commentId: M:Fusee.Math.Core.M.Max(System.UInt16,System.UInt16)
  id: Max(System.UInt16,System.UInt16)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Max(UInt16, UInt16)
  nameWithType: M.Max(UInt16, UInt16)
  fullName: Fusee.Math.Core.M.Max(System.UInt16, System.UInt16)
  type: Method
  source:
    id: Max
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 150
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCalculates the maximum of a and b.\n"
  example: []
  syntax:
    content: public static ushort Max(ushort a, ushort b)
    parameters:
    - id: a
      type: System.UInt16
      description: a.
    - id: b
      type: System.UInt16
      description: b.
    return:
      type: System.UInt16
      description: The maximum of a and b.
    content.vb: Public Shared Function Max(a As UShort, b As UShort) As UShort
  overload: Fusee.Math.Core.M.Max*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.EpsilonFloat
  commentId: F:Fusee.Math.Core.M.EpsilonFloat
  id: EpsilonFloat
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: EpsilonFloat
  nameWithType: M.EpsilonFloat
  fullName: Fusee.Math.Core.M.EpsilonFloat
  type: Field
  source:
    id: EpsilonFloat
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 162
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDefines the value which represents the machine epsilon for <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref> in C#.\n"
  example: []
  syntax:
    content: public const float EpsilonFloat = 1.192093E-07F
    return:
      type: System.Single
    content.vb: Public Const EpsilonFloat As Single = 1.192093E-07F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Fusee.Math.Core.M.EpsilonDouble
  commentId: F:Fusee.Math.Core.M.EpsilonDouble
  id: EpsilonDouble
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: EpsilonDouble
  nameWithType: M.EpsilonDouble
  fullName: Fusee.Math.Core.M.EpsilonDouble
  type: Field
  source:
    id: EpsilonDouble
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 167
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDefines the value which represents the machine epsilon for <xref href=\"System.Double\" data-throw-if-not-resolved=\"false\"></xref> in C#.\n"
  example: []
  syntax:
    content: public const double EpsilonDouble = 1.11022302462516E-16
    return:
      type: System.Double
    content.vb: Public Const EpsilonDouble As Double = 1.11022302462516E-16
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Fusee.Math.Core.M.Pi
  commentId: F:Fusee.Math.Core.M.Pi
  id: Pi
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Pi
  nameWithType: M.Pi
  fullName: Fusee.Math.Core.M.Pi
  type: Field
  source:
    id: Pi
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 172
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDefines the value of Pi as a <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public const float Pi = 3.14159274F
    return:
      type: System.Single
    content.vb: Public Const Pi As Single = 3.14159274F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Fusee.Math.Core.M.PiOver2
  commentId: F:Fusee.Math.Core.M.PiOver2
  id: PiOver2
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: PiOver2
  nameWithType: M.PiOver2
  fullName: Fusee.Math.Core.M.PiOver2
  type: Field
  source:
    id: PiOver2
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 177
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDefines the value of Pi divided by two as a <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public const float PiOver2 = 1.57079637F
    return:
      type: System.Single
    content.vb: Public Const PiOver2 As Single = 1.57079637F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Fusee.Math.Core.M.PiOver3
  commentId: F:Fusee.Math.Core.M.PiOver3
  id: PiOver3
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: PiOver3
  nameWithType: M.PiOver3
  fullName: Fusee.Math.Core.M.PiOver3
  type: Field
  source:
    id: PiOver3
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 182
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDefines the value of Pi divided by three as a <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public const float PiOver3 = 1.04719758F
    return:
      type: System.Single
    content.vb: Public Const PiOver3 As Single = 1.04719758F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Fusee.Math.Core.M.PiOver4
  commentId: F:Fusee.Math.Core.M.PiOver4
  id: PiOver4
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: PiOver4
  nameWithType: M.PiOver4
  fullName: Fusee.Math.Core.M.PiOver4
  type: Field
  source:
    id: PiOver4
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 187
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDefines the value of  Pi divided by four as a <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public const float PiOver4 = 0.7853982F
    return:
      type: System.Single
    content.vb: Public Const PiOver4 As Single = 0.7853982F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Fusee.Math.Core.M.PiOver6
  commentId: F:Fusee.Math.Core.M.PiOver6
  id: PiOver6
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: PiOver6
  nameWithType: M.PiOver6
  fullName: Fusee.Math.Core.M.PiOver6
  type: Field
  source:
    id: PiOver6
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 192
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDefines the value of Pi divided by six as a <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public const float PiOver6 = 0.5235988F
    return:
      type: System.Single
    content.vb: Public Const PiOver6 As Single = 0.5235988F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Fusee.Math.Core.M.TwoPi
  commentId: F:Fusee.Math.Core.M.TwoPi
  id: TwoPi
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: TwoPi
  nameWithType: M.TwoPi
  fullName: Fusee.Math.Core.M.TwoPi
  type: Field
  source:
    id: TwoPi
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 197
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDefines the value of Pi multiplied by two as a <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public const float TwoPi = 6.28318548F
    return:
      type: System.Single
    content.vb: Public Const TwoPi As Single = 6.28318548F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Fusee.Math.Core.M.ThreePiOver2
  commentId: F:Fusee.Math.Core.M.ThreePiOver2
  id: ThreePiOver2
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: ThreePiOver2
  nameWithType: M.ThreePiOver2
  fullName: Fusee.Math.Core.M.ThreePiOver2
  type: Field
  source:
    id: ThreePiOver2
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 202
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDefines the value of Pi multiplied by 3 and divided by two as a <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public const float ThreePiOver2 = 4.712389F
    return:
      type: System.Single
    content.vb: Public Const ThreePiOver2 As Single = 4.712389F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Fusee.Math.Core.M.E
  commentId: F:Fusee.Math.Core.M.E
  id: E
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: E
  nameWithType: M.E
  fullName: Fusee.Math.Core.M.E
  type: Field
  source:
    id: E
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 207
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDefines the value of E as a <xref href=\"System.Single\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public const float E = 2.71828175F
    return:
      type: System.Single
    content.vb: Public Const E As Single = 2.71828175F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Fusee.Math.Core.M.Log10E
  commentId: F:Fusee.Math.Core.M.Log10E
  id: Log10E
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Log10E
  nameWithType: M.Log10E
  fullName: Fusee.Math.Core.M.Log10E
  type: Field
  source:
    id: Log10E
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 212
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDefines the base-10 logarithm of E.\n"
  example: []
  syntax:
    content: public const float Log10E = 0.4342945F
    return:
      type: System.Single
    content.vb: Public Const Log10E As Single = 0.4342945F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Fusee.Math.Core.M.Log2E
  commentId: F:Fusee.Math.Core.M.Log2E
  id: Log2E
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Log2E
  nameWithType: M.Log2E
  fullName: Fusee.Math.Core.M.Log2E
  type: Field
  source:
    id: Log2E
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 217
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDefines the base-2 logarithm of E.\n"
  example: []
  syntax:
    content: public const float Log2E = 1.442695F
    return:
      type: System.Single
    content.vb: Public Const Log2E As Single = 1.442695F
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Fusee.Math.Core.M.Sin(System.Single)
  commentId: M:Fusee.Math.Core.M.Sin(System.Single)
  id: Sin(System.Single)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Sin(Single)
  nameWithType: M.Sin(Single)
  fullName: Fusee.Math.Core.M.Sin(System.Single)
  type: Method
  source:
    id: Sin
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 230
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns the Sin of the given value as float.\n"
  example: []
  syntax:
    content: public static float Sin(float val)
    parameters:
    - id: val
      type: System.Single
      description: The value.
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function Sin(val As Single) As Single
  overload: Fusee.Math.Core.M.Sin*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.Cos(System.Single)
  commentId: M:Fusee.Math.Core.M.Cos(System.Single)
  id: Cos(System.Single)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Cos(Single)
  nameWithType: M.Cos(Single)
  fullName: Fusee.Math.Core.M.Cos(System.Single)
  type: Method
  source:
    id: Cos
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 240
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns the Cos of the given value as float.\n"
  example: []
  syntax:
    content: public static float Cos(float val)
    parameters:
    - id: val
      type: System.Single
      description: The value.
    return:
      type: System.Single
      description: ''
    content.vb: Public Shared Function Cos(val As Single) As Single
  overload: Fusee.Math.Core.M.Cos*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.NextPowerOfTwo(System.Int64)
  commentId: M:Fusee.Math.Core.M.NextPowerOfTwo(System.Int64)
  id: NextPowerOfTwo(System.Int64)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: NextPowerOfTwo(Int64)
  nameWithType: M.NextPowerOfTwo(Int64)
  fullName: Fusee.Math.Core.M.NextPowerOfTwo(System.Int64)
  type: Method
  source:
    id: NextPowerOfTwo
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 254
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns the next power of two that is larger than the specified number.\n"
  example: []
  syntax:
    content: public static long NextPowerOfTwo(long n)
    parameters:
    - id: n
      type: System.Int64
      description: The specified number.
    return:
      type: System.Int64
      description: The next power of two.
    content.vb: Public Shared Function NextPowerOfTwo(n As Long) As Long
  overload: Fusee.Math.Core.M.NextPowerOfTwo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.NextPowerOfTwo(System.Int32)
  commentId: M:Fusee.Math.Core.M.NextPowerOfTwo(System.Int32)
  id: NextPowerOfTwo(System.Int32)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: NextPowerOfTwo(Int32)
  nameWithType: M.NextPowerOfTwo(Int32)
  fullName: Fusee.Math.Core.M.NextPowerOfTwo(System.Int32)
  type: Method
  source:
    id: NextPowerOfTwo
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 265
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns the next power of two that is larger than the specified number.\n"
  example: []
  syntax:
    content: public static int NextPowerOfTwo(int n)
    parameters:
    - id: n
      type: System.Int32
      description: The specified number.
    return:
      type: System.Int32
      description: The next power of two.
    content.vb: Public Shared Function NextPowerOfTwo(n As Integer) As Integer
  overload: Fusee.Math.Core.M.NextPowerOfTwo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.NextPowerOfTwo(System.Single)
  commentId: M:Fusee.Math.Core.M.NextPowerOfTwo(System.Single)
  id: NextPowerOfTwo(System.Single)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: NextPowerOfTwo(Single)
  nameWithType: M.NextPowerOfTwo(Single)
  fullName: Fusee.Math.Core.M.NextPowerOfTwo(System.Single)
  type: Method
  source:
    id: NextPowerOfTwo
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 276
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns the next power of two that is larger than the specified number.\n"
  example: []
  syntax:
    content: public static float NextPowerOfTwo(float n)
    parameters:
    - id: n
      type: System.Single
      description: The specified number.
    return:
      type: System.Single
      description: The next power of two.
    content.vb: Public Shared Function NextPowerOfTwo(n As Single) As Single
  overload: Fusee.Math.Core.M.NextPowerOfTwo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.NextPowerOfTwo(System.Double)
  commentId: M:Fusee.Math.Core.M.NextPowerOfTwo(System.Double)
  id: NextPowerOfTwo(System.Double)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: NextPowerOfTwo(Double)
  nameWithType: M.NextPowerOfTwo(Double)
  fullName: Fusee.Math.Core.M.NextPowerOfTwo(System.Double)
  type: Method
  source:
    id: NextPowerOfTwo
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 287
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns the next power of two that is larger than the specified number.\n"
  example: []
  syntax:
    content: public static double NextPowerOfTwo(double n)
    parameters:
    - id: n
      type: System.Double
      description: The specified number.
    return:
      type: System.Double
      description: The next power of two.
    content.vb: Public Shared Function NextPowerOfTwo(n As Double) As Double
  overload: Fusee.Math.Core.M.NextPowerOfTwo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.IsPowerOfTwo(System.Int32)
  commentId: M:Fusee.Math.Core.M.IsPowerOfTwo(System.Int32)
  id: IsPowerOfTwo(System.Int32)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: IsPowerOfTwo(Int32)
  nameWithType: M.IsPowerOfTwo(Int32)
  fullName: Fusee.Math.Core.M.IsPowerOfTwo(System.Int32)
  type: Method
  source:
    id: IsPowerOfTwo
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 298
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDetermines whether the specified value is a power of two.\n"
  example: []
  syntax:
    content: public static bool IsPowerOfTwo(int val)
    parameters:
    - id: val
      type: System.Int32
      description: The value.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsPowerOfTwo(val As Integer) As Boolean
  overload: Fusee.Math.Core.M.IsPowerOfTwo*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.Factorial(System.Int32)
  commentId: M:Fusee.Math.Core.M.Factorial(System.Int32)
  id: Factorial(System.Int32)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Factorial(Int32)
  nameWithType: M.Factorial(Int32)
  fullName: Fusee.Math.Core.M.Factorial(System.Int32)
  type: Method
  source:
    id: Factorial
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 311
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: >
    Calculates the factorial of a given natural number.
  example: []
  syntax:
    content: public static long Factorial(int n)
    parameters:
    - id: n
      type: System.Int32
      description: The number.
    return:
      type: System.Int64
      description: n!
    content.vb: Public Shared Function Factorial(n As Integer) As Long
  overload: Fusee.Math.Core.M.Factorial*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.BinomialCoefficient(System.Int32,System.Int32)
  commentId: M:Fusee.Math.Core.M.BinomialCoefficient(System.Int32,System.Int32)
  id: BinomialCoefficient(System.Int32,System.Int32)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: BinomialCoefficient(Int32, Int32)
  nameWithType: M.BinomialCoefficient(Int32, Int32)
  fullName: Fusee.Math.Core.M.BinomialCoefficient(System.Int32, System.Int32)
  type: Method
  source:
    id: BinomialCoefficient
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 331
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCalculates the binomial coefficient <code data-dev-comment-type=\"paramref\" class=\"paramref\">n</code> above <code data-dev-comment-type=\"paramref\" class=\"paramref\">k</code>.\n"
  example: []
  syntax:
    content: public static long BinomialCoefficient(int n, int k)
    parameters:
    - id: n
      type: System.Int32
      description: The n.
    - id: k
      type: System.Int32
      description: The k.
    return:
      type: System.Int64
      description: n! / (k! * (n - k)!)
    content.vb: Public Shared Function BinomialCoefficient(n As Integer, k As Integer) As Long
  overload: Fusee.Math.Core.M.BinomialCoefficient*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.InverseSqrtFast(System.Single)
  commentId: M:Fusee.Math.Core.M.InverseSqrtFast(System.Single)
  id: InverseSqrtFast(System.Single)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: InverseSqrtFast(Single)
  nameWithType: M.InverseSqrtFast(Single)
  fullName: Fusee.Math.Core.M.InverseSqrtFast(System.Single)
  type: Method
  source:
    id: InverseSqrtFast
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 351
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns an approximation of the inverse square root of left number.\n"
  remarks: "\nThis is an improved implementation of the the method known as Carmack&apos;s inverse square root\nwhich is found in the Quake III source code. This implementation comes from\nhttp://www.codemaestro.com/reviews/review00000105.html. For the history of this method, see\nhttp://www.beyond3d.com/content/articles/8/\n"
  example: []
  syntax:
    content: public static float InverseSqrtFast(float x)
    parameters:
    - id: x
      type: System.Single
      description: A number.
    return:
      type: System.Single
      description: An approximation of the inverse square root of the specified number, with an upper error bound of 0.001
    content.vb: Public Shared Function InverseSqrtFast(x As Single) As Single
  overload: Fusee.Math.Core.M.InverseSqrtFast*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.InverseSqrtFast(System.Double)
  commentId: M:Fusee.Math.Core.M.InverseSqrtFast(System.Double)
  id: InverseSqrtFast(System.Double)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: InverseSqrtFast(Double)
  nameWithType: M.InverseSqrtFast(Double)
  fullName: Fusee.Math.Core.M.InverseSqrtFast(System.Double)
  type: Method
  source:
    id: InverseSqrtFast
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 378
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns an approximation of the inverse square root of left number.\n"
  remarks: "\nThis is an improved implementation of the the method known as Carmack&apos;s inverse square root\nwhich is found in the Quake III source code. This implementation comes from\nhttp://www.codemaestro.com/reviews/review00000105.html. For the history of this method, see\nhttp://www.beyond3d.com/content/articles/8/\n"
  example: []
  syntax:
    content: public static double InverseSqrtFast(double x)
    parameters:
    - id: x
      type: System.Double
      description: A number.
    return:
      type: System.Double
      description: An approximation of the inverse square root of the specified number, with an upper error bound of 0.001
    content.vb: Public Shared Function InverseSqrtFast(x As Double) As Double
  overload: Fusee.Math.Core.M.InverseSqrtFast*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.DegreesToRadians(System.Single)
  commentId: M:Fusee.Math.Core.M.DegreesToRadians(System.Single)
  id: DegreesToRadians(System.Single)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: DegreesToRadians(Single)
  nameWithType: M.DegreesToRadians(Single)
  fullName: Fusee.Math.Core.M.DegreesToRadians(System.Single)
  type: Method
  source:
    id: DegreesToRadians
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 404
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConvert degrees to radians\n"
  example: []
  syntax:
    content: public static float DegreesToRadians(float degrees)
    parameters:
    - id: degrees
      type: System.Single
      description: An angle in degrees
    return:
      type: System.Single
      description: The angle expressed in radians
    content.vb: Public Shared Function DegreesToRadians(degrees As Single) As Single
  overload: Fusee.Math.Core.M.DegreesToRadians*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.RadiansToDegrees(System.Single)
  commentId: M:Fusee.Math.Core.M.RadiansToDegrees(System.Single)
  id: RadiansToDegrees(System.Single)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: RadiansToDegrees(Single)
  nameWithType: M.RadiansToDegrees(Single)
  fullName: Fusee.Math.Core.M.RadiansToDegrees(System.Single)
  type: Method
  source:
    id: RadiansToDegrees
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 415
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConvert radians to degrees\n"
  example: []
  syntax:
    content: public static float RadiansToDegrees(float radians)
    parameters:
    - id: radians
      type: System.Single
      description: An angle in radians
    return:
      type: System.Single
      description: The angle expressed in degrees
    content.vb: Public Shared Function RadiansToDegrees(radians As Single) As Single
  overload: Fusee.Math.Core.M.RadiansToDegrees*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.DegreesToRadiansD(System.Double)
  commentId: M:Fusee.Math.Core.M.DegreesToRadiansD(System.Double)
  id: DegreesToRadiansD(System.Double)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: DegreesToRadiansD(Double)
  nameWithType: M.DegreesToRadiansD(Double)
  fullName: Fusee.Math.Core.M.DegreesToRadiansD(System.Double)
  type: Method
  source:
    id: DegreesToRadiansD
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 426
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConvert degrees to radians\n"
  example: []
  syntax:
    content: public static double DegreesToRadiansD(double degrees)
    parameters:
    - id: degrees
      type: System.Double
      description: An angle in degrees
    return:
      type: System.Double
      description: The angle expressed in radians
    content.vb: Public Shared Function DegreesToRadiansD(degrees As Double) As Double
  overload: Fusee.Math.Core.M.DegreesToRadiansD*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.RadiansToDegreesD(System.Double)
  commentId: M:Fusee.Math.Core.M.RadiansToDegreesD(System.Double)
  id: RadiansToDegreesD(System.Double)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: RadiansToDegreesD(Double)
  nameWithType: M.RadiansToDegreesD(Double)
  fullName: Fusee.Math.Core.M.RadiansToDegreesD(System.Double)
  type: Method
  source:
    id: RadiansToDegreesD
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 437
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConvert radians to degrees\n"
  example: []
  syntax:
    content: public static double RadiansToDegreesD(double radians)
    parameters:
    - id: radians
      type: System.Double
      description: An angle in radians
    return:
      type: System.Double
      description: The angle expressed in degrees
    content.vb: Public Shared Function RadiansToDegreesD(radians As Double) As Double
  overload: Fusee.Math.Core.M.RadiansToDegreesD*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.CalculateCentroid(System.Collections.Generic.IEnumerable{Fusee.Math.Core.float3})
  commentId: M:Fusee.Math.Core.M.CalculateCentroid(System.Collections.Generic.IEnumerable{Fusee.Math.Core.float3})
  id: CalculateCentroid(System.Collections.Generic.IEnumerable{Fusee.Math.Core.float3})
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: CalculateCentroid(IEnumerable<float3>)
  nameWithType: M.CalculateCentroid(IEnumerable<float3>)
  fullName: Fusee.Math.Core.M.CalculateCentroid(System.Collections.Generic.IEnumerable<Fusee.Math.Core.float3>)
  type: Method
  source:
    id: CalculateCentroid
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 452
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCalculates the centroid point (mean) from given vertices in single precision.\n"
  example: []
  syntax:
    content: public static float3 CalculateCentroid(IEnumerable<float3> vertices)
    parameters:
    - id: vertices
      type: System.Collections.Generic.IEnumerable{Fusee.Math.Core.float3}
      description: ''
    return:
      type: Fusee.Math.Core.float3
      description: ''
    content.vb: Public Shared Function CalculateCentroid(vertices As IEnumerable(Of float3)) As float3
  overload: Fusee.Math.Core.M.CalculateCentroid*
  nameWithType.vb: M.CalculateCentroid(IEnumerable(Of float3))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Fusee.Math.Core.M.CalculateCentroid(System.Collections.Generic.IEnumerable(Of Fusee.Math.Core.float3))
  name.vb: CalculateCentroid(IEnumerable(Of float3))
- uid: Fusee.Math.Core.M.CalculateCentroid(System.Collections.Generic.IEnumerable{Fusee.Math.Core.double3})
  commentId: M:Fusee.Math.Core.M.CalculateCentroid(System.Collections.Generic.IEnumerable{Fusee.Math.Core.double3})
  id: CalculateCentroid(System.Collections.Generic.IEnumerable{Fusee.Math.Core.double3})
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: CalculateCentroid(IEnumerable<double3>)
  nameWithType: M.CalculateCentroid(IEnumerable<double3>)
  fullName: Fusee.Math.Core.M.CalculateCentroid(System.Collections.Generic.IEnumerable<Fusee.Math.Core.double3>)
  type: Method
  source:
    id: CalculateCentroid
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 467
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCalculates the centroid point (mean) from given vertices in double precision.\n"
  example: []
  syntax:
    content: public static double3 CalculateCentroid(IEnumerable<double3> vertices)
    parameters:
    - id: vertices
      type: System.Collections.Generic.IEnumerable{Fusee.Math.Core.double3}
      description: ''
    return:
      type: Fusee.Math.Core.double3
      description: ''
    content.vb: Public Shared Function CalculateCentroid(vertices As IEnumerable(Of double3)) As double3
  overload: Fusee.Math.Core.M.CalculateCentroid*
  nameWithType.vb: M.CalculateCentroid(IEnumerable(Of double3))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Fusee.Math.Core.M.CalculateCentroid(System.Collections.Generic.IEnumerable(Of Fusee.Math.Core.double3))
  name.vb: CalculateCentroid(IEnumerable(Of double3))
- uid: Fusee.Math.Core.M.CreateCovarianceMatrix(Fusee.Math.Core.float3,System.Collections.Generic.IEnumerable{Fusee.Math.Core.float3})
  commentId: M:Fusee.Math.Core.M.CreateCovarianceMatrix(Fusee.Math.Core.float3,System.Collections.Generic.IEnumerable{Fusee.Math.Core.float3})
  id: CreateCovarianceMatrix(Fusee.Math.Core.float3,System.Collections.Generic.IEnumerable{Fusee.Math.Core.float3})
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: CreateCovarianceMatrix(float3, IEnumerable<float3>)
  nameWithType: M.CreateCovarianceMatrix(float3, IEnumerable<float3>)
  fullName: Fusee.Math.Core.M.CreateCovarianceMatrix(Fusee.Math.Core.float3, System.Collections.Generic.IEnumerable<Fusee.Math.Core.float3>)
  type: Method
  source:
    id: CreateCovarianceMatrix
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 487
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGenerates a covariance matrix from given centroid and vertices in single precision.\n"
  example: []
  syntax:
    content: public static float4x4 CreateCovarianceMatrix(float3 centroid, IEnumerable<float3> vertices)
    parameters:
    - id: centroid
      type: Fusee.Math.Core.float3
      description: The centroid of the current mesh or point cloud.
    - id: vertices
      type: System.Collections.Generic.IEnumerable{Fusee.Math.Core.float3}
      description: The vertex data.
    return:
      type: Fusee.Math.Core.float4x4
      description: ''
    content.vb: Public Shared Function CreateCovarianceMatrix(centroid As float3, vertices As IEnumerable(Of float3)) As float4x4
  overload: Fusee.Math.Core.M.CreateCovarianceMatrix*
  nameWithType.vb: M.CreateCovarianceMatrix(float3, IEnumerable(Of float3))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Fusee.Math.Core.M.CreateCovarianceMatrix(Fusee.Math.Core.float3, System.Collections.Generic.IEnumerable(Of Fusee.Math.Core.float3))
  name.vb: CreateCovarianceMatrix(float3, IEnumerable(Of float3))
- uid: Fusee.Math.Core.M.CreateCovarianceMatrix(Fusee.Math.Core.double3,System.Collections.Generic.IEnumerable{Fusee.Math.Core.double3})
  commentId: M:Fusee.Math.Core.M.CreateCovarianceMatrix(Fusee.Math.Core.double3,System.Collections.Generic.IEnumerable{Fusee.Math.Core.double3})
  id: CreateCovarianceMatrix(Fusee.Math.Core.double3,System.Collections.Generic.IEnumerable{Fusee.Math.Core.double3})
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: CreateCovarianceMatrix(double3, IEnumerable<double3>)
  nameWithType: M.CreateCovarianceMatrix(double3, IEnumerable<double3>)
  fullName: Fusee.Math.Core.M.CreateCovarianceMatrix(Fusee.Math.Core.double3, System.Collections.Generic.IEnumerable<Fusee.Math.Core.double3>)
  type: Method
  source:
    id: CreateCovarianceMatrix
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 517
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGenerates a covariance matrix from given centroid and vertices in double precision.\n"
  example: []
  syntax:
    content: public static double4x4 CreateCovarianceMatrix(double3 centroid, IEnumerable<double3> vertices)
    parameters:
    - id: centroid
      type: Fusee.Math.Core.double3
      description: The centroid of the current mesh or point cloud.
    - id: vertices
      type: System.Collections.Generic.IEnumerable{Fusee.Math.Core.double3}
      description: The vertex data.
    return:
      type: Fusee.Math.Core.double4x4
      description: ''
    content.vb: Public Shared Function CreateCovarianceMatrix(centroid As double3, vertices As IEnumerable(Of double3)) As double4x4
  overload: Fusee.Math.Core.M.CreateCovarianceMatrix*
  nameWithType.vb: M.CreateCovarianceMatrix(double3, IEnumerable(Of double3))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Fusee.Math.Core.M.CreateCovarianceMatrix(Fusee.Math.Core.double3, System.Collections.Generic.IEnumerable(Of Fusee.Math.Core.double3))
  name.vb: CreateCovarianceMatrix(double3, IEnumerable(Of double3))
- uid: Fusee.Math.Core.M.EigenFromCovarianceMat(Fusee.Math.Core.float4x4)
  commentId: M:Fusee.Math.Core.M.EigenFromCovarianceMat(Fusee.Math.Core.float4x4)
  id: EigenFromCovarianceMat(Fusee.Math.Core.float4x4)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: EigenFromCovarianceMat(float4x4)
  nameWithType: M.EigenFromCovarianceMat(float4x4)
  fullName: Fusee.Math.Core.M.EigenFromCovarianceMat(Fusee.Math.Core.float4x4)
  type: Method
  source:
    id: EigenFromCovarianceMat
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 560
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGenerates an Eigen structure (values and vectors) from a given covariance matrix in single precision.\n"
  example: []
  syntax:
    content: public static EigenF EigenFromCovarianceMat(float4x4 covarianceMatrix)
    parameters:
    - id: covarianceMatrix
      type: Fusee.Math.Core.float4x4
      description: ''
    return:
      type: Fusee.Math.Core.EigenF
      description: ''
    content.vb: Public Shared Function EigenFromCovarianceMat(covarianceMatrix As float4x4) As EigenF
  overload: Fusee.Math.Core.M.EigenFromCovarianceMat*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.EigenFromCovarianceMat(Fusee.Math.Core.double4x4)
  commentId: M:Fusee.Math.Core.M.EigenFromCovarianceMat(Fusee.Math.Core.double4x4)
  id: EigenFromCovarianceMat(Fusee.Math.Core.double4x4)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: EigenFromCovarianceMat(double4x4)
  nameWithType: M.EigenFromCovarianceMat(double4x4)
  fullName: Fusee.Math.Core.M.EigenFromCovarianceMat(Fusee.Math.Core.double4x4)
  type: Method
  source:
    id: EigenFromCovarianceMat
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 570
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGenerates an Eigen structure (values and vectors) from a given covariance matrix in double precision.\n"
  example: []
  syntax:
    content: public static EigenD EigenFromCovarianceMat(double4x4 covarianceMatrix)
    parameters:
    - id: covarianceMatrix
      type: Fusee.Math.Core.double4x4
      description: ''
    return:
      type: Fusee.Math.Core.EigenD
      description: ''
    content.vb: Public Shared Function EigenFromCovarianceMat(covarianceMatrix As double4x4) As EigenD
  overload: Fusee.Math.Core.M.EigenFromCovarianceMat*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.Diagonalizer(Fusee.Math.Core.float4x4)
  commentId: M:Fusee.Math.Core.M.Diagonalizer(Fusee.Math.Core.float4x4)
  id: Diagonalizer(Fusee.Math.Core.float4x4)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Diagonalizer(float4x4)
  nameWithType: M.Diagonalizer(float4x4)
  fullName: Fusee.Math.Core.M.Diagonalizer(Fusee.Math.Core.float4x4)
  type: Method
  source:
    id: Diagonalizer
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 591
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDiagonalizes a given covariance matrix with single precision.\nCurrently only for 3x3 matrices, therefore three values but for the sake of convenience you can (and have to) feed a 4x4 matrix into this method.\n<p>\n    Credits to: https://github.com/melax/sandbox\n    http://melax.github.io/diag.html\n    A must be a symmetric matrix.\n    returns quaternion q such that its corresponding matrix Q\n    can be used to Diagonalize A\n    Diagonal matrix D = transpose(Q) * A * (Q); thus A == Q * D * QT\n    The directions of Q (cols of Q) are the eigenvectors D&apos;s diagonal is the eigenvalues.\n    As per &apos;col&apos; convention if float3x3 Q = qgetmatrix(q); then Q*v = q*v*conj(q).\n</p>\n"
  example: []
  syntax:
    content: public static EigenF Diagonalizer(float4x4 A)
    parameters:
    - id: A
      type: Fusee.Math.Core.float4x4
      description: The covariance matrix.
    return:
      type: Fusee.Math.Core.EigenF
      description: EigenF with 3 Eigen vectors and 3 eigen values.
    content.vb: Public Shared Function Diagonalizer(A As float4x4) As EigenF
  overload: Fusee.Math.Core.M.Diagonalizer*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.Diagonalizer(Fusee.Math.Core.double4x4)
  commentId: M:Fusee.Math.Core.M.Diagonalizer(Fusee.Math.Core.double4x4)
  id: Diagonalizer(Fusee.Math.Core.double4x4)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Diagonalizer(double4x4)
  nameWithType: M.Diagonalizer(double4x4)
  fullName: Fusee.Math.Core.M.Diagonalizer(Fusee.Math.Core.double4x4)
  type: Method
  source:
    id: Diagonalizer
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 623
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDiagonalizes a given covariance matrix with double precision.\n\n<p>\n    Credits to: https://github.com/melax/sandbox\n    http://melax.github.io/diag.html\n    A must be a symmetric matrix.\n    returns quaternion q such that its corresponding matrix Q\n    can be used to Diagonalize A\n    Diagonal matrix D = transpose(Q) * A * (Q); thus A == Q * D * QT\n    The directions of Q (cols of Q) are the eigenvectors D&apos;s diagonal is the eigenvalues.\n    As per &apos;col&apos; convention if float3x3 Q = qgetmatrix(q); then Q*v = q*v*conj(q).\n</p>\n"
  example: []
  syntax:
    content: public static EigenD Diagonalizer(double4x4 A)
    parameters:
    - id: A
      type: Fusee.Math.Core.double4x4
      description: The covariance matrix
    return:
      type: Fusee.Math.Core.EigenD
      description: ''
    content.vb: Public Shared Function Diagonalizer(A As double4x4) As EigenD
  overload: Fusee.Math.Core.M.Diagonalizer*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.MinAngle(System.Single)
  commentId: M:Fusee.Math.Core.M.MinAngle(System.Single)
  id: MinAngle(System.Single)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: MinAngle(Single)
  nameWithType: M.MinAngle(Single)
  fullName: Fusee.Math.Core.M.MinAngle(System.Single)
  type: Method
  source:
    id: MinAngle
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 687
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nWrap-around to keep angle in the interval of (-PI , +PI]\n"
  example: []
  syntax:
    content: public static float MinAngle(float angle)
    parameters:
    - id: angle
      type: System.Single
      description: The angle to minimize.
    return:
      type: System.Single
      description: The angle limited to a maximum magnitude of PI.
    content.vb: Public Shared Function MinAngle(angle As Single) As Single
  overload: Fusee.Math.Core.M.MinAngle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.MinAngle(System.Double)
  commentId: M:Fusee.Math.Core.M.MinAngle(System.Double)
  id: MinAngle(System.Double)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: MinAngle(Double)
  nameWithType: M.MinAngle(Double)
  fullName: Fusee.Math.Core.M.MinAngle(System.Double)
  type: Method
  source:
    id: MinAngle
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 701
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nWrap-around to keep angle in the interval of (-PI , +PI]\n"
  example: []
  syntax:
    content: public static double MinAngle(double angle)
    parameters:
    - id: angle
      type: System.Double
      description: The angle to minimize.
    return:
      type: System.Double
      description: The angle limited to a maximum magnitude of PI.
    content.vb: Public Shared Function MinAngle(angle As Double) As Double
  overload: Fusee.Math.Core.M.MinAngle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.Float4ToABGR(Fusee.Math.Core.float4)
  commentId: M:Fusee.Math.Core.M.Float4ToABGR(Fusee.Math.Core.float4)
  id: Float4ToABGR(Fusee.Math.Core.float4)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Float4ToABGR(float4)
  nameWithType: M.Float4ToABGR(float4)
  fullName: Fusee.Math.Core.M.Float4ToABGR(Fusee.Math.Core.float4)
  type: Method
  source:
    id: Float4ToABGR
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 719
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConverts a float4 to an ABGR value (Int64).\n"
  example: []
  syntax:
    content: public static uint Float4ToABGR(float4 value)
    parameters:
    - id: value
      type: Fusee.Math.Core.float4
      description: The float4 to convert.
    return:
      type: System.UInt32
      description: The ABGR value.
    content.vb: Public Shared Function Float4ToABGR(value As float4) As UInteger
  overload: Fusee.Math.Core.M.Float4ToABGR*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.Swap(System.Double@,System.Double@)
  commentId: M:Fusee.Math.Core.M.Swap(System.Double@,System.Double@)
  id: Swap(System.Double@,System.Double@)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Swap(ref Double, ref Double)
  nameWithType: M.Swap(ref Double, ref Double)
  fullName: Fusee.Math.Core.M.Swap(ref System.Double, ref System.Double)
  type: Method
  source:
    id: Swap
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 738
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nSwaps two double values.\n"
  example: []
  syntax:
    content: public static void Swap(ref double a, ref double b)
    parameters:
    - id: a
      type: System.Double
      description: The first value.
    - id: b
      type: System.Double
      description: The second value.
    content.vb: Public Shared Sub Swap(ByRef a As Double, ByRef b As Double)
  overload: Fusee.Math.Core.M.Swap*
  nameWithType.vb: M.Swap(ByRef Double, ByRef Double)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Fusee.Math.Core.M.Swap(ByRef System.Double, ByRef System.Double)
  name.vb: Swap(ByRef Double, ByRef Double)
- uid: Fusee.Math.Core.M.Swap(System.Single@,System.Single@)
  commentId: M:Fusee.Math.Core.M.Swap(System.Single@,System.Single@)
  id: Swap(System.Single@,System.Single@)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Swap(ref Single, ref Single)
  nameWithType: M.Swap(ref Single, ref Single)
  fullName: Fusee.Math.Core.M.Swap(ref System.Single, ref System.Single)
  type: Method
  source:
    id: Swap
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 750
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nSwaps two float values.\n"
  example: []
  syntax:
    content: public static void Swap(ref float a, ref float b)
    parameters:
    - id: a
      type: System.Single
      description: The first value.
    - id: b
      type: System.Single
      description: The second value.
    content.vb: Public Shared Sub Swap(ByRef a As Single, ByRef b As Single)
  overload: Fusee.Math.Core.M.Swap*
  nameWithType.vb: M.Swap(ByRef Single, ByRef Single)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Fusee.Math.Core.M.Swap(ByRef System.Single, ByRef System.Single)
  name.vb: Swap(ByRef Single, ByRef Single)
- uid: Fusee.Math.Core.M.Clamp(System.Double,System.Double,System.Double)
  commentId: M:Fusee.Math.Core.M.Clamp(System.Double,System.Double,System.Double)
  id: Clamp(System.Double,System.Double,System.Double)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Clamp(Double, Double, Double)
  nameWithType: M.Clamp(Double, Double, Double)
  fullName: Fusee.Math.Core.M.Clamp(System.Double, System.Double, System.Double)
  type: Method
  source:
    id: Clamp
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 770
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nClamp a value to the given minimum and maximum vectors.\n"
  example: []
  syntax:
    content: public static double Clamp(double val, double min, double max)
    parameters:
    - id: val
      type: System.Double
      description: Input value
    - id: min
      type: System.Double
      description: Minimum value
    - id: max
      type: System.Double
      description: Maximum value
    return:
      type: System.Double
      description: "\nThe clamped value.\n"
    content.vb: Public Shared Function Clamp(val As Double, min As Double, max As Double) As Double
  overload: Fusee.Math.Core.M.Clamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.Clamp(System.Single,System.Single,System.Single)
  commentId: M:Fusee.Math.Core.M.Clamp(System.Single,System.Single,System.Single)
  id: Clamp(System.Single,System.Single,System.Single)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Clamp(Single, Single, Single)
  nameWithType: M.Clamp(Single, Single, Single)
  fullName: Fusee.Math.Core.M.Clamp(System.Single, System.Single, System.Single)
  type: Method
  source:
    id: Clamp
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 784
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nClamp a value to the given minimum and maximum vectors.\n"
  example: []
  syntax:
    content: public static float Clamp(float val, float min, float max)
    parameters:
    - id: val
      type: System.Single
      description: Input value.
    - id: min
      type: System.Single
      description: Minimum value.
    - id: max
      type: System.Single
      description: Maximum value.
    return:
      type: System.Single
      description: "\nThe clamped value.\n"
    content.vb: Public Shared Function Clamp(val As Single, min As Single, max As Single) As Single
  overload: Fusee.Math.Core.M.Clamp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.SmoothStep(System.Single)
  commentId: M:Fusee.Math.Core.M.SmoothStep(System.Single)
  id: SmoothStep(System.Single)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: SmoothStep(Single)
  nameWithType: M.SmoothStep(Single)
  fullName: Fusee.Math.Core.M.SmoothStep(System.Single)
  type: Method
  source:
    id: SmoothStep
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 798
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nSmoothes out the interpolation t when approaching 0.0 and 1.0, using the smoothstep function.\n"
  example: []
  syntax:
    content: public static float SmoothStep(float t)
    parameters:
    - id: t
      type: System.Single
      description: t will be clamped between 0.0 and 1.0.
    return:
      type: System.Single
      description: Returns a value between 0.0 and 1.0, corresponding to t.
    content.vb: Public Shared Function SmoothStep(t As Single) As Single
  overload: Fusee.Math.Core.M.SmoothStep*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.SmootherStep(System.Single)
  commentId: M:Fusee.Math.Core.M.SmootherStep(System.Single)
  id: SmootherStep(System.Single)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: SmootherStep(Single)
  nameWithType: M.SmootherStep(Single)
  fullName: Fusee.Math.Core.M.SmootherStep(System.Single)
  type: Method
  source:
    id: SmootherStep
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 809
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nSmoothes out the interpolation t when approaching 0.0 and 1.0, using the smootherstep function.\n"
  example: []
  syntax:
    content: public static float SmootherStep(float t)
    parameters:
    - id: t
      type: System.Single
      description: t will be clamped between 0.0 and 1.0.
    return:
      type: System.Single
      description: Returns a value between 0.0 and 1.0, corresponding to t.
    content.vb: Public Shared Function SmootherStep(t As Single) As Single
  overload: Fusee.Math.Core.M.SmootherStep*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.SineStep(System.Single)
  commentId: M:Fusee.Math.Core.M.SineStep(System.Single)
  id: SineStep(System.Single)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: SineStep(Single)
  nameWithType: M.SineStep(Single)
  fullName: Fusee.Math.Core.M.SineStep(System.Single)
  type: Method
  source:
    id: SineStep
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 820
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nSmoothes out the interpolation t when approaching 0.0 and 1.0, using the sinestep function.\n"
  example: []
  syntax:
    content: public static float SineStep(float t)
    parameters:
    - id: t
      type: System.Single
      description: t will be clamped between 0.0 and 1.0.
    return:
      type: System.Single
      description: Returns a value between 0.0 and 1.0, corresponding to t.
    content.vb: Public Shared Function SineStep(t As Single) As Single
  overload: Fusee.Math.Core.M.SineStep*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.Lerp(System.Single,System.Single,System.Single)
  commentId: M:Fusee.Math.Core.M.Lerp(System.Single,System.Single,System.Single)
  id: Lerp(System.Single,System.Single,System.Single)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Lerp(Single, Single, Single)
  nameWithType: M.Lerp(Single, Single, Single)
  fullName: Fusee.Math.Core.M.Lerp(System.Single, System.Single, System.Single)
  type: Method
  source:
    id: Lerp
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 835
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns a new float value that is the linear blend of the 2 given floats\n"
  example: []
  syntax:
    content: public static float Lerp(float a, float b, float blend)
    parameters:
    - id: a
      type: System.Single
      description: First input float
    - id: b
      type: System.Single
      description: Second input float
    - id: blend
      type: System.Single
      description: The blend factor. a when blend=0, b when blend=1.
    return:
      type: System.Single
      description: "\na when blend=0, b when blend=1, and a linear combination otherwise\n"
    content.vb: Public Shared Function Lerp(a As Single, b As Single, blend As Single) As Single
  overload: Fusee.Math.Core.M.Lerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.Equals(System.Double,System.Double)
  commentId: M:Fusee.Math.Core.M.Equals(System.Double,System.Double)
  id: Equals(System.Double,System.Double)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Equals(Double, Double)
  nameWithType: M.Equals(Double, Double)
  fullName: Fusee.Math.Core.M.Equals(System.Double, System.Double)
  type: Method
  source:
    id: Equals
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 851
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCompares two double values for equality.\n"
  example: []
  syntax:
    content: public static bool Equals(double a, double b)
    parameters:
    - id: a
      type: System.Double
      description: The first value.
    - id: b
      type: System.Double
      description: The second value.
    return:
      type: System.Boolean
      description: True if the numbers are equal.
    content.vb: Public Shared Function Equals(a As Double, b As Double) As Boolean
  overload: Fusee.Math.Core.M.Equals*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.M.Equals(System.Single,System.Single)
  commentId: M:Fusee.Math.Core.M.Equals(System.Single,System.Single)
  id: Equals(System.Single,System.Single)
  parent: Fusee.Math.Core.M
  langs:
  - csharp
  - vb
  name: Equals(Single, Single)
  nameWithType: M.Equals(Single, Single)
  fullName: Fusee.Math.Core.M.Equals(System.Single, System.Single)
  type: Method
  source:
    id: Equals
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\M.cs
    startLine: 862
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCompares two float values for equality.\n"
  example: []
  syntax:
    content: public static bool Equals(float a, float b)
    parameters:
    - id: a
      type: System.Single
      description: The first value.
    - id: b
      type: System.Single
      description: The second value.
    return:
      type: System.Boolean
      description: True if the numbers are equal.
    content.vb: Public Shared Function Equals(a As Single, b As Single) As Boolean
  overload: Fusee.Math.Core.M.Equals*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Fusee.Math.Core
  commentId: N:Fusee.Math.Core
  name: Fusee.Math.Core
  nameWithType: Fusee.Math.Core
  fullName: Fusee.Math.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Fusee.Math.Core.M.Min*
  commentId: Overload:Fusee.Math.Core.M.Min
  name: Min
  nameWithType: M.Min
  fullName: Fusee.Math.Core.M.Min
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Fusee.Math.Core.M.Max*
  commentId: Overload:Fusee.Math.Core.M.Max
  name: Max
  nameWithType: M.Max
  fullName: Fusee.Math.Core.M.Max
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  nameWithType: UInt16
  fullName: System.UInt16
- uid: Fusee.Math.Core.M.Sin*
  commentId: Overload:Fusee.Math.Core.M.Sin
  name: Sin
  nameWithType: M.Sin
  fullName: Fusee.Math.Core.M.Sin
- uid: Fusee.Math.Core.M.Cos*
  commentId: Overload:Fusee.Math.Core.M.Cos
  name: Cos
  nameWithType: M.Cos
  fullName: Fusee.Math.Core.M.Cos
- uid: Fusee.Math.Core.M.NextPowerOfTwo*
  commentId: Overload:Fusee.Math.Core.M.NextPowerOfTwo
  name: NextPowerOfTwo
  nameWithType: M.NextPowerOfTwo
  fullName: Fusee.Math.Core.M.NextPowerOfTwo
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Fusee.Math.Core.M.IsPowerOfTwo*
  commentId: Overload:Fusee.Math.Core.M.IsPowerOfTwo
  name: IsPowerOfTwo
  nameWithType: M.IsPowerOfTwo
  fullName: Fusee.Math.Core.M.IsPowerOfTwo
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Fusee.Math.Core.M.Factorial*
  commentId: Overload:Fusee.Math.Core.M.Factorial
  name: Factorial
  nameWithType: M.Factorial
  fullName: Fusee.Math.Core.M.Factorial
- uid: Fusee.Math.Core.M.BinomialCoefficient*
  commentId: Overload:Fusee.Math.Core.M.BinomialCoefficient
  name: BinomialCoefficient
  nameWithType: M.BinomialCoefficient
  fullName: Fusee.Math.Core.M.BinomialCoefficient
- uid: Fusee.Math.Core.M.InverseSqrtFast*
  commentId: Overload:Fusee.Math.Core.M.InverseSqrtFast
  name: InverseSqrtFast
  nameWithType: M.InverseSqrtFast
  fullName: Fusee.Math.Core.M.InverseSqrtFast
- uid: Fusee.Math.Core.M.DegreesToRadians*
  commentId: Overload:Fusee.Math.Core.M.DegreesToRadians
  name: DegreesToRadians
  nameWithType: M.DegreesToRadians
  fullName: Fusee.Math.Core.M.DegreesToRadians
- uid: Fusee.Math.Core.M.RadiansToDegrees*
  commentId: Overload:Fusee.Math.Core.M.RadiansToDegrees
  name: RadiansToDegrees
  nameWithType: M.RadiansToDegrees
  fullName: Fusee.Math.Core.M.RadiansToDegrees
- uid: Fusee.Math.Core.M.DegreesToRadiansD*
  commentId: Overload:Fusee.Math.Core.M.DegreesToRadiansD
  name: DegreesToRadiansD
  nameWithType: M.DegreesToRadiansD
  fullName: Fusee.Math.Core.M.DegreesToRadiansD
- uid: Fusee.Math.Core.M.RadiansToDegreesD*
  commentId: Overload:Fusee.Math.Core.M.RadiansToDegreesD
  name: RadiansToDegreesD
  nameWithType: M.RadiansToDegreesD
  fullName: Fusee.Math.Core.M.RadiansToDegreesD
- uid: Fusee.Math.Core.M.CalculateCentroid*
  commentId: Overload:Fusee.Math.Core.M.CalculateCentroid
  name: CalculateCentroid
  nameWithType: M.CalculateCentroid
  fullName: Fusee.Math.Core.M.CalculateCentroid
- uid: System.Collections.Generic.IEnumerable{Fusee.Math.Core.float3}
  commentId: T:System.Collections.Generic.IEnumerable{Fusee.Math.Core.float3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<float3>
  nameWithType: IEnumerable<float3>
  fullName: System.Collections.Generic.IEnumerable<Fusee.Math.Core.float3>
  nameWithType.vb: IEnumerable(Of float3)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Fusee.Math.Core.float3)
  name.vb: IEnumerable(Of float3)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Fusee.Math.Core.float3
    name: float3
    nameWithType: float3
    fullName: Fusee.Math.Core.float3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Fusee.Math.Core.float3
    name: float3
    nameWithType: float3
    fullName: Fusee.Math.Core.float3
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Math.Core.float3
  commentId: T:Fusee.Math.Core.float3
  parent: Fusee.Math.Core
  name: float3
  nameWithType: float3
  fullName: Fusee.Math.Core.float3
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable{Fusee.Math.Core.double3}
  commentId: T:System.Collections.Generic.IEnumerable{Fusee.Math.Core.double3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<double3>
  nameWithType: IEnumerable<double3>
  fullName: System.Collections.Generic.IEnumerable<Fusee.Math.Core.double3>
  nameWithType.vb: IEnumerable(Of double3)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Fusee.Math.Core.double3)
  name.vb: IEnumerable(Of double3)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Fusee.Math.Core.double3
    name: double3
    nameWithType: double3
    fullName: Fusee.Math.Core.double3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Fusee.Math.Core.double3
    name: double3
    nameWithType: double3
    fullName: Fusee.Math.Core.double3
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Math.Core.double3
  commentId: T:Fusee.Math.Core.double3
  parent: Fusee.Math.Core
  name: double3
  nameWithType: double3
  fullName: Fusee.Math.Core.double3
- uid: Fusee.Math.Core.M.CreateCovarianceMatrix*
  commentId: Overload:Fusee.Math.Core.M.CreateCovarianceMatrix
  name: CreateCovarianceMatrix
  nameWithType: M.CreateCovarianceMatrix
  fullName: Fusee.Math.Core.M.CreateCovarianceMatrix
- uid: Fusee.Math.Core.float4x4
  commentId: T:Fusee.Math.Core.float4x4
  parent: Fusee.Math.Core
  name: float4x4
  nameWithType: float4x4
  fullName: Fusee.Math.Core.float4x4
- uid: Fusee.Math.Core.double4x4
  commentId: T:Fusee.Math.Core.double4x4
  parent: Fusee.Math.Core
  name: double4x4
  nameWithType: double4x4
  fullName: Fusee.Math.Core.double4x4
- uid: Fusee.Math.Core.M.EigenFromCovarianceMat*
  commentId: Overload:Fusee.Math.Core.M.EigenFromCovarianceMat
  name: EigenFromCovarianceMat
  nameWithType: M.EigenFromCovarianceMat
  fullName: Fusee.Math.Core.M.EigenFromCovarianceMat
- uid: Fusee.Math.Core.EigenF
  commentId: T:Fusee.Math.Core.EigenF
  parent: Fusee.Math.Core
  name: EigenF
  nameWithType: EigenF
  fullName: Fusee.Math.Core.EigenF
- uid: Fusee.Math.Core.EigenD
  commentId: T:Fusee.Math.Core.EigenD
  parent: Fusee.Math.Core
  name: EigenD
  nameWithType: EigenD
  fullName: Fusee.Math.Core.EigenD
- uid: Fusee.Math.Core.M.Diagonalizer*
  commentId: Overload:Fusee.Math.Core.M.Diagonalizer
  name: Diagonalizer
  nameWithType: M.Diagonalizer
  fullName: Fusee.Math.Core.M.Diagonalizer
- uid: Fusee.Math.Core.M.MinAngle*
  commentId: Overload:Fusee.Math.Core.M.MinAngle
  name: MinAngle
  nameWithType: M.MinAngle
  fullName: Fusee.Math.Core.M.MinAngle
- uid: Fusee.Math.Core.M.Float4ToABGR*
  commentId: Overload:Fusee.Math.Core.M.Float4ToABGR
  name: Float4ToABGR
  nameWithType: M.Float4ToABGR
  fullName: Fusee.Math.Core.M.Float4ToABGR
- uid: Fusee.Math.Core.float4
  commentId: T:Fusee.Math.Core.float4
  parent: Fusee.Math.Core
  name: float4
  nameWithType: float4
  fullName: Fusee.Math.Core.float4
- uid: Fusee.Math.Core.M.Swap*
  commentId: Overload:Fusee.Math.Core.M.Swap
  name: Swap
  nameWithType: M.Swap
  fullName: Fusee.Math.Core.M.Swap
- uid: Fusee.Math.Core.M.Clamp*
  commentId: Overload:Fusee.Math.Core.M.Clamp
  name: Clamp
  nameWithType: M.Clamp
  fullName: Fusee.Math.Core.M.Clamp
- uid: Fusee.Math.Core.M.SmoothStep*
  commentId: Overload:Fusee.Math.Core.M.SmoothStep
  name: SmoothStep
  nameWithType: M.SmoothStep
  fullName: Fusee.Math.Core.M.SmoothStep
- uid: Fusee.Math.Core.M.SmootherStep*
  commentId: Overload:Fusee.Math.Core.M.SmootherStep
  name: SmootherStep
  nameWithType: M.SmootherStep
  fullName: Fusee.Math.Core.M.SmootherStep
- uid: Fusee.Math.Core.M.SineStep*
  commentId: Overload:Fusee.Math.Core.M.SineStep
  name: SineStep
  nameWithType: M.SineStep
  fullName: Fusee.Math.Core.M.SineStep
- uid: Fusee.Math.Core.M.Lerp*
  commentId: Overload:Fusee.Math.Core.M.Lerp
  name: Lerp
  nameWithType: M.Lerp
  fullName: Fusee.Math.Core.M.Lerp
- uid: Fusee.Math.Core.M.Equals*
  commentId: Overload:Fusee.Math.Core.M.Equals
  name: Equals
  nameWithType: M.Equals
  fullName: Fusee.Math.Core.M.Equals

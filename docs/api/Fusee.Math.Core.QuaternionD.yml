### YamlMime:ManagedReference
items:
- uid: Fusee.Math.Core.QuaternionD
  commentId: T:Fusee.Math.Core.QuaternionD
  id: QuaternionD
  parent: Fusee.Math.Core
  children:
  - Fusee.Math.Core.QuaternionD.#ctor(Fusee.Math.Core.double3,System.Double)
  - Fusee.Math.Core.QuaternionD.#ctor(System.Double,System.Double,System.Double,System.Double)
  - Fusee.Math.Core.QuaternionD.Add(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  - Fusee.Math.Core.QuaternionD.Conjugate
  - Fusee.Math.Core.QuaternionD.Conjugate(Fusee.Math.Core.QuaternionD)
  - Fusee.Math.Core.QuaternionD.Equals(Fusee.Math.Core.QuaternionD)
  - Fusee.Math.Core.QuaternionD.Equals(System.Object)
  - Fusee.Math.Core.QuaternionD.EulerToQuaternion(Fusee.Math.Core.double3,System.Boolean)
  - Fusee.Math.Core.QuaternionD.FromAxisAngle(Fusee.Math.Core.double3,System.Double)
  - Fusee.Math.Core.QuaternionD.GetHashCode
  - Fusee.Math.Core.QuaternionD.Identity
  - Fusee.Math.Core.QuaternionD.Invert
  - Fusee.Math.Core.QuaternionD.Invert(Fusee.Math.Core.QuaternionD)
  - Fusee.Math.Core.QuaternionD.Item(System.Int32)
  - Fusee.Math.Core.QuaternionD.Length
  - Fusee.Math.Core.QuaternionD.LengthSquared
  - Fusee.Math.Core.QuaternionD.Multiply(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  - Fusee.Math.Core.QuaternionD.Multiply(Fusee.Math.Core.QuaternionD,System.Double)
  - Fusee.Math.Core.QuaternionD.Normalize
  - Fusee.Math.Core.QuaternionD.Normalize(Fusee.Math.Core.QuaternionD)
  - Fusee.Math.Core.QuaternionD.op_Addition(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  - Fusee.Math.Core.QuaternionD.op_Equality(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  - Fusee.Math.Core.QuaternionD.op_Inequality(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  - Fusee.Math.Core.QuaternionD.op_Multiply(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  - Fusee.Math.Core.QuaternionD.op_Multiply(Fusee.Math.Core.QuaternionD,System.Double)
  - Fusee.Math.Core.QuaternionD.op_Multiply(System.Double,Fusee.Math.Core.QuaternionD)
  - Fusee.Math.Core.QuaternionD.op_Subtraction(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  - Fusee.Math.Core.QuaternionD.Slerp(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD,System.Double)
  - Fusee.Math.Core.QuaternionD.Sub(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  - Fusee.Math.Core.QuaternionD.ToAxisAngle
  - Fusee.Math.Core.QuaternionD.ToAxisAngle(Fusee.Math.Core.QuaternionD)
  - Fusee.Math.Core.QuaternionD.ToRotMat
  - Fusee.Math.Core.QuaternionD.ToRotMat(Fusee.Math.Core.QuaternionD)
  - Fusee.Math.Core.QuaternionD.ToString
  - Fusee.Math.Core.QuaternionD.ToString(System.IFormatProvider)
  - Fusee.Math.Core.QuaternionD.Transform(Fusee.Math.Core.double4,Fusee.Math.Core.QuaternionD)
  - Fusee.Math.Core.QuaternionD.w
  - Fusee.Math.Core.QuaternionD.x
  - Fusee.Math.Core.QuaternionD.xyz
  - Fusee.Math.Core.QuaternionD.y
  - Fusee.Math.Core.QuaternionD.z
  langs:
  - csharp
  - vb
  name: QuaternionD
  nameWithType: QuaternionD
  fullName: Fusee.Math.Core.QuaternionD
  type: Struct
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: QuaternionD
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 9
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nRepresents a QuaternionD (double precision).\n"
  example: []
  syntax:
    content: 'public struct QuaternionD : IEquatable<QuaternionD>'
    content.vb: >-
      Public Structure QuaternionD
          Implements IEquatable(Of QuaternionD)
  implements:
  - System.IEquatable{Fusee.Math.Core.QuaternionD}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Fusee.Math.Core.QuaternionD.#ctor(Fusee.Math.Core.double3,System.Double)
  commentId: M:Fusee.Math.Core.QuaternionD.#ctor(Fusee.Math.Core.double3,System.Double)
  id: '#ctor(Fusee.Math.Core.double3,System.Double)'
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: QuaternionD(double3, Double)
  nameWithType: QuaternionD.QuaternionD(double3, Double)
  fullName: Fusee.Math.Core.QuaternionD.QuaternionD(Fusee.Math.Core.double3, System.Double)
  type: Constructor
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: .ctor
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 26
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConstruct a new QuaternionD from vector and w components\n"
  example: []
  syntax:
    content: public QuaternionD(double3 v, double w)
    parameters:
    - id: v
      type: Fusee.Math.Core.double3
      description: The vector part
    - id: w
      type: System.Double
      description: The w part
    content.vb: Public Sub New(v As double3, w As Double)
  overload: Fusee.Math.Core.QuaternionD.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.QuaternionD.#ctor(System.Double,System.Double,System.Double,System.Double)
  commentId: M:Fusee.Math.Core.QuaternionD.#ctor(System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double)'
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: QuaternionD(Double, Double, Double, Double)
  nameWithType: QuaternionD.QuaternionD(Double, Double, Double, Double)
  fullName: Fusee.Math.Core.QuaternionD.QuaternionD(System.Double, System.Double, System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: .ctor
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 39
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConstruct a new QuaternionD\n"
  example: []
  syntax:
    content: public QuaternionD(double xx, double yy, double zz, double w)
    parameters:
    - id: xx
      type: System.Double
      description: The xx component
    - id: yy
      type: System.Double
      description: The yy component
    - id: zz
      type: System.Double
      description: The zz component
    - id: w
      type: System.Double
      description: The w component
    content.vb: Public Sub New(xx As Double, yy As Double, zz As Double, w As Double)
  overload: Fusee.Math.Core.QuaternionD.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.QuaternionD.xyz
  commentId: P:Fusee.Math.Core.QuaternionD.xyz
  id: xyz
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: xyz
  nameWithType: QuaternionD.xyz
  fullName: Fusee.Math.Core.QuaternionD.xyz
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: xyz
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 53
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets and sets an Fusee.Math.double3 with the x, y and z components of this instance.\n"
  example: []
  syntax:
    content: public double3 xyz { get; set; }
    parameters: []
    return:
      type: Fusee.Math.Core.double3
    content.vb: Public Property xyz As double3
  overload: Fusee.Math.Core.QuaternionD.xyz*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.QuaternionD.x
  commentId: P:Fusee.Math.Core.QuaternionD.x
  id: x
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: x
  nameWithType: QuaternionD.x
  fullName: Fusee.Math.Core.QuaternionD.x
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: x
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 62
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets and sets the x component of this instance.\n"
  example: []
  syntax:
    content: public double x { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property x As Double
  overload: Fusee.Math.Core.QuaternionD.x*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.QuaternionD.y
  commentId: P:Fusee.Math.Core.QuaternionD.y
  id: y
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: y
  nameWithType: QuaternionD.y
  fullName: Fusee.Math.Core.QuaternionD.y
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: y
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 71
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets and sets the y component of this instance.\n"
  example: []
  syntax:
    content: public double y { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property y As Double
  overload: Fusee.Math.Core.QuaternionD.y*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.QuaternionD.z
  commentId: P:Fusee.Math.Core.QuaternionD.z
  id: z
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: z
  nameWithType: QuaternionD.z
  fullName: Fusee.Math.Core.QuaternionD.z
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: z
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 80
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets and sets the z component of this instance.\n"
  example: []
  syntax:
    content: public double z { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property z As Double
  overload: Fusee.Math.Core.QuaternionD.z*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.QuaternionD.w
  commentId: P:Fusee.Math.Core.QuaternionD.w
  id: w
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: w
  nameWithType: QuaternionD.w
  fullName: Fusee.Math.Core.QuaternionD.w
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: w
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 89
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets and sets the w component of this instance.\n"
  example: []
  syntax:
    content: public double w { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property w As Double
  overload: Fusee.Math.Core.QuaternionD.w*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.QuaternionD.Item(System.Int32)
  commentId: P:Fusee.Math.Core.QuaternionD.Item(System.Int32)
  id: Item(System.Int32)
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: Item[Int32]
  nameWithType: QuaternionD.Item[Int32]
  fullName: Fusee.Math.Core.QuaternionD.Item[System.Int32]
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: this[]
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 106
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nSets/Gets value from given idx\n"
  example: []
  syntax:
    content: public double this[int idx] { get; set; }
    parameters:
    - id: idx
      type: System.Int32
      description: ''
    return:
      type: System.Double
      description: ''
    content.vb: Public Property Item(idx As Integer) As Double
  overload: Fusee.Math.Core.QuaternionD.Item*
  nameWithType.vb: QuaternionD.Item(Int32)
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Fusee.Math.Core.QuaternionD.Item(System.Int32)
  name.vb: Item(Int32)
- uid: Fusee.Math.Core.QuaternionD.ToAxisAngle
  commentId: M:Fusee.Math.Core.QuaternionD.ToAxisAngle
  id: ToAxisAngle
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: ToAxisAngle()
  nameWithType: QuaternionD.ToAxisAngle()
  fullName: Fusee.Math.Core.QuaternionD.ToAxisAngle()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: ToAxisAngle
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 162
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConvert this instance to an axis-angle representation.\n"
  example: []
  syntax:
    content: public double4 ToAxisAngle()
    return:
      type: Fusee.Math.Core.double4
      description: A double4 that is the axis-angle representation of this QuaternionD.
    content.vb: Public Function ToAxisAngle As double4
  overload: Fusee.Math.Core.QuaternionD.ToAxisAngle*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.QuaternionD.ToRotMat
  commentId: M:Fusee.Math.Core.QuaternionD.ToRotMat
  id: ToRotMat
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: ToRotMat()
  nameWithType: QuaternionD.ToRotMat()
  fullName: Fusee.Math.Core.QuaternionD.ToRotMat()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: ToRotMat
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 170
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConverts the quaternion into a rotation matrix.\n"
  example: []
  syntax:
    content: public double4x4 ToRotMat()
    return:
      type: Fusee.Math.Core.double4x4
    content.vb: Public Function ToRotMat As double4x4
  overload: Fusee.Math.Core.QuaternionD.ToRotMat*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.QuaternionD.Length
  commentId: P:Fusee.Math.Core.QuaternionD.Length
  id: Length
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: Length
  nameWithType: QuaternionD.Length
  fullName: Fusee.Math.Core.QuaternionD.Length
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Length
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 183
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets the length (magnitude) of the QuaternionD.\n"
  example: []
  syntax:
    content: public double Length { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property Length As Double
  overload: Fusee.Math.Core.QuaternionD.Length*
  seealso:
  - linkId: Fusee.Math.Core.QuaternionD.LengthSquared
    commentId: P:Fusee.Math.Core.QuaternionD.LengthSquared
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Math.Core.QuaternionD.LengthSquared
  commentId: P:Fusee.Math.Core.QuaternionD.LengthSquared
  id: LengthSquared
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: LengthSquared
  nameWithType: QuaternionD.LengthSquared
  fullName: Fusee.Math.Core.QuaternionD.LengthSquared
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: LengthSquared
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 195
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGets the square of the QuaternionD length (magnitude).\n"
  example: []
  syntax:
    content: public double LengthSquared { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public ReadOnly Property LengthSquared As Double
  overload: Fusee.Math.Core.QuaternionD.LengthSquared*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Math.Core.QuaternionD.Normalize
  commentId: M:Fusee.Math.Core.QuaternionD.Normalize
  id: Normalize
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: Normalize()
  nameWithType: QuaternionD.Normalize()
  fullName: Fusee.Math.Core.QuaternionD.Normalize()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Normalize
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 207
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nScales the QuaternionD to unit length.\n"
  example: []
  syntax:
    content: public QuaternionD Normalize()
    return:
      type: Fusee.Math.Core.QuaternionD
    content.vb: Public Function Normalize As QuaternionD
  overload: Fusee.Math.Core.QuaternionD.Normalize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.QuaternionD.Conjugate
  commentId: M:Fusee.Math.Core.QuaternionD.Conjugate
  id: Conjugate
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: Conjugate()
  nameWithType: QuaternionD.Conjugate()
  fullName: Fusee.Math.Core.QuaternionD.Conjugate()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Conjugate
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 219
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConvert this QuaternionD to its conjugate.\n"
  example: []
  syntax:
    content: public QuaternionD Conjugate()
    return:
      type: Fusee.Math.Core.QuaternionD
    content.vb: Public Function Conjugate As QuaternionD
  overload: Fusee.Math.Core.QuaternionD.Conjugate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.QuaternionD.Invert
  commentId: M:Fusee.Math.Core.QuaternionD.Invert
  id: Invert
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: Invert()
  nameWithType: QuaternionD.Invert()
  fullName: Fusee.Math.Core.QuaternionD.Invert()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Invert
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 232
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConvert this QuaternionD to its inverse.\n"
  example: []
  syntax:
    content: public QuaternionD Invert()
    return:
      type: Fusee.Math.Core.QuaternionD
      description: ''
    content.vb: Public Function Invert As QuaternionD
  overload: Fusee.Math.Core.QuaternionD.Invert*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.QuaternionD.Identity
  commentId: F:Fusee.Math.Core.QuaternionD.Identity
  id: Identity
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: Identity
  nameWithType: QuaternionD.Identity
  fullName: Fusee.Math.Core.QuaternionD.Identity
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Identity
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 248
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDefines the identity QuaternionD.\n"
  example: []
  syntax:
    content: public static QuaternionD Identity
    return:
      type: Fusee.Math.Core.QuaternionD
    content.vb: Public Shared Identity As QuaternionD
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.QuaternionD.Add(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  commentId: M:Fusee.Math.Core.QuaternionD.Add(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  id: Add(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: Add(QuaternionD, QuaternionD)
  nameWithType: QuaternionD.Add(QuaternionD, QuaternionD)
  fullName: Fusee.Math.Core.QuaternionD.Add(Fusee.Math.Core.QuaternionD, Fusee.Math.Core.QuaternionD)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Add
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 260
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nAdd two QuaternionDs\n"
  example: []
  syntax:
    content: public static QuaternionD Add(QuaternionD left, QuaternionD right)
    parameters:
    - id: left
      type: Fusee.Math.Core.QuaternionD
      description: The first operand
    - id: right
      type: Fusee.Math.Core.QuaternionD
      description: The second operand
    return:
      type: Fusee.Math.Core.QuaternionD
      description: The result of the addition
    content.vb: Public Shared Function Add(left As QuaternionD, right As QuaternionD) As QuaternionD
  overload: Fusee.Math.Core.QuaternionD.Add*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.QuaternionD.Sub(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  commentId: M:Fusee.Math.Core.QuaternionD.Sub(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  id: Sub(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: Sub(QuaternionD, QuaternionD)
  nameWithType: QuaternionD.Sub(QuaternionD, QuaternionD)
  fullName: Fusee.Math.Core.QuaternionD.Sub(Fusee.Math.Core.QuaternionD, Fusee.Math.Core.QuaternionD)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Sub
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 277
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nSubtracts two instances.\n"
  example: []
  syntax:
    content: public static QuaternionD Sub(QuaternionD left, QuaternionD right)
    parameters:
    - id: left
      type: Fusee.Math.Core.QuaternionD
      description: The left instance.
    - id: right
      type: Fusee.Math.Core.QuaternionD
      description: The right instance.
    return:
      type: Fusee.Math.Core.QuaternionD
      description: The result of the operation.
    content.vb: Public Shared Function Sub(left As QuaternionD, right As QuaternionD) As QuaternionD
  overload: Fusee.Math.Core.QuaternionD.Sub*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.QuaternionD.Multiply(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  commentId: M:Fusee.Math.Core.QuaternionD.Multiply(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  id: Multiply(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: Multiply(QuaternionD, QuaternionD)
  nameWithType: QuaternionD.Multiply(QuaternionD, QuaternionD)
  fullName: Fusee.Math.Core.QuaternionD.Multiply(Fusee.Math.Core.QuaternionD, Fusee.Math.Core.QuaternionD)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Multiply
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 294
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nMultiplies two instances.\n"
  example: []
  syntax:
    content: public static QuaternionD Multiply(QuaternionD left, QuaternionD right)
    parameters:
    - id: left
      type: Fusee.Math.Core.QuaternionD
      description: The first instance.
    - id: right
      type: Fusee.Math.Core.QuaternionD
      description: The second instance.
    return:
      type: Fusee.Math.Core.QuaternionD
      description: A new instance containing the result of the calculation.
    content.vb: Public Shared Function Multiply(left As QuaternionD, right As QuaternionD) As QuaternionD
  overload: Fusee.Math.Core.QuaternionD.Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.QuaternionD.Multiply(Fusee.Math.Core.QuaternionD,System.Double)
  commentId: M:Fusee.Math.Core.QuaternionD.Multiply(Fusee.Math.Core.QuaternionD,System.Double)
  id: Multiply(Fusee.Math.Core.QuaternionD,System.Double)
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: Multiply(QuaternionD, Double)
  nameWithType: QuaternionD.Multiply(QuaternionD, Double)
  fullName: Fusee.Math.Core.QuaternionD.Multiply(Fusee.Math.Core.QuaternionD, System.Double)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Multiply
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 311
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nMultiplies an instance by a scalar.\n"
  example: []
  syntax:
    content: public static QuaternionD Multiply(QuaternionD quaternionD, double scale)
    parameters:
    - id: quaternionD
      type: Fusee.Math.Core.QuaternionD
      description: The instance.
    - id: scale
      type: System.Double
      description: The scalar.
    return:
      type: Fusee.Math.Core.QuaternionD
      description: A new instance containing the result of the calculation.
    content.vb: Public Shared Function Multiply(quaternionD As QuaternionD, scale As Double) As QuaternionD
  overload: Fusee.Math.Core.QuaternionD.Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.QuaternionD.Conjugate(Fusee.Math.Core.QuaternionD)
  commentId: M:Fusee.Math.Core.QuaternionD.Conjugate(Fusee.Math.Core.QuaternionD)
  id: Conjugate(Fusee.Math.Core.QuaternionD)
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: Conjugate(QuaternionD)
  nameWithType: QuaternionD.Conjugate(QuaternionD)
  fullName: Fusee.Math.Core.QuaternionD.Conjugate(Fusee.Math.Core.QuaternionD)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Conjugate
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 325
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGet the conjugate of the given QuaternionD\n"
  example: []
  syntax:
    content: public static QuaternionD Conjugate(QuaternionD q)
    parameters:
    - id: q
      type: Fusee.Math.Core.QuaternionD
      description: The QuaternionD
    return:
      type: Fusee.Math.Core.QuaternionD
      description: The conjugate of the given QuaternionD
    content.vb: Public Shared Function Conjugate(q As QuaternionD) As QuaternionD
  overload: Fusee.Math.Core.QuaternionD.Conjugate*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.QuaternionD.Invert(Fusee.Math.Core.QuaternionD)
  commentId: M:Fusee.Math.Core.QuaternionD.Invert(Fusee.Math.Core.QuaternionD)
  id: Invert(Fusee.Math.Core.QuaternionD)
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: Invert(QuaternionD)
  nameWithType: QuaternionD.Invert(QuaternionD)
  fullName: Fusee.Math.Core.QuaternionD.Invert(Fusee.Math.Core.QuaternionD)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Invert
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 339
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGet the inverse of the given QuaternionD\n"
  example: []
  syntax:
    content: public static QuaternionD Invert(QuaternionD q)
    parameters:
    - id: q
      type: Fusee.Math.Core.QuaternionD
      description: The QuaternionD to invert
    return:
      type: Fusee.Math.Core.QuaternionD
      description: The inverse of the given QuaternionD
    content.vb: Public Shared Function Invert(q As QuaternionD) As QuaternionD
  overload: Fusee.Math.Core.QuaternionD.Invert*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.QuaternionD.Normalize(Fusee.Math.Core.QuaternionD)
  commentId: M:Fusee.Math.Core.QuaternionD.Normalize(Fusee.Math.Core.QuaternionD)
  id: Normalize(Fusee.Math.Core.QuaternionD)
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: Normalize(QuaternionD)
  nameWithType: QuaternionD.Normalize(QuaternionD)
  fullName: Fusee.Math.Core.QuaternionD.Normalize(Fusee.Math.Core.QuaternionD)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Normalize
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 367
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nScale the given QuaternionD to unit length\n"
  example: []
  syntax:
    content: public static QuaternionD Normalize(QuaternionD q)
    parameters:
    - id: q
      type: Fusee.Math.Core.QuaternionD
      description: The QuaternionD to normalize
    return:
      type: Fusee.Math.Core.QuaternionD
      description: The normalized QuaternionD
    content.vb: Public Shared Function Normalize(q As QuaternionD) As QuaternionD
  overload: Fusee.Math.Core.QuaternionD.Normalize*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.QuaternionD.FromAxisAngle(Fusee.Math.Core.double3,System.Double)
  commentId: M:Fusee.Math.Core.QuaternionD.FromAxisAngle(Fusee.Math.Core.double3,System.Double)
  id: FromAxisAngle(Fusee.Math.Core.double3,System.Double)
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: FromAxisAngle(double3, Double)
  nameWithType: QuaternionD.FromAxisAngle(double3, Double)
  fullName: Fusee.Math.Core.QuaternionD.FromAxisAngle(Fusee.Math.Core.double3, System.Double)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: FromAxisAngle
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 393
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nBuild a QuaternionD from the given axis and angle\n"
  example: []
  syntax:
    content: public static QuaternionD FromAxisAngle(double3 axis, double angle)
    parameters:
    - id: axis
      type: Fusee.Math.Core.double3
      description: The axis to rotate about
    - id: angle
      type: System.Double
      description: The rotation angle in radians
    return:
      type: Fusee.Math.Core.QuaternionD
      description: A QuaternionD that represents the orientation.
    content.vb: Public Shared Function FromAxisAngle(axis As double3, angle As Double) As QuaternionD
  overload: Fusee.Math.Core.QuaternionD.FromAxisAngle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.QuaternionD.ToRotMat(Fusee.Math.Core.QuaternionD)
  commentId: M:Fusee.Math.Core.QuaternionD.ToRotMat(Fusee.Math.Core.QuaternionD)
  id: ToRotMat(Fusee.Math.Core.QuaternionD)
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: ToRotMat(QuaternionD)
  nameWithType: QuaternionD.ToRotMat(QuaternionD)
  fullName: Fusee.Math.Core.QuaternionD.ToRotMat(Fusee.Math.Core.QuaternionD)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: ToRotMat
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 418
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConstructs a rotation matrix from a given quaternion\nThis uses some geometric algebra magic https://en.wikipedia.org/wiki/Geometric_algebra\nFrom: https://sourceforge.net/p/mjbworld/discussion/122133/thread/c59339da/#62ce\n"
  example: []
  syntax:
    content: public static double4x4 ToRotMat(QuaternionD quat)
    parameters:
    - id: quat
      type: Fusee.Math.Core.QuaternionD
      description: Input quaternion
    return:
      type: Fusee.Math.Core.double4x4
      description: ''
    content.vb: Public Shared Function ToRotMat(quat As QuaternionD) As double4x4
  overload: Fusee.Math.Core.QuaternionD.ToRotMat*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.QuaternionD.ToAxisAngle(Fusee.Math.Core.QuaternionD)
  commentId: M:Fusee.Math.Core.QuaternionD.ToAxisAngle(Fusee.Math.Core.QuaternionD)
  id: ToAxisAngle(Fusee.Math.Core.QuaternionD)
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: ToAxisAngle(QuaternionD)
  nameWithType: QuaternionD.ToAxisAngle(QuaternionD)
  fullName: Fusee.Math.Core.QuaternionD.ToAxisAngle(Fusee.Math.Core.QuaternionD)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: ToAxisAngle
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 440
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nOutput an axis-angle representation of the given Quaternion.\n"
  example: []
  syntax:
    content: public static double4 ToAxisAngle(QuaternionD q)
    parameters:
    - id: q
      type: Fusee.Math.Core.QuaternionD
      description: The given Quaternion.
    return:
      type: Fusee.Math.Core.double4
      description: The resulting axis-angle representation.
    content.vb: Public Shared Function ToAxisAngle(q As QuaternionD) As double4
  overload: Fusee.Math.Core.QuaternionD.ToAxisAngle*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.QuaternionD.Slerp(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD,System.Double)
  commentId: M:Fusee.Math.Core.QuaternionD.Slerp(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD,System.Double)
  id: Slerp(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD,System.Double)
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: Slerp(QuaternionD, QuaternionD, Double)
  nameWithType: QuaternionD.Slerp(QuaternionD, QuaternionD, Double)
  fullName: Fusee.Math.Core.QuaternionD.Slerp(Fusee.Math.Core.QuaternionD, Fusee.Math.Core.QuaternionD, System.Double)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Slerp
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 475
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nDo Spherical linear interpolation between two QuaternionDs\n"
  example: []
  syntax:
    content: public static QuaternionD Slerp(QuaternionD q1, QuaternionD q2, double blend)
    parameters:
    - id: q1
      type: Fusee.Math.Core.QuaternionD
      description: The first QuaternionD
    - id: q2
      type: Fusee.Math.Core.QuaternionD
      description: The second QuaternionD
    - id: blend
      type: System.Double
      description: The blend factor
    return:
      type: Fusee.Math.Core.QuaternionD
      description: A smooth blend between the given QuaternionDs
    content.vb: Public Shared Function Slerp(q1 As QuaternionD, q2 As QuaternionD, blend As Double) As QuaternionD
  overload: Fusee.Math.Core.QuaternionD.Slerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.QuaternionD.EulerToQuaternion(Fusee.Math.Core.double3,System.Boolean)
  commentId: M:Fusee.Math.Core.QuaternionD.EulerToQuaternion(Fusee.Math.Core.double3,System.Boolean)
  id: EulerToQuaternion(Fusee.Math.Core.double3,System.Boolean)
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: EulerToQuaternion(double3, Boolean)
  nameWithType: QuaternionD.EulerToQuaternion(double3, Boolean)
  fullName: Fusee.Math.Core.QuaternionD.EulerToQuaternion(Fusee.Math.Core.double3, System.Boolean)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: EulerToQuaternion
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 538
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nConvert Euler angle to Quaternion rotation.\n"
  remarks: >
    The euler angle is assumed to be in common aviation order where the y axis is up. Thus x is pitch/attitude,

    y is yaw/heading, and z is roll/bank. In practice x is never out of [-PI/2, PI/2] while y and z may well be in

    the range of [-PI, PI].


    See also <a href="http://www.euclideanspace.com/maths/geometry/rotations/conversions/eulerToQuaternion/index.htm">the euclideanspace website</a>.
  example: []
  syntax:
    content: public static QuaternionD EulerToQuaternion(double3 e, bool inDegrees = false)
    parameters:
    - id: e
      type: Fusee.Math.Core.double3
      description: Euler angle to convert.
    - id: inDegrees
      type: System.Boolean
      description: Whether the angles are in degrees or radians.
    return:
      type: Fusee.Math.Core.QuaternionD
      description: A Quaternion representing the euler angle passed to this method.
    content.vb: Public Shared Function EulerToQuaternion(e As double3, inDegrees As Boolean = False) As QuaternionD
  overload: Fusee.Math.Core.QuaternionD.EulerToQuaternion*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.QuaternionD.Transform(Fusee.Math.Core.double4,Fusee.Math.Core.QuaternionD)
  commentId: M:Fusee.Math.Core.QuaternionD.Transform(Fusee.Math.Core.double4,Fusee.Math.Core.QuaternionD)
  id: Transform(Fusee.Math.Core.double4,Fusee.Math.Core.QuaternionD)
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: Transform(double4, QuaternionD)
  nameWithType: QuaternionD.Transform(double4, QuaternionD)
  fullName: Fusee.Math.Core.QuaternionD.Transform(Fusee.Math.Core.double4, Fusee.Math.Core.QuaternionD)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Transform
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 584
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nTransforms a vector by a QuaternionD rotation.\n"
  example: []
  syntax:
    content: public static double4 Transform(double4 vec, QuaternionD quat)
    parameters:
    - id: vec
      type: Fusee.Math.Core.double4
      description: The vector to transform.
    - id: quat
      type: Fusee.Math.Core.QuaternionD
      description: The QuaternionD to rotate the vector by.
    return:
      type: Fusee.Math.Core.double4
      description: "\nThe result of the operation.\n"
    content.vb: Public Shared Function Transform(vec As double4, quat As QuaternionD) As double4
  overload: Fusee.Math.Core.QuaternionD.Transform*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.QuaternionD.op_Addition(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  commentId: M:Fusee.Math.Core.QuaternionD.op_Addition(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  id: op_Addition(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: Addition(QuaternionD, QuaternionD)
  nameWithType: QuaternionD.Addition(QuaternionD, QuaternionD)
  fullName: Fusee.Math.Core.QuaternionD.Addition(Fusee.Math.Core.QuaternionD, Fusee.Math.Core.QuaternionD)
  type: Operator
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: op_Addition
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 610
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nAdds two instances.\n"
  example: []
  syntax:
    content: public static QuaternionD operator +(QuaternionD left, QuaternionD right)
    parameters:
    - id: left
      type: Fusee.Math.Core.QuaternionD
      description: The first instance.
    - id: right
      type: Fusee.Math.Core.QuaternionD
      description: The second instance.
    return:
      type: Fusee.Math.Core.QuaternionD
      description: The result of the calculation.
    content.vb: Public Shared Operator +(left As QuaternionD, right As QuaternionD) As QuaternionD
  overload: Fusee.Math.Core.QuaternionD.op_Addition*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.QuaternionD.op_Subtraction(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  commentId: M:Fusee.Math.Core.QuaternionD.op_Subtraction(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  id: op_Subtraction(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: Subtraction(QuaternionD, QuaternionD)
  nameWithType: QuaternionD.Subtraction(QuaternionD, QuaternionD)
  fullName: Fusee.Math.Core.QuaternionD.Subtraction(Fusee.Math.Core.QuaternionD, Fusee.Math.Core.QuaternionD)
  type: Operator
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: op_Subtraction
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 621
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nSubtracts two instances.\n"
  example: []
  syntax:
    content: public static QuaternionD operator -(QuaternionD left, QuaternionD right)
    parameters:
    - id: left
      type: Fusee.Math.Core.QuaternionD
      description: The first instance.
    - id: right
      type: Fusee.Math.Core.QuaternionD
      description: The second instance.
    return:
      type: Fusee.Math.Core.QuaternionD
      description: The result of the calculation.
    content.vb: Public Shared Operator -(left As QuaternionD, right As QuaternionD) As QuaternionD
  overload: Fusee.Math.Core.QuaternionD.op_Subtraction*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.QuaternionD.op_Multiply(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  commentId: M:Fusee.Math.Core.QuaternionD.op_Multiply(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  id: op_Multiply(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: Multiply(QuaternionD, QuaternionD)
  nameWithType: QuaternionD.Multiply(QuaternionD, QuaternionD)
  fullName: Fusee.Math.Core.QuaternionD.Multiply(Fusee.Math.Core.QuaternionD, Fusee.Math.Core.QuaternionD)
  type: Operator
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: op_Multiply
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 632
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nMultiplies two instances.\n"
  example: []
  syntax:
    content: public static QuaternionD operator *(QuaternionD left, QuaternionD right)
    parameters:
    - id: left
      type: Fusee.Math.Core.QuaternionD
      description: The first instance.
    - id: right
      type: Fusee.Math.Core.QuaternionD
      description: The second instance.
    return:
      type: Fusee.Math.Core.QuaternionD
      description: The result of the calculation.
    content.vb: Public Shared Operator *(left As QuaternionD, right As QuaternionD) As QuaternionD
  overload: Fusee.Math.Core.QuaternionD.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.QuaternionD.op_Multiply(Fusee.Math.Core.QuaternionD,System.Double)
  commentId: M:Fusee.Math.Core.QuaternionD.op_Multiply(Fusee.Math.Core.QuaternionD,System.Double)
  id: op_Multiply(Fusee.Math.Core.QuaternionD,System.Double)
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: Multiply(QuaternionD, Double)
  nameWithType: QuaternionD.Multiply(QuaternionD, Double)
  fullName: Fusee.Math.Core.QuaternionD.Multiply(Fusee.Math.Core.QuaternionD, System.Double)
  type: Operator
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: op_Multiply
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 643
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nMultiplies an instance by a scalar.\n"
  example: []
  syntax:
    content: public static QuaternionD operator *(QuaternionD quaternionD, double scale)
    parameters:
    - id: quaternionD
      type: Fusee.Math.Core.QuaternionD
      description: The instance.
    - id: scale
      type: System.Double
      description: The scalar.
    return:
      type: Fusee.Math.Core.QuaternionD
      description: A new instance containing the result of the calculation.
    content.vb: Public Shared Operator *(quaternionD As QuaternionD, scale As Double) As QuaternionD
  overload: Fusee.Math.Core.QuaternionD.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.QuaternionD.op_Multiply(System.Double,Fusee.Math.Core.QuaternionD)
  commentId: M:Fusee.Math.Core.QuaternionD.op_Multiply(System.Double,Fusee.Math.Core.QuaternionD)
  id: op_Multiply(System.Double,Fusee.Math.Core.QuaternionD)
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: Multiply(Double, QuaternionD)
  nameWithType: QuaternionD.Multiply(Double, QuaternionD)
  fullName: Fusee.Math.Core.QuaternionD.Multiply(System.Double, Fusee.Math.Core.QuaternionD)
  type: Operator
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: op_Multiply
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 654
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nMultiplies an instance by a scalar.\n"
  example: []
  syntax:
    content: public static QuaternionD operator *(double scale, QuaternionD quaternionD)
    parameters:
    - id: scale
      type: System.Double
      description: The scalar.
    - id: quaternionD
      type: Fusee.Math.Core.QuaternionD
      description: The instance.
    return:
      type: Fusee.Math.Core.QuaternionD
      description: A new instance containing the result of the calculation.
    content.vb: Public Shared Operator *(scale As Double, quaternionD As QuaternionD) As QuaternionD
  overload: Fusee.Math.Core.QuaternionD.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.QuaternionD.op_Equality(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  commentId: M:Fusee.Math.Core.QuaternionD.op_Equality(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  id: op_Equality(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: Equality(QuaternionD, QuaternionD)
  nameWithType: QuaternionD.Equality(QuaternionD, QuaternionD)
  fullName: Fusee.Math.Core.QuaternionD.Equality(Fusee.Math.Core.QuaternionD, Fusee.Math.Core.QuaternionD)
  type: Operator
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: op_Equality
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 665
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCompares two instances for equality.\n"
  example: []
  syntax:
    content: public static bool operator ==(QuaternionD left, QuaternionD right)
    parameters:
    - id: left
      type: Fusee.Math.Core.QuaternionD
      description: The first instance.
    - id: right
      type: Fusee.Math.Core.QuaternionD
      description: The second instance.
    return:
      type: System.Boolean
      description: True, if left equals right; false otherwise.
    content.vb: Public Shared Operator =(left As QuaternionD, right As QuaternionD) As Boolean
  overload: Fusee.Math.Core.QuaternionD.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.QuaternionD.op_Inequality(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  commentId: M:Fusee.Math.Core.QuaternionD.op_Inequality(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  id: op_Inequality(Fusee.Math.Core.QuaternionD,Fusee.Math.Core.QuaternionD)
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: Inequality(QuaternionD, QuaternionD)
  nameWithType: QuaternionD.Inequality(QuaternionD, QuaternionD)
  fullName: Fusee.Math.Core.QuaternionD.Inequality(Fusee.Math.Core.QuaternionD, Fusee.Math.Core.QuaternionD)
  type: Operator
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: op_Inequality
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 676
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCompares two instances for inequality.\n"
  example: []
  syntax:
    content: public static bool operator !=(QuaternionD left, QuaternionD right)
    parameters:
    - id: left
      type: Fusee.Math.Core.QuaternionD
      description: The first instance.
    - id: right
      type: Fusee.Math.Core.QuaternionD
      description: The second instance.
    return:
      type: System.Boolean
      description: True, if left does not equal right; false otherwise.
    content.vb: Public Shared Operator <>(left As QuaternionD, right As QuaternionD) As Boolean
  overload: Fusee.Math.Core.QuaternionD.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.QuaternionD.ToString
  commentId: M:Fusee.Math.Core.QuaternionD.ToString
  id: ToString
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: QuaternionD.ToString()
  fullName: Fusee.Math.Core.QuaternionD.ToString()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: ToString
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 692
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns a System.String that represents the current QuaternionD.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string.
    content.vb: Public Overrides Function ToString As String
  overridden: System.ValueType.ToString
  overload: Fusee.Math.Core.QuaternionD.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Fusee.Math.Core.QuaternionD.ToString(System.IFormatProvider)
  commentId: M:Fusee.Math.Core.QuaternionD.ToString(System.IFormatProvider)
  id: ToString(System.IFormatProvider)
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: ToString(IFormatProvider)
  nameWithType: QuaternionD.ToString(IFormatProvider)
  fullName: Fusee.Math.Core.QuaternionD.ToString(System.IFormatProvider)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: ToString
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 704
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns a System.String that represents the current QuaternionD.\n"
  example: []
  syntax:
    content: public string ToString(IFormatProvider provider)
    parameters:
    - id: provider
      type: System.IFormatProvider
      description: Provides information about a specific culture.
    return:
      type: System.String
      description: "\nA <xref href=\"System.String\" data-throw-if-not-resolved=\"false\"></xref> that represents this instance.\n"
    content.vb: Public Function ToString(provider As IFormatProvider) As String
  overload: Fusee.Math.Core.QuaternionD.ToString*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.QuaternionD.Equals(System.Object)
  commentId: M:Fusee.Math.Core.QuaternionD.Equals(System.Object)
  id: Equals(System.Object)
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: QuaternionD.Equals(Object)
  fullName: Fusee.Math.Core.QuaternionD.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Equals
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 726
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCompares this object instance to another object for equality.\n"
  example: []
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
      description: The other object to be used in the comparison.
    return:
      type: System.Boolean
      description: True if both objects are QuaternionDs of equal value. Otherwise it returns false.
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Fusee.Math.Core.QuaternionD.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Fusee.Math.Core.QuaternionD.GetHashCode
  commentId: M:Fusee.Math.Core.QuaternionD.GetHashCode
  id: GetHashCode
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: QuaternionD.GetHashCode()
  fullName: Fusee.Math.Core.QuaternionD.GetHashCode()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: GetHashCode
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 740
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nProvides the hash code for this object.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: A hash code formed from the bitwise XOR of this objects members.
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: Fusee.Math.Core.QuaternionD.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Fusee.Math.Core.QuaternionD.Equals(Fusee.Math.Core.QuaternionD)
  commentId: M:Fusee.Math.Core.QuaternionD.Equals(Fusee.Math.Core.QuaternionD)
  id: Equals(Fusee.Math.Core.QuaternionD)
  parent: Fusee.Math.Core.QuaternionD
  langs:
  - csharp
  - vb
  name: Equals(QuaternionD)
  nameWithType: QuaternionD.Equals(QuaternionD)
  fullName: Fusee.Math.Core.QuaternionD.Equals(Fusee.Math.Core.QuaternionD)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/QuaternionD.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Equals
    path: src/Fusee/src/Math/Core/QuaternionD.cs
    startLine: 758
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCompares this QuaternionD instance to another QuaternionD for equality.\n"
  example: []
  syntax:
    content: public bool Equals(QuaternionD other)
    parameters:
    - id: other
      type: Fusee.Math.Core.QuaternionD
      description: The other QuaternionD to be used in the comparison.
    return:
      type: System.Boolean
      description: True if both instances are equal; false otherwise.
    content.vb: Public Function Equals(other As QuaternionD) As Boolean
  overload: Fusee.Math.Core.QuaternionD.Equals*
  implements:
  - System.IEquatable{Fusee.Math.Core.QuaternionD}.Equals(Fusee.Math.Core.QuaternionD)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Fusee.Math.Core
  commentId: N:Fusee.Math.Core
  name: Fusee.Math.Core
  nameWithType: Fusee.Math.Core
  fullName: Fusee.Math.Core
- uid: System.IEquatable{Fusee.Math.Core.QuaternionD}
  commentId: T:System.IEquatable{Fusee.Math.Core.QuaternionD}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<QuaternionD>
  nameWithType: IEquatable<QuaternionD>
  fullName: System.IEquatable<Fusee.Math.Core.QuaternionD>
  nameWithType.vb: IEquatable(Of QuaternionD)
  fullName.vb: System.IEquatable(Of Fusee.Math.Core.QuaternionD)
  name.vb: IEquatable(Of QuaternionD)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Fusee.Math.Core.QuaternionD
    name: QuaternionD
    nameWithType: QuaternionD
    fullName: Fusee.Math.Core.QuaternionD
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Fusee.Math.Core.QuaternionD
    name: QuaternionD
    nameWithType: QuaternionD
    fullName: Fusee.Math.Core.QuaternionD
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Fusee.Math.Core.QuaternionD.#ctor*
  commentId: Overload:Fusee.Math.Core.QuaternionD.#ctor
  name: QuaternionD
  nameWithType: QuaternionD.QuaternionD
  fullName: Fusee.Math.Core.QuaternionD.QuaternionD
- uid: Fusee.Math.Core.double3
  commentId: T:Fusee.Math.Core.double3
  parent: Fusee.Math.Core
  name: double3
  nameWithType: double3
  fullName: Fusee.Math.Core.double3
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Fusee.Math.Core.QuaternionD.xyz*
  commentId: Overload:Fusee.Math.Core.QuaternionD.xyz
  name: xyz
  nameWithType: QuaternionD.xyz
  fullName: Fusee.Math.Core.QuaternionD.xyz
- uid: Fusee.Math.Core.QuaternionD.x*
  commentId: Overload:Fusee.Math.Core.QuaternionD.x
  name: x
  nameWithType: QuaternionD.x
  fullName: Fusee.Math.Core.QuaternionD.x
- uid: Fusee.Math.Core.QuaternionD.y*
  commentId: Overload:Fusee.Math.Core.QuaternionD.y
  name: y
  nameWithType: QuaternionD.y
  fullName: Fusee.Math.Core.QuaternionD.y
- uid: Fusee.Math.Core.QuaternionD.z*
  commentId: Overload:Fusee.Math.Core.QuaternionD.z
  name: z
  nameWithType: QuaternionD.z
  fullName: Fusee.Math.Core.QuaternionD.z
- uid: Fusee.Math.Core.QuaternionD.w*
  commentId: Overload:Fusee.Math.Core.QuaternionD.w
  name: w
  nameWithType: QuaternionD.w
  fullName: Fusee.Math.Core.QuaternionD.w
- uid: Fusee.Math.Core.QuaternionD.Item*
  commentId: Overload:Fusee.Math.Core.QuaternionD.Item
  name: Item
  nameWithType: QuaternionD.Item
  fullName: Fusee.Math.Core.QuaternionD.Item
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Fusee.Math.Core.QuaternionD.ToAxisAngle*
  commentId: Overload:Fusee.Math.Core.QuaternionD.ToAxisAngle
  name: ToAxisAngle
  nameWithType: QuaternionD.ToAxisAngle
  fullName: Fusee.Math.Core.QuaternionD.ToAxisAngle
- uid: Fusee.Math.Core.double4
  commentId: T:Fusee.Math.Core.double4
  parent: Fusee.Math.Core
  name: double4
  nameWithType: double4
  fullName: Fusee.Math.Core.double4
- uid: Fusee.Math.Core.QuaternionD.ToRotMat*
  commentId: Overload:Fusee.Math.Core.QuaternionD.ToRotMat
  name: ToRotMat
  nameWithType: QuaternionD.ToRotMat
  fullName: Fusee.Math.Core.QuaternionD.ToRotMat
- uid: Fusee.Math.Core.double4x4
  commentId: T:Fusee.Math.Core.double4x4
  parent: Fusee.Math.Core
  name: double4x4
  nameWithType: double4x4
  fullName: Fusee.Math.Core.double4x4
- uid: Fusee.Math.Core.QuaternionD.LengthSquared
  commentId: P:Fusee.Math.Core.QuaternionD.LengthSquared
  isExternal: true
- uid: Fusee.Math.Core.QuaternionD.Length*
  commentId: Overload:Fusee.Math.Core.QuaternionD.Length
  name: Length
  nameWithType: QuaternionD.Length
  fullName: Fusee.Math.Core.QuaternionD.Length
- uid: Fusee.Math.Core.QuaternionD.LengthSquared*
  commentId: Overload:Fusee.Math.Core.QuaternionD.LengthSquared
  name: LengthSquared
  nameWithType: QuaternionD.LengthSquared
  fullName: Fusee.Math.Core.QuaternionD.LengthSquared
- uid: Fusee.Math.Core.QuaternionD.Normalize*
  commentId: Overload:Fusee.Math.Core.QuaternionD.Normalize
  name: Normalize
  nameWithType: QuaternionD.Normalize
  fullName: Fusee.Math.Core.QuaternionD.Normalize
- uid: Fusee.Math.Core.QuaternionD
  commentId: T:Fusee.Math.Core.QuaternionD
  parent: Fusee.Math.Core
  name: QuaternionD
  nameWithType: QuaternionD
  fullName: Fusee.Math.Core.QuaternionD
- uid: Fusee.Math.Core.QuaternionD.Conjugate*
  commentId: Overload:Fusee.Math.Core.QuaternionD.Conjugate
  name: Conjugate
  nameWithType: QuaternionD.Conjugate
  fullName: Fusee.Math.Core.QuaternionD.Conjugate
- uid: Fusee.Math.Core.QuaternionD.Invert*
  commentId: Overload:Fusee.Math.Core.QuaternionD.Invert
  name: Invert
  nameWithType: QuaternionD.Invert
  fullName: Fusee.Math.Core.QuaternionD.Invert
- uid: Fusee.Math.Core.QuaternionD.Add*
  commentId: Overload:Fusee.Math.Core.QuaternionD.Add
  name: Add
  nameWithType: QuaternionD.Add
  fullName: Fusee.Math.Core.QuaternionD.Add
- uid: Fusee.Math.Core.QuaternionD.Sub*
  commentId: Overload:Fusee.Math.Core.QuaternionD.Sub
  name: Sub
  nameWithType: QuaternionD.Sub
  fullName: Fusee.Math.Core.QuaternionD.Sub
- uid: Fusee.Math.Core.QuaternionD.Multiply*
  commentId: Overload:Fusee.Math.Core.QuaternionD.Multiply
  name: Multiply
  nameWithType: QuaternionD.Multiply
  fullName: Fusee.Math.Core.QuaternionD.Multiply
- uid: Fusee.Math.Core.QuaternionD.FromAxisAngle*
  commentId: Overload:Fusee.Math.Core.QuaternionD.FromAxisAngle
  name: FromAxisAngle
  nameWithType: QuaternionD.FromAxisAngle
  fullName: Fusee.Math.Core.QuaternionD.FromAxisAngle
- uid: Fusee.Math.Core.QuaternionD.Slerp*
  commentId: Overload:Fusee.Math.Core.QuaternionD.Slerp
  name: Slerp
  nameWithType: QuaternionD.Slerp
  fullName: Fusee.Math.Core.QuaternionD.Slerp
- uid: Fusee.Math.Core.QuaternionD.EulerToQuaternion*
  commentId: Overload:Fusee.Math.Core.QuaternionD.EulerToQuaternion
  name: EulerToQuaternion
  nameWithType: QuaternionD.EulerToQuaternion
  fullName: Fusee.Math.Core.QuaternionD.EulerToQuaternion
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Fusee.Math.Core.QuaternionD.Transform*
  commentId: Overload:Fusee.Math.Core.QuaternionD.Transform
  name: Transform
  nameWithType: QuaternionD.Transform
  fullName: Fusee.Math.Core.QuaternionD.Transform
- uid: Fusee.Math.Core.QuaternionD.op_Addition*
  commentId: Overload:Fusee.Math.Core.QuaternionD.op_Addition
  name: Addition
  nameWithType: QuaternionD.Addition
  fullName: Fusee.Math.Core.QuaternionD.Addition
- uid: Fusee.Math.Core.QuaternionD.op_Subtraction*
  commentId: Overload:Fusee.Math.Core.QuaternionD.op_Subtraction
  name: Subtraction
  nameWithType: QuaternionD.Subtraction
  fullName: Fusee.Math.Core.QuaternionD.Subtraction
- uid: Fusee.Math.Core.QuaternionD.op_Multiply*
  commentId: Overload:Fusee.Math.Core.QuaternionD.op_Multiply
  name: Multiply
  nameWithType: QuaternionD.Multiply
  fullName: Fusee.Math.Core.QuaternionD.Multiply
- uid: Fusee.Math.Core.QuaternionD.op_Equality*
  commentId: Overload:Fusee.Math.Core.QuaternionD.op_Equality
  name: Equality
  nameWithType: QuaternionD.Equality
  fullName: Fusee.Math.Core.QuaternionD.Equality
- uid: Fusee.Math.Core.QuaternionD.op_Inequality*
  commentId: Overload:Fusee.Math.Core.QuaternionD.op_Inequality
  name: Inequality
  nameWithType: QuaternionD.Inequality
  fullName: Fusee.Math.Core.QuaternionD.Inequality
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Math.Core.QuaternionD.ToString*
  commentId: Overload:Fusee.Math.Core.QuaternionD.ToString
  name: ToString
  nameWithType: QuaternionD.ToString
  fullName: Fusee.Math.Core.QuaternionD.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.IFormatProvider
  commentId: T:System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  nameWithType: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Math.Core.QuaternionD.Equals*
  commentId: Overload:Fusee.Math.Core.QuaternionD.Equals
  name: Equals
  nameWithType: QuaternionD.Equals
  fullName: Fusee.Math.Core.QuaternionD.Equals
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Math.Core.QuaternionD.GetHashCode*
  commentId: Overload:Fusee.Math.Core.QuaternionD.GetHashCode
  name: GetHashCode
  nameWithType: QuaternionD.GetHashCode
  fullName: Fusee.Math.Core.QuaternionD.GetHashCode
- uid: System.IEquatable{Fusee.Math.Core.QuaternionD}.Equals(Fusee.Math.Core.QuaternionD)
  commentId: M:System.IEquatable{Fusee.Math.Core.QuaternionD}.Equals(Fusee.Math.Core.QuaternionD)
  parent: System.IEquatable{Fusee.Math.Core.QuaternionD}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(QuaternionD)
  nameWithType: IEquatable<QuaternionD>.Equals(QuaternionD)
  fullName: System.IEquatable<Fusee.Math.Core.QuaternionD>.Equals(Fusee.Math.Core.QuaternionD)
  nameWithType.vb: IEquatable(Of QuaternionD).Equals(QuaternionD)
  fullName.vb: System.IEquatable(Of Fusee.Math.Core.QuaternionD).Equals(Fusee.Math.Core.QuaternionD)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<QuaternionD>.Equals
    fullName: System.IEquatable<Fusee.Math.Core.QuaternionD>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Fusee.Math.Core.QuaternionD
    name: QuaternionD
    nameWithType: QuaternionD
    fullName: Fusee.Math.Core.QuaternionD
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of QuaternionD).Equals
    fullName: System.IEquatable(Of Fusee.Math.Core.QuaternionD).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Fusee.Math.Core.QuaternionD
    name: QuaternionD
    nameWithType: QuaternionD
    fullName: Fusee.Math.Core.QuaternionD
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )

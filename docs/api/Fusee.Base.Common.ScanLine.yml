### YamlMime:ManagedReference
items:
- uid: Fusee.Base.Common.ScanLine
  commentId: T:Fusee.Base.Common.ScanLine
  id: ScanLine
  parent: Fusee.Base.Common
  children:
  - Fusee.Base.Common.ScanLine.#ctor(System.Byte[],System.Int32,System.Int32,Fusee.Base.Common.ImagePixelFormat)
  - Fusee.Base.Common.ScanLine.BytesPerPixel
  - Fusee.Base.Common.ScanLine.DataSource
  - Fusee.Base.Common.ScanLine.GetScanLineBytes
  - Fusee.Base.Common.ScanLine.Offset
  - Fusee.Base.Common.ScanLine.PixelFormat
  - Fusee.Base.Common.ScanLine.Width
  langs:
  - csharp
  - vb
  name: ScanLine
  nameWithType: ScanLine
  fullName: Fusee.Base.Common.ScanLine
  type: Class
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Base/Common/ScanLine.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: ScanLine
    path: src/Fusee/src/Base/Common/ScanLine.cs
    startLine: 14
  assemblies:
  - Fusee.Base.Common
  namespace: Fusee.Base.Common
  summary: "\nProvides view into a portion (= one horizontal line) of a byte[] dataSource of an <xref href=\"Fusee.Base.Common.IImageData\" data-throw-if-not-resolved=\"false\"></xref> instance.\n"
  example: []
  syntax:
    content: public class ScanLine
    content.vb: Public Class ScanLine
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Fusee.Base.Common.ScanLine.#ctor(System.Byte[],System.Int32,System.Int32,Fusee.Base.Common.ImagePixelFormat)
  commentId: M:Fusee.Base.Common.ScanLine.#ctor(System.Byte[],System.Int32,System.Int32,Fusee.Base.Common.ImagePixelFormat)
  id: '#ctor(System.Byte[],System.Int32,System.Int32,Fusee.Base.Common.ImagePixelFormat)'
  parent: Fusee.Base.Common.ScanLine
  langs:
  - csharp
  - vb
  name: ScanLine(Byte[], Int32, Int32, ImagePixelFormat)
  nameWithType: ScanLine.ScanLine(Byte[], Int32, Int32, ImagePixelFormat)
  fullName: Fusee.Base.Common.ScanLine.ScanLine(System.Byte[], System.Int32, System.Int32, Fusee.Base.Common.ImagePixelFormat)
  type: Constructor
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Base/Common/ScanLine.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: .ctor
    path: src/Fusee/src/Base/Common/ScanLine.cs
    startLine: 23
  assemblies:
  - Fusee.Base.Common
  namespace: Fusee.Base.Common
  summary: "\nConstructor to initialize one horizontal ScanLine inside a byte[] dataSource, beginning at offset in bytes.\n"
  example: []
  syntax:
    content: public ScanLine(byte[] dataSource, int offset, int width, ImagePixelFormat pixelFormat)
    parameters:
    - id: dataSource
      type: System.Byte[]
      description: The dataSource array, usually the byte array of an IImageData.
    - id: offset
      type: System.Int32
      description: Offset in bytes (= the ScanLine begins at offset bytes inside dataSource).
    - id: width
      type: System.Int32
      description: Width of the ScanLine in pixels.
    - id: pixelFormat
      type: Fusee.Base.Common.ImagePixelFormat
      description: ImagePixelFormat of the dataSource.
    content.vb: Public Sub New(dataSource As Byte(), offset As Integer, width As Integer, pixelFormat As ImagePixelFormat)
  overload: Fusee.Base.Common.ScanLine.#ctor*
  nameWithType.vb: ScanLine.ScanLine(Byte(), Int32, Int32, ImagePixelFormat)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Fusee.Base.Common.ScanLine.ScanLine(System.Byte(), System.Int32, System.Int32, Fusee.Base.Common.ImagePixelFormat)
  name.vb: ScanLine(Byte(), Int32, Int32, ImagePixelFormat)
- uid: Fusee.Base.Common.ScanLine.DataSource
  commentId: P:Fusee.Base.Common.ScanLine.DataSource
  id: DataSource
  parent: Fusee.Base.Common.ScanLine
  langs:
  - csharp
  - vb
  name: DataSource
  nameWithType: ScanLine.DataSource
  fullName: Fusee.Base.Common.ScanLine.DataSource
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Base/Common/ScanLine.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: DataSource
    path: src/Fusee/src/Base/Common/ScanLine.cs
    startLine: 34
  assemblies:
  - Fusee.Base.Common
  namespace: Fusee.Base.Common
  summary: "\nThe Data source byte array of this ScanLine.\n"
  example: []
  syntax:
    content: public byte[] DataSource { get; }
    parameters: []
    return:
      type: System.Byte[]
    content.vb: Public ReadOnly Property DataSource As Byte()
  overload: Fusee.Base.Common.ScanLine.DataSource*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Base.Common.ScanLine.Offset
  commentId: P:Fusee.Base.Common.ScanLine.Offset
  id: Offset
  parent: Fusee.Base.Common.ScanLine
  langs:
  - csharp
  - vb
  name: Offset
  nameWithType: ScanLine.Offset
  fullName: Fusee.Base.Common.ScanLine.Offset
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Base/Common/ScanLine.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Offset
    path: src/Fusee/src/Base/Common/ScanLine.cs
    startLine: 39
  assemblies:
  - Fusee.Base.Common
  namespace: Fusee.Base.Common
  summary: "\nAn Offset (in bytes) to add to the index to the first pixel of the requested line\n"
  example: []
  syntax:
    content: public int Offset { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Offset As Integer
  overload: Fusee.Base.Common.ScanLine.Offset*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Base.Common.ScanLine.Width
  commentId: P:Fusee.Base.Common.ScanLine.Width
  id: Width
  parent: Fusee.Base.Common.ScanLine
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: ScanLine.Width
  fullName: Fusee.Base.Common.ScanLine.Width
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Base/Common/ScanLine.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Width
    path: src/Fusee/src/Base/Common/ScanLine.cs
    startLine: 45
  assemblies:
  - Fusee.Base.Common
  namespace: Fusee.Base.Common
  summary: "\nWidth of the ScanLine in pixels.\n"
  example: []
  syntax:
    content: public int Width { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Width As Integer
  overload: Fusee.Base.Common.ScanLine.Width*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Base.Common.ScanLine.BytesPerPixel
  commentId: P:Fusee.Base.Common.ScanLine.BytesPerPixel
  id: BytesPerPixel
  parent: Fusee.Base.Common.ScanLine
  langs:
  - csharp
  - vb
  name: BytesPerPixel
  nameWithType: ScanLine.BytesPerPixel
  fullName: Fusee.Base.Common.ScanLine.BytesPerPixel
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Base/Common/ScanLine.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: BytesPerPixel
    path: src/Fusee/src/Base/Common/ScanLine.cs
    startLine: 54
  assemblies:
  - Fusee.Base.Common
  namespace: Fusee.Base.Common
  summary: "\nReturns the byes per pixel with respect to the <xref href=\"Fusee.Base.Common.ScanLine.PixelFormat\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public int BytesPerPixel { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe number of bytes each pixel consists of.\n"
    content.vb: Public ReadOnly Property BytesPerPixel As Integer
  overload: Fusee.Base.Common.ScanLine.BytesPerPixel*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: For unknown pixel formats.
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Base.Common.ScanLine.PixelFormat
  commentId: P:Fusee.Base.Common.ScanLine.PixelFormat
  id: PixelFormat
  parent: Fusee.Base.Common.ScanLine
  langs:
  - csharp
  - vb
  name: PixelFormat
  nameWithType: ScanLine.PixelFormat
  fullName: Fusee.Base.Common.ScanLine.PixelFormat
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Base/Common/ScanLine.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: PixelFormat
    path: src/Fusee/src/Base/Common/ScanLine.cs
    startLine: 84
  assemblies:
  - Fusee.Base.Common
  namespace: Fusee.Base.Common
  summary: "\nDescribes the PixelFormat of the ScanLine&apos;s data source.\n"
  example: []
  syntax:
    content: public ImagePixelFormat PixelFormat { get; }
    parameters: []
    return:
      type: Fusee.Base.Common.ImagePixelFormat
    content.vb: Public ReadOnly Property PixelFormat As ImagePixelFormat
  overload: Fusee.Base.Common.ScanLine.PixelFormat*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Base.Common.ScanLine.GetScanLineBytes
  commentId: M:Fusee.Base.Common.ScanLine.GetScanLineBytes
  id: GetScanLineBytes
  parent: Fusee.Base.Common.ScanLine
  langs:
  - csharp
  - vb
  name: GetScanLineBytes()
  nameWithType: ScanLine.GetScanLineBytes()
  fullName: Fusee.Base.Common.ScanLine.GetScanLineBytes()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Base/Common/ScanLine.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: GetScanLineBytes
    path: src/Fusee/src/Base/Common/ScanLine.cs
    startLine: 91
  assemblies:
  - Fusee.Base.Common
  namespace: Fusee.Base.Common
  summary: "\nCopies the bytes that make up this ScanLine from the dataSource.\n"
  example: []
  syntax:
    content: public byte[] GetScanLineBytes()
    return:
      type: System.Byte[]
      description: Returns a byte array that makes up this ScanLine.
    content.vb: Public Function GetScanLineBytes As Byte()
  overload: Fusee.Base.Common.ScanLine.GetScanLineBytes*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Fusee.Base.Common.IImageData
  commentId: T:Fusee.Base.Common.IImageData
  parent: Fusee.Base.Common
  name: IImageData
  nameWithType: IImageData
  fullName: Fusee.Base.Common.IImageData
- uid: Fusee.Base.Common
  commentId: N:Fusee.Base.Common
  name: Fusee.Base.Common
  nameWithType: Fusee.Base.Common
  fullName: Fusee.Base.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Fusee.Base.Common.ScanLine.#ctor*
  commentId: Overload:Fusee.Base.Common.ScanLine.#ctor
  name: ScanLine
  nameWithType: ScanLine.ScanLine
  fullName: Fusee.Base.Common.ScanLine.ScanLine
- uid: System.Byte[]
  isExternal: true
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  nameWithType.vb: Byte()
  fullName.vb: System.Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Fusee.Base.Common.ImagePixelFormat
  commentId: T:Fusee.Base.Common.ImagePixelFormat
  parent: Fusee.Base.Common
  name: ImagePixelFormat
  nameWithType: ImagePixelFormat
  fullName: Fusee.Base.Common.ImagePixelFormat
- uid: Fusee.Base.Common.ScanLine.DataSource*
  commentId: Overload:Fusee.Base.Common.ScanLine.DataSource
  name: DataSource
  nameWithType: ScanLine.DataSource
  fullName: Fusee.Base.Common.ScanLine.DataSource
- uid: Fusee.Base.Common.ScanLine.Offset*
  commentId: Overload:Fusee.Base.Common.ScanLine.Offset
  name: Offset
  nameWithType: ScanLine.Offset
  fullName: Fusee.Base.Common.ScanLine.Offset
- uid: Fusee.Base.Common.ScanLine.Width*
  commentId: Overload:Fusee.Base.Common.ScanLine.Width
  name: Width
  nameWithType: ScanLine.Width
  fullName: Fusee.Base.Common.ScanLine.Width
- uid: Fusee.Base.Common.ScanLine.PixelFormat
  commentId: P:Fusee.Base.Common.ScanLine.PixelFormat
  isExternal: true
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
- uid: Fusee.Base.Common.ScanLine.BytesPerPixel*
  commentId: Overload:Fusee.Base.Common.ScanLine.BytesPerPixel
  name: BytesPerPixel
  nameWithType: ScanLine.BytesPerPixel
  fullName: Fusee.Base.Common.ScanLine.BytesPerPixel
- uid: Fusee.Base.Common.ScanLine.PixelFormat*
  commentId: Overload:Fusee.Base.Common.ScanLine.PixelFormat
  name: PixelFormat
  nameWithType: ScanLine.PixelFormat
  fullName: Fusee.Base.Common.ScanLine.PixelFormat
- uid: Fusee.Base.Common.ScanLine.GetScanLineBytes*
  commentId: Overload:Fusee.Base.Common.ScanLine.GetScanLineBytes
  name: GetScanLineBytes
  nameWithType: ScanLine.GetScanLineBytes
  fullName: Fusee.Base.Common.ScanLine.GetScanLineBytes

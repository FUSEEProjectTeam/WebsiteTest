### YamlMime:ManagedReference
items:
- uid: Fusee.Engine.Core.Geometry
  commentId: T:Fusee.Engine.Core.Geometry
  id: Geometry
  parent: Fusee.Engine.Core
  children:
  - Fusee.Engine.Core.Geometry.#ctor
  - Fusee.Engine.Core.Geometry.AddFace(System.Int32[],System.Int32[],System.Int32[])
  - Fusee.Engine.Core.Geometry.AddNormal(Fusee.Math.Core.double3)
  - Fusee.Engine.Core.Geometry.AddTexCoord(Fusee.Math.Core.double2)
  - Fusee.Engine.Core.Geometry.AddVertex(Fusee.Math.Core.double3)
  - Fusee.Engine.Core.Geometry.CalcFaceNormal(Fusee.Engine.Core.Face)
  - Fusee.Engine.Core.Geometry.CreateNormals(System.Double)
  - Fusee.Engine.Core.Geometry.Faces
  - Fusee.Engine.Core.Geometry.GetAllFacesContainingVertex(System.Int32,System.Collections.Generic.IList{System.Int32}@)
  - Fusee.Engine.Core.Geometry.HasNormals
  - Fusee.Engine.Core.Geometry.HasTexCoords
  - Fusee.Engine.Core.Geometry.Normals
  - Fusee.Engine.Core.Geometry.TexCoords
  - Fusee.Engine.Core.Geometry.ToMesh
  - Fusee.Engine.Core.Geometry.Vertices
  langs:
  - csharp
  - vb
  name: Geometry
  nameWithType: Geometry
  fullName: Fusee.Engine.Core.Geometry
  type: Class
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Geometry.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Geometry
    path: src/Fusee/src/Engine/Core/Geometry.cs
    startLine: 32
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nStores three dimensional, polygonal geometry and provides methods for manipulation.\nTo actually render the geometry in the engine, convert Geometry to <xref href=\"Fusee.Engine.Core.Scene.Mesh\" data-throw-if-not-resolved=\"false\"></xref> objects.\n"
  example: []
  syntax:
    content: public class Geometry
    content.vb: Public Class Geometry
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Fusee.Engine.Core.Geometry.Vertices
  commentId: P:Fusee.Engine.Core.Geometry.Vertices
  id: Vertices
  parent: Fusee.Engine.Core.Geometry
  langs:
  - csharp
  - vb
  name: Vertices
  nameWithType: Geometry.Vertices
  fullName: Fusee.Engine.Core.Geometry.Vertices
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Geometry.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Vertices
    path: src/Fusee/src/Engine/Core/Geometry.cs
    startLine: 44
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nThe list of vertices (3D positions).\n"
  example: []
  syntax:
    content: public IList<double3> Vertices { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Fusee.Math.Core.double3}
      description: "\nThe vertices.\n"
    content.vb: Public Property Vertices As IList(Of double3)
  overload: Fusee.Engine.Core.Geometry.Vertices*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Engine.Core.Geometry.Normals
  commentId: P:Fusee.Engine.Core.Geometry.Normals
  id: Normals
  parent: Fusee.Engine.Core.Geometry
  langs:
  - csharp
  - vb
  name: Normals
  nameWithType: Geometry.Normals
  fullName: Fusee.Engine.Core.Geometry.Normals
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Geometry.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Normals
    path: src/Fusee/src/Engine/Core/Geometry.cs
    startLine: 57
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nGets and sets the normals.\n"
  example: []
  syntax:
    content: public IList<double3> Normals { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Fusee.Math.Core.double3}
      description: "\nThe normals.\n"
    content.vb: Public Property Normals As IList(Of double3)
  overload: Fusee.Engine.Core.Geometry.Normals*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Engine.Core.Geometry.TexCoords
  commentId: P:Fusee.Engine.Core.Geometry.TexCoords
  id: TexCoords
  parent: Fusee.Engine.Core.Geometry
  langs:
  - csharp
  - vb
  name: TexCoords
  nameWithType: Geometry.TexCoords
  fullName: Fusee.Engine.Core.Geometry.TexCoords
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Geometry.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: TexCoords
    path: src/Fusee/src/Engine/Core/Geometry.cs
    startLine: 70
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nGets and sets the texture coordinates.\n"
  example: []
  syntax:
    content: public IList<double2> TexCoords { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Fusee.Math.Core.double2}
      description: "\nThe texture coordinates.\n"
    content.vb: Public Property TexCoords As IList(Of double2)
  overload: Fusee.Engine.Core.Geometry.TexCoords*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Engine.Core.Geometry.Faces
  commentId: P:Fusee.Engine.Core.Geometry.Faces
  id: Faces
  parent: Fusee.Engine.Core.Geometry
  langs:
  - csharp
  - vb
  name: Faces
  nameWithType: Geometry.Faces
  fullName: Fusee.Engine.Core.Geometry.Faces
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Geometry.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Faces
    path: src/Fusee/src/Engine/Core/Geometry.cs
    startLine: 83
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nGets and sets the faces.\n"
  example: []
  syntax:
    content: public IList<Face> Faces { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IList{Fusee.Engine.Core.Face}
      description: "\nThe faces.\n"
    content.vb: Public Property Faces As IList(Of Face)
  overload: Fusee.Engine.Core.Geometry.Faces*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Engine.Core.Geometry.#ctor
  commentId: M:Fusee.Engine.Core.Geometry.#ctor
  id: '#ctor'
  parent: Fusee.Engine.Core.Geometry
  langs:
  - csharp
  - vb
  name: Geometry()
  nameWithType: Geometry.Geometry()
  fullName: Fusee.Engine.Core.Geometry.Geometry()
  type: Constructor
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Geometry.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: .ctor
    path: src/Fusee/src/Engine/Core/Geometry.cs
    startLine: 96
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nInitializes a new instance of the <xref href=\"Fusee.Engine.Core.Geometry\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public Geometry()
    content.vb: Public Sub New
  overload: Fusee.Engine.Core.Geometry.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Engine.Core.Geometry.AddVertex(Fusee.Math.Core.double3)
  commentId: M:Fusee.Engine.Core.Geometry.AddVertex(Fusee.Math.Core.double3)
  id: AddVertex(Fusee.Math.Core.double3)
  parent: Fusee.Engine.Core.Geometry
  langs:
  - csharp
  - vb
  name: AddVertex(double3)
  nameWithType: Geometry.AddVertex(double3)
  fullName: Fusee.Engine.Core.Geometry.AddVertex(Fusee.Math.Core.double3)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Geometry.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: AddVertex
    path: src/Fusee/src/Engine/Core/Geometry.cs
    startLine: 110
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nAdds a vertex.\n"
  example: []
  syntax:
    content: public int AddVertex(double3 v)
    parameters:
    - id: v
      type: Fusee.Math.Core.double3
      description: A 3D vector.
    return:
      type: System.Int32
      description: The current vertex count.
    content.vb: Public Function AddVertex(v As double3) As Integer
  overload: Fusee.Engine.Core.Geometry.AddVertex*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Engine.Core.Geometry.AddTexCoord(Fusee.Math.Core.double2)
  commentId: M:Fusee.Engine.Core.Geometry.AddTexCoord(Fusee.Math.Core.double2)
  id: AddTexCoord(Fusee.Math.Core.double2)
  parent: Fusee.Engine.Core.Geometry
  langs:
  - csharp
  - vb
  name: AddTexCoord(double2)
  nameWithType: Geometry.AddTexCoord(double2)
  fullName: Fusee.Engine.Core.Geometry.AddTexCoord(Fusee.Math.Core.double2)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Geometry.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: AddTexCoord
    path: src/Fusee/src/Engine/Core/Geometry.cs
    startLine: 121
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nAdds the texture coordinates.\n"
  example: []
  syntax:
    content: public int AddTexCoord(double2 uv)
    parameters:
    - id: uv
      type: Fusee.Math.Core.double2
      description: Texture coordinate
    return:
      type: System.Int32
      description: The count of <xref href="Fusee.Engine.Core.Geometry.TexCoords" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function AddTexCoord(uv As double2) As Integer
  overload: Fusee.Engine.Core.Geometry.AddTexCoord*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Engine.Core.Geometry.AddNormal(Fusee.Math.Core.double3)
  commentId: M:Fusee.Engine.Core.Geometry.AddNormal(Fusee.Math.Core.double3)
  id: AddNormal(Fusee.Math.Core.double3)
  parent: Fusee.Engine.Core.Geometry
  langs:
  - csharp
  - vb
  name: AddNormal(double3)
  nameWithType: Geometry.AddNormal(double3)
  fullName: Fusee.Engine.Core.Geometry.AddNormal(Fusee.Math.Core.double3)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Geometry.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: AddNormal
    path: src/Fusee/src/Engine/Core/Geometry.cs
    startLine: 134
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nAdds the normal.\n"
  example: []
  syntax:
    content: public int AddNormal(double3 normal)
    parameters:
    - id: normal
      type: Fusee.Math.Core.double3
      description: The normal.
    return:
      type: System.Int32
      description: The count of <xref href="Fusee.Engine.Core.Geometry.Normals" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function AddNormal(normal As double3) As Integer
  overload: Fusee.Engine.Core.Geometry.AddNormal*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Engine.Core.Geometry.AddFace(System.Int32[],System.Int32[],System.Int32[])
  commentId: M:Fusee.Engine.Core.Geometry.AddFace(System.Int32[],System.Int32[],System.Int32[])
  id: AddFace(System.Int32[],System.Int32[],System.Int32[])
  parent: Fusee.Engine.Core.Geometry
  langs:
  - csharp
  - vb
  name: AddFace(Int32[], Int32[], Int32[])
  nameWithType: Geometry.AddFace(Int32[], Int32[], Int32[])
  fullName: Fusee.Engine.Core.Geometry.AddFace(System.Int32[], System.Int32[], System.Int32[])
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Geometry.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: AddFace
    path: src/Fusee/src/Engine/Core/Geometry.cs
    startLine: 161
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nAdds the face.\n"
  example: []
  syntax:
    content: public int AddFace(int[] vertInx, int[] texCoordInx, int[] normalInx)
    parameters:
    - id: vertInx
      type: System.Int32[]
      description: The vert inx.
    - id: texCoordInx
      type: System.Int32[]
      description: The tex coord inx.
    - id: normalInx
      type: System.Int32[]
      description: The normal inx.
    return:
      type: System.Int32
      description: The face count as integer value.
    content.vb: Public Function AddFace(vertInx As Integer(), texCoordInx As Integer(), normalInx As Integer()) As Integer
  overload: Fusee.Engine.Core.Geometry.AddFace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: vertInx
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "\n&quot;Vertex index out of range: vertInx[i]&quot;\nor\n&quot;Number of texture coordinate indices must match number of vertex indices&quot;\nor\n&quot;Texture coordinate index out of range: texCoordInx[i]&quot;\nor\n&quot;Number of normal indices must match number of vertex indices&quot;\nor\n&quot;Normal index out of range: normalInx[i]&quot;\n"
  nameWithType.vb: Geometry.AddFace(Int32(), Int32(), Int32())
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Fusee.Engine.Core.Geometry.AddFace(System.Int32(), System.Int32(), System.Int32())
  name.vb: AddFace(Int32(), Int32(), Int32())
- uid: Fusee.Engine.Core.Geometry.HasNormals
  commentId: P:Fusee.Engine.Core.Geometry.HasNormals
  id: HasNormals
  parent: Fusee.Engine.Core.Geometry
  langs:
  - csharp
  - vb
  name: HasNormals
  nameWithType: Geometry.HasNormals
  fullName: Fusee.Engine.Core.Geometry.HasNormals
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Geometry.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: HasNormals
    path: src/Fusee/src/Engine/Core/Geometry.cs
    startLine: 229
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nGets a value indicating whether this instance has normals.\n"
  example: []
  syntax:
    content: public bool HasNormals { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance has normals; otherwise, <code>false</code>.\n"
    content.vb: Public ReadOnly Property HasNormals As Boolean
  overload: Fusee.Engine.Core.Geometry.HasNormals*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Engine.Core.Geometry.HasTexCoords
  commentId: P:Fusee.Engine.Core.Geometry.HasTexCoords
  id: HasTexCoords
  parent: Fusee.Engine.Core.Geometry
  langs:
  - csharp
  - vb
  name: HasTexCoords
  nameWithType: Geometry.HasTexCoords
  fullName: Fusee.Engine.Core.Geometry.HasTexCoords
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Geometry.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: HasTexCoords
    path: src/Fusee/src/Engine/Core/Geometry.cs
    startLine: 240
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nGets a value indicating whether this instance has texture coordinates.\n"
  example: []
  syntax:
    content: public bool HasTexCoords { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance has texture coordinates; otherwise, <code>false</code>.\n"
    content.vb: Public ReadOnly Property HasTexCoords As Boolean
  overload: Fusee.Engine.Core.Geometry.HasTexCoords*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Engine.Core.Geometry.GetAllFacesContainingVertex(System.Int32,System.Collections.Generic.IList{System.Int32}@)
  commentId: M:Fusee.Engine.Core.Geometry.GetAllFacesContainingVertex(System.Int32,System.Collections.Generic.IList{System.Int32}@)
  id: GetAllFacesContainingVertex(System.Int32,System.Collections.Generic.IList{System.Int32}@)
  parent: Fusee.Engine.Core.Geometry
  langs:
  - csharp
  - vb
  name: GetAllFacesContainingVertex(Int32, out IList<Int32>)
  nameWithType: Geometry.GetAllFacesContainingVertex(Int32, out IList<Int32>)
  fullName: Fusee.Engine.Core.Geometry.GetAllFacesContainingVertex(System.Int32, out System.Collections.Generic.IList<System.Int32>)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Geometry.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: GetAllFacesContainingVertex
    path: src/Fusee/src/Engine/Core/Geometry.cs
    startLine: 255
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nGets all faces containing a certain vertex.\n"
  example: []
  syntax:
    content: public IList<int> GetAllFacesContainingVertex(int iV, out IList<int> vertInFace)
    parameters:
    - id: iV
      type: System.Int32
      description: The index of the vertex.
    - id: vertInFace
      type: System.Collections.Generic.IList{System.Int32}
      description: 'Out parameter: A list of indices of the vertex in each respective face.'
    return:
      type: System.Collections.Generic.IList{System.Int32}
      description: A list of indices containing the vertex.
    content.vb: Public Function GetAllFacesContainingVertex(iV As Integer, ByRef vertInFace As IList(Of Integer)) As IList(Of Integer)
  overload: Fusee.Engine.Core.Geometry.GetAllFacesContainingVertex*
  nameWithType.vb: Geometry.GetAllFacesContainingVertex(Int32, ByRef IList(Of Int32))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Fusee.Engine.Core.Geometry.GetAllFacesContainingVertex(System.Int32, ByRef System.Collections.Generic.IList(Of System.Int32))
  name.vb: GetAllFacesContainingVertex(Int32, ByRef IList(Of Int32))
- uid: Fusee.Engine.Core.Geometry.CalcFaceNormal(Fusee.Engine.Core.Face)
  commentId: M:Fusee.Engine.Core.Geometry.CalcFaceNormal(Fusee.Engine.Core.Face)
  id: CalcFaceNormal(Fusee.Engine.Core.Face)
  parent: Fusee.Engine.Core.Geometry
  langs:
  - csharp
  - vb
  name: CalcFaceNormal(Face)
  nameWithType: Geometry.CalcFaceNormal(Face)
  fullName: Fusee.Engine.Core.Geometry.CalcFaceNormal(Fusee.Engine.Core.Face)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Geometry.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: CalcFaceNormal
    path: src/Fusee/src/Engine/Core/Geometry.cs
    startLine: 283
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nCalculates the normal vector for a given face.\n"
  example: []
  syntax:
    content: public double3 CalcFaceNormal(Face f)
    parameters:
    - id: f
      type: Fusee.Engine.Core.Face
      description: The face to calculate the normal for.
    return:
      type: Fusee.Math.Core.double3
      description: The normal vector for the face.
    content.vb: Public Function CalcFaceNormal(f As Face) As double3
  overload: Fusee.Engine.Core.Geometry.CalcFaceNormal*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: The face doesn&apos;t consist of 3 or more vertices.
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Engine.Core.Geometry.CreateNormals(System.Double)
  commentId: M:Fusee.Engine.Core.Geometry.CreateNormals(System.Double)
  id: CreateNormals(System.Double)
  parent: Fusee.Engine.Core.Geometry
  langs:
  - csharp
  - vb
  name: CreateNormals(Double)
  nameWithType: Geometry.CreateNormals(Double)
  fullName: Fusee.Engine.Core.Geometry.CreateNormals(System.Double)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Geometry.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: CreateNormals
    path: src/Fusee/src/Engine/Core/Geometry.cs
    startLine: 299
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nCreates normals for the entire geometry based on a given smoothing angle.\n"
  example: []
  syntax:
    content: public void CreateNormals(double smoothingAngle)
    parameters:
    - id: smoothingAngle
      type: System.Double
      description: The smoothing angle.
    content.vb: Public Sub CreateNormals(smoothingAngle As Double)
  overload: Fusee.Engine.Core.Geometry.CreateNormals*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Engine.Core.Geometry.ToMesh
  commentId: M:Fusee.Engine.Core.Geometry.ToMesh
  id: ToMesh
  parent: Fusee.Engine.Core.Geometry
  langs:
  - csharp
  - vb
  name: ToMesh()
  nameWithType: Geometry.ToMesh()
  fullName: Fusee.Engine.Core.Geometry.ToMesh()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Geometry.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: ToMesh
    path: src/Fusee/src/Engine/Core/Geometry.cs
    startLine: 392
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nConverts the whole geometry to a <xref href=\"Fusee.Engine.Core.Scene.Mesh\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public Mesh ToMesh()
    return:
      type: Fusee.Engine.Core.Scene.Mesh
      description: An equivalent instance of <xref href="Fusee.Engine.Core.Scene.Mesh" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Function ToMesh As Mesh
  overload: Fusee.Engine.Core.Geometry.ToMesh*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Fusee.Engine.Core.Scene.Mesh
  commentId: T:Fusee.Engine.Core.Scene.Mesh
  parent: Fusee.Engine.Core.Scene
  name: Mesh
  nameWithType: Mesh
  fullName: Fusee.Engine.Core.Scene.Mesh
- uid: Fusee.Engine.Core
  commentId: N:Fusee.Engine.Core
  name: Fusee.Engine.Core
  nameWithType: Fusee.Engine.Core
  fullName: Fusee.Engine.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Engine.Core.Scene
  commentId: N:Fusee.Engine.Core.Scene
  name: Fusee.Engine.Core.Scene
  nameWithType: Fusee.Engine.Core.Scene
  fullName: Fusee.Engine.Core.Scene
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Fusee.Engine.Core.Geometry.Vertices*
  commentId: Overload:Fusee.Engine.Core.Geometry.Vertices
  name: Vertices
  nameWithType: Geometry.Vertices
  fullName: Fusee.Engine.Core.Geometry.Vertices
- uid: System.Collections.Generic.IList{Fusee.Math.Core.double3}
  commentId: T:System.Collections.Generic.IList{Fusee.Math.Core.double3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<double3>
  nameWithType: IList<double3>
  fullName: System.Collections.Generic.IList<Fusee.Math.Core.double3>
  nameWithType.vb: IList(Of double3)
  fullName.vb: System.Collections.Generic.IList(Of Fusee.Math.Core.double3)
  name.vb: IList(Of double3)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Fusee.Math.Core.double3
    name: double3
    nameWithType: double3
    fullName: Fusee.Math.Core.double3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Fusee.Math.Core.double3
    name: double3
    nameWithType: double3
    fullName: Fusee.Math.Core.double3
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Fusee.Engine.Core.Geometry.Normals*
  commentId: Overload:Fusee.Engine.Core.Geometry.Normals
  name: Normals
  nameWithType: Geometry.Normals
  fullName: Fusee.Engine.Core.Geometry.Normals
- uid: Fusee.Engine.Core.Geometry.TexCoords*
  commentId: Overload:Fusee.Engine.Core.Geometry.TexCoords
  name: TexCoords
  nameWithType: Geometry.TexCoords
  fullName: Fusee.Engine.Core.Geometry.TexCoords
- uid: System.Collections.Generic.IList{Fusee.Math.Core.double2}
  commentId: T:System.Collections.Generic.IList{Fusee.Math.Core.double2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<double2>
  nameWithType: IList<double2>
  fullName: System.Collections.Generic.IList<Fusee.Math.Core.double2>
  nameWithType.vb: IList(Of double2)
  fullName.vb: System.Collections.Generic.IList(Of Fusee.Math.Core.double2)
  name.vb: IList(Of double2)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Fusee.Math.Core.double2
    name: double2
    nameWithType: double2
    fullName: Fusee.Math.Core.double2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Fusee.Math.Core.double2
    name: double2
    nameWithType: double2
    fullName: Fusee.Math.Core.double2
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Engine.Core.Geometry.Faces*
  commentId: Overload:Fusee.Engine.Core.Geometry.Faces
  name: Faces
  nameWithType: Geometry.Faces
  fullName: Fusee.Engine.Core.Geometry.Faces
- uid: System.Collections.Generic.IList{Fusee.Engine.Core.Face}
  commentId: T:System.Collections.Generic.IList{Fusee.Engine.Core.Face}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Face>
  nameWithType: IList<Face>
  fullName: System.Collections.Generic.IList<Fusee.Engine.Core.Face>
  nameWithType.vb: IList(Of Face)
  fullName.vb: System.Collections.Generic.IList(Of Fusee.Engine.Core.Face)
  name.vb: IList(Of Face)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Fusee.Engine.Core.Face
    name: Face
    nameWithType: Face
    fullName: Fusee.Engine.Core.Face
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Fusee.Engine.Core.Face
    name: Face
    nameWithType: Face
    fullName: Fusee.Engine.Core.Face
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Engine.Core.Geometry
  commentId: T:Fusee.Engine.Core.Geometry
  parent: Fusee.Engine.Core
  name: Geometry
  nameWithType: Geometry
  fullName: Fusee.Engine.Core.Geometry
- uid: Fusee.Engine.Core.Geometry.#ctor*
  commentId: Overload:Fusee.Engine.Core.Geometry.#ctor
  name: Geometry
  nameWithType: Geometry.Geometry
  fullName: Fusee.Engine.Core.Geometry.Geometry
- uid: Fusee.Engine.Core.Geometry.AddVertex*
  commentId: Overload:Fusee.Engine.Core.Geometry.AddVertex
  name: AddVertex
  nameWithType: Geometry.AddVertex
  fullName: Fusee.Engine.Core.Geometry.AddVertex
- uid: Fusee.Math.Core.double3
  commentId: T:Fusee.Math.Core.double3
  parent: Fusee.Math.Core
  name: double3
  nameWithType: double3
  fullName: Fusee.Math.Core.double3
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Fusee.Math.Core
  commentId: N:Fusee.Math.Core
  name: Fusee.Math.Core
  nameWithType: Fusee.Math.Core
  fullName: Fusee.Math.Core
- uid: Fusee.Engine.Core.Geometry.TexCoords
  commentId: P:Fusee.Engine.Core.Geometry.TexCoords
  isExternal: true
- uid: Fusee.Engine.Core.Geometry.AddTexCoord*
  commentId: Overload:Fusee.Engine.Core.Geometry.AddTexCoord
  name: AddTexCoord
  nameWithType: Geometry.AddTexCoord
  fullName: Fusee.Engine.Core.Geometry.AddTexCoord
- uid: Fusee.Math.Core.double2
  commentId: T:Fusee.Math.Core.double2
  parent: Fusee.Math.Core
  name: double2
  nameWithType: double2
  fullName: Fusee.Math.Core.double2
- uid: Fusee.Engine.Core.Geometry.Normals
  commentId: P:Fusee.Engine.Core.Geometry.Normals
  isExternal: true
- uid: Fusee.Engine.Core.Geometry.AddNormal*
  commentId: Overload:Fusee.Engine.Core.Geometry.AddNormal
  name: AddNormal
  nameWithType: Geometry.AddNormal
  fullName: Fusee.Engine.Core.Geometry.AddNormal
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
- uid: Fusee.Engine.Core.Geometry.AddFace*
  commentId: Overload:Fusee.Engine.Core.Geometry.AddFace
  name: AddFace
  nameWithType: Geometry.AddFace
  fullName: Fusee.Engine.Core.Geometry.AddFace
- uid: System.Int32[]
  isExternal: true
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  nameWithType.vb: Int32()
  fullName.vb: System.Int32()
  name.vb: Int32()
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Fusee.Engine.Core.Geometry.HasNormals*
  commentId: Overload:Fusee.Engine.Core.Geometry.HasNormals
  name: HasNormals
  nameWithType: Geometry.HasNormals
  fullName: Fusee.Engine.Core.Geometry.HasNormals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Fusee.Engine.Core.Geometry.HasTexCoords*
  commentId: Overload:Fusee.Engine.Core.Geometry.HasTexCoords
  name: HasTexCoords
  nameWithType: Geometry.HasTexCoords
  fullName: Fusee.Engine.Core.Geometry.HasTexCoords
- uid: Fusee.Engine.Core.Geometry.GetAllFacesContainingVertex*
  commentId: Overload:Fusee.Engine.Core.Geometry.GetAllFacesContainingVertex
  name: GetAllFacesContainingVertex
  nameWithType: Geometry.GetAllFacesContainingVertex
  fullName: Fusee.Engine.Core.Geometry.GetAllFacesContainingVertex
- uid: System.Collections.Generic.IList{System.Int32}
  commentId: T:System.Collections.Generic.IList{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Int32>
  nameWithType: IList<Int32>
  fullName: System.Collections.Generic.IList<System.Int32>
  nameWithType.vb: IList(Of Int32)
  fullName.vb: System.Collections.Generic.IList(Of System.Int32)
  name.vb: IList(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Fusee.Engine.Core.Geometry.CalcFaceNormal*
  commentId: Overload:Fusee.Engine.Core.Geometry.CalcFaceNormal
  name: CalcFaceNormal
  nameWithType: Geometry.CalcFaceNormal
  fullName: Fusee.Engine.Core.Geometry.CalcFaceNormal
- uid: Fusee.Engine.Core.Face
  commentId: T:Fusee.Engine.Core.Face
  parent: Fusee.Engine.Core
  name: Face
  nameWithType: Face
  fullName: Fusee.Engine.Core.Face
- uid: Fusee.Engine.Core.Geometry.CreateNormals*
  commentId: Overload:Fusee.Engine.Core.Geometry.CreateNormals
  name: CreateNormals
  nameWithType: Geometry.CreateNormals
  fullName: Fusee.Engine.Core.Geometry.CreateNormals
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Fusee.Engine.Core.Geometry.ToMesh*
  commentId: Overload:Fusee.Engine.Core.Geometry.ToMesh
  name: ToMesh
  nameWithType: Geometry.ToMesh
  fullName: Fusee.Engine.Core.Geometry.ToMesh

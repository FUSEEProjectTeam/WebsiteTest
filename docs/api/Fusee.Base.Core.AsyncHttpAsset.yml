### YamlMime:ManagedReference
items:
- uid: Fusee.Base.Core.AsyncHttpAsset
  commentId: T:Fusee.Base.Core.AsyncHttpAsset
  id: AsyncHttpAsset
  parent: Fusee.Base.Core
  children:
  - Fusee.Base.Core.AsyncHttpAsset.#ctor(System.String,System.Type,System.Boolean)
  - Fusee.Base.Core.AsyncHttpAsset.#ctor(System.String,System.Type,System.EventHandler,System.EventHandler,System.Boolean)
  - Fusee.Base.Core.AsyncHttpAsset.AssetHandlers
  - Fusee.Base.Core.AsyncHttpAsset.Content
  - Fusee.Base.Core.AsyncHttpAsset.Id
  - Fusee.Base.Core.AsyncHttpAsset.onDone
  - Fusee.Base.Core.AsyncHttpAsset.onFail
  - Fusee.Base.Core.AsyncHttpAsset.RegisterTypeHandler(Fusee.Base.Core.AsyncAssetHandler)
  - Fusee.Base.Core.AsyncHttpAsset.RegisterTypeHandler(System.Type,Fusee.Base.Core.AsyncAssetDecoder)
  - Fusee.Base.Core.AsyncHttpAsset.StartLoad
  - Fusee.Base.Core.AsyncHttpAsset.State
  - Fusee.Base.Core.AsyncHttpAsset.Type
  langs:
  - csharp
  - vb
  name: AsyncHttpAsset
  nameWithType: AsyncHttpAsset
  fullName: Fusee.Base.Core.AsyncHttpAsset
  type: Class
  source:
    id: AsyncHttpAsset
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Core\AsyncHttpAsset.cs
    startLine: 10
  assemblies:
  - Fusee.Base.Core
  namespace: Fusee.Base.Core
  summary: "\nClass to load data over HTTP asynchronously and process it according to AsyncAssetHandlers.\n"
  example: []
  syntax:
    content: public class AsyncHttpAsset
    content.vb: Public Class AsyncHttpAsset
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Fusee.Base.Core.AsyncHttpAsset.AssetHandlers
  commentId: P:Fusee.Base.Core.AsyncHttpAsset.AssetHandlers
  id: AssetHandlers
  parent: Fusee.Base.Core.AsyncHttpAsset
  langs:
  - csharp
  - vb
  name: AssetHandlers
  nameWithType: AsyncHttpAsset.AssetHandlers
  fullName: Fusee.Base.Core.AsyncHttpAsset.AssetHandlers
  type: Property
  source:
    id: AssetHandlers
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Core\AsyncHttpAsset.cs
    startLine: 29
  assemblies:
  - Fusee.Base.Core
  namespace: Fusee.Base.Core
  summary: "\nThe async asset handlers.\n"
  example: []
  syntax:
    content: public static Dictionary<Type, AsyncAssetDecoder> AssetHandlers { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.Type,Fusee.Base.Core.AsyncAssetDecoder}
    content.vb: Public Shared ReadOnly Property AssetHandlers As Dictionary(Of Type, AsyncAssetDecoder)
  overload: Fusee.Base.Core.AsyncHttpAsset.AssetHandlers*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Fusee.Base.Core.AsyncHttpAsset.RegisterTypeHandler(Fusee.Base.Core.AsyncAssetHandler)
  commentId: M:Fusee.Base.Core.AsyncHttpAsset.RegisterTypeHandler(Fusee.Base.Core.AsyncAssetHandler)
  id: RegisterTypeHandler(Fusee.Base.Core.AsyncAssetHandler)
  parent: Fusee.Base.Core.AsyncHttpAsset
  langs:
  - csharp
  - vb
  name: RegisterTypeHandler(AsyncAssetHandler)
  nameWithType: AsyncHttpAsset.RegisterTypeHandler(AsyncAssetHandler)
  fullName: Fusee.Base.Core.AsyncHttpAsset.RegisterTypeHandler(Fusee.Base.Core.AsyncAssetHandler)
  type: Method
  source:
    id: RegisterTypeHandler
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Core\AsyncHttpAsset.cs
    startLine: 35
  assemblies:
  - Fusee.Base.Core
  namespace: Fusee.Base.Core
  summary: "\nRegister an AsyncAssetHandler.\n"
  example: []
  syntax:
    content: public static void RegisterTypeHandler(AsyncAssetHandler assetHandler)
    parameters:
    - id: assetHandler
      type: Fusee.Base.Core.AsyncAssetHandler
      description: ''
    content.vb: Public Shared Sub RegisterTypeHandler(assetHandler As AsyncAssetHandler)
  overload: Fusee.Base.Core.AsyncHttpAsset.RegisterTypeHandler*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Base.Core.AsyncHttpAsset.RegisterTypeHandler(System.Type,Fusee.Base.Core.AsyncAssetDecoder)
  commentId: M:Fusee.Base.Core.AsyncHttpAsset.RegisterTypeHandler(System.Type,Fusee.Base.Core.AsyncAssetDecoder)
  id: RegisterTypeHandler(System.Type,Fusee.Base.Core.AsyncAssetDecoder)
  parent: Fusee.Base.Core.AsyncHttpAsset
  langs:
  - csharp
  - vb
  name: RegisterTypeHandler(Type, AsyncAssetDecoder)
  nameWithType: AsyncHttpAsset.RegisterTypeHandler(Type, AsyncAssetDecoder)
  fullName: Fusee.Base.Core.AsyncHttpAsset.RegisterTypeHandler(System.Type, Fusee.Base.Core.AsyncAssetDecoder)
  type: Method
  source:
    id: RegisterTypeHandler
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Core\AsyncHttpAsset.cs
    startLine: 45
  assemblies:
  - Fusee.Base.Core
  namespace: Fusee.Base.Core
  summary: "\nRegister an AsyncAssetDecoder for a certain Type.\n"
  example: []
  syntax:
    content: public static void RegisterTypeHandler(Type type, AsyncAssetDecoder asyncAssetDecoder)
    parameters:
    - id: type
      type: System.Type
      description: ''
    - id: asyncAssetDecoder
      type: Fusee.Base.Core.AsyncAssetDecoder
      description: ''
    content.vb: Public Shared Sub RegisterTypeHandler(type As Type, asyncAssetDecoder As AsyncAssetDecoder)
  overload: Fusee.Base.Core.AsyncHttpAsset.RegisterTypeHandler*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Base.Core.AsyncHttpAsset.Id
  commentId: P:Fusee.Base.Core.AsyncHttpAsset.Id
  id: Id
  parent: Fusee.Base.Core.AsyncHttpAsset
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: AsyncHttpAsset.Id
  fullName: Fusee.Base.Core.AsyncHttpAsset.Id
  type: Property
  source:
    id: Id
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Core\AsyncHttpAsset.cs
    startLine: 53
  assemblies:
  - Fusee.Base.Core
  namespace: Fusee.Base.Core
  summary: "\nId/URL of the asset.\n"
  example: []
  syntax:
    content: public string Id { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Id As String
  overload: Fusee.Base.Core.AsyncHttpAsset.Id*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Base.Core.AsyncHttpAsset.Type
  commentId: P:Fusee.Base.Core.AsyncHttpAsset.Type
  id: Type
  parent: Fusee.Base.Core.AsyncHttpAsset
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: AsyncHttpAsset.Type
  fullName: Fusee.Base.Core.AsyncHttpAsset.Type
  type: Property
  source:
    id: Type
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Core\AsyncHttpAsset.cs
    startLine: 58
  assemblies:
  - Fusee.Base.Core
  namespace: Fusee.Base.Core
  summary: "\nType of the asset.\n"
  example: []
  syntax:
    content: public Type Type { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public ReadOnly Property Type As Type
  overload: Fusee.Base.Core.AsyncHttpAsset.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Base.Core.AsyncHttpAsset.Content
  commentId: P:Fusee.Base.Core.AsyncHttpAsset.Content
  id: Content
  parent: Fusee.Base.Core.AsyncHttpAsset
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: AsyncHttpAsset.Content
  fullName: Fusee.Base.Core.AsyncHttpAsset.Content
  type: Property
  source:
    id: Content
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Core\AsyncHttpAsset.cs
    startLine: 63
  assemblies:
  - Fusee.Base.Core
  namespace: Fusee.Base.Core
  summary: "\nContent of the asset.\n"
  example: []
  syntax:
    content: public object Content { get; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public ReadOnly Property Content As Object
  overload: Fusee.Base.Core.AsyncHttpAsset.Content*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Base.Core.AsyncHttpAsset.State
  commentId: P:Fusee.Base.Core.AsyncHttpAsset.State
  id: State
  parent: Fusee.Base.Core.AsyncHttpAsset
  langs:
  - csharp
  - vb
  name: State
  nameWithType: AsyncHttpAsset.State
  fullName: Fusee.Base.Core.AsyncHttpAsset.State
  type: Property
  source:
    id: State
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Core\AsyncHttpAsset.cs
    startLine: 68
  assemblies:
  - Fusee.Base.Core
  namespace: Fusee.Base.Core
  summary: "\nState of the asset.\n"
  example: []
  syntax:
    content: public AsyncAssetState State { get; set; }
    parameters: []
    return:
      type: Fusee.Base.Core.AsyncAssetState
    content.vb: Public Property State As AsyncAssetState
  overload: Fusee.Base.Core.AsyncHttpAsset.State*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Base.Core.AsyncHttpAsset.onDone
  commentId: E:Fusee.Base.Core.AsyncHttpAsset.onDone
  id: onDone
  parent: Fusee.Base.Core.AsyncHttpAsset
  langs:
  - csharp
  - vb
  name: onDone
  nameWithType: AsyncHttpAsset.onDone
  fullName: Fusee.Base.Core.AsyncHttpAsset.onDone
  type: Event
  source:
    id: onDone
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Core\AsyncHttpAsset.cs
    startLine: 73
  assemblies:
  - Fusee.Base.Core
  namespace: Fusee.Base.Core
  summary: "\nEventHandler for when downloading and processing is done.\n"
  example: []
  syntax:
    content: public event EventHandler onDone
    return:
      type: System.EventHandler
    content.vb: Public Event onDone As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Base.Core.AsyncHttpAsset.onFail
  commentId: E:Fusee.Base.Core.AsyncHttpAsset.onFail
  id: onFail
  parent: Fusee.Base.Core.AsyncHttpAsset
  langs:
  - csharp
  - vb
  name: onFail
  nameWithType: AsyncHttpAsset.onFail
  fullName: Fusee.Base.Core.AsyncHttpAsset.onFail
  type: Event
  source:
    id: onFail
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Core\AsyncHttpAsset.cs
    startLine: 78
  assemblies:
  - Fusee.Base.Core
  namespace: Fusee.Base.Core
  summary: "\nEventHandler for when either downloading or processing fails.\n"
  example: []
  syntax:
    content: public event EventHandler onFail
    return:
      type: System.EventHandler
    content.vb: Public Event onFail As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Base.Core.AsyncHttpAsset.#ctor(System.String,System.Type,System.Boolean)
  commentId: M:Fusee.Base.Core.AsyncHttpAsset.#ctor(System.String,System.Type,System.Boolean)
  id: '#ctor(System.String,System.Type,System.Boolean)'
  parent: Fusee.Base.Core.AsyncHttpAsset
  langs:
  - csharp
  - vb
  name: AsyncHttpAsset(String, Type, Boolean)
  nameWithType: AsyncHttpAsset.AsyncHttpAsset(String, Type, Boolean)
  fullName: Fusee.Base.Core.AsyncHttpAsset.AsyncHttpAsset(System.String, System.Type, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Core\AsyncHttpAsset.cs
    startLine: 86
  assemblies:
  - Fusee.Base.Core
  namespace: Fusee.Base.Core
  summary: "\n\n"
  example: []
  syntax:
    content: public AsyncHttpAsset(string id, Type type = null, bool startLoad = true)
    parameters:
    - id: id
      type: System.String
      description: ''
    - id: type
      type: System.Type
      description: ''
    - id: startLoad
      type: System.Boolean
      description: If true, starts loading immediately, otherwise call StartGet() to start loading the asset.
    content.vb: Public Sub New(id As String, type As Type = Nothing, startLoad As Boolean = True)
  overload: Fusee.Base.Core.AsyncHttpAsset.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Base.Core.AsyncHttpAsset.#ctor(System.String,System.Type,System.EventHandler,System.EventHandler,System.Boolean)
  commentId: M:Fusee.Base.Core.AsyncHttpAsset.#ctor(System.String,System.Type,System.EventHandler,System.EventHandler,System.Boolean)
  id: '#ctor(System.String,System.Type,System.EventHandler,System.EventHandler,System.Boolean)'
  parent: Fusee.Base.Core.AsyncHttpAsset
  langs:
  - csharp
  - vb
  name: AsyncHttpAsset(String, Type, EventHandler, EventHandler, Boolean)
  nameWithType: AsyncHttpAsset.AsyncHttpAsset(String, Type, EventHandler, EventHandler, Boolean)
  fullName: Fusee.Base.Core.AsyncHttpAsset.AsyncHttpAsset(System.String, System.Type, System.EventHandler, System.EventHandler, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Core\AsyncHttpAsset.cs
    startLine: 117
  assemblies:
  - Fusee.Base.Core
  namespace: Fusee.Base.Core
  summary: "\n\n"
  example: []
  syntax:
    content: public AsyncHttpAsset(string id, Type type, EventHandler onDone, EventHandler onFail, bool startLoad = true)
    parameters:
    - id: id
      type: System.String
      description: ''
    - id: type
      type: System.Type
      description: ''
    - id: onDone
      type: System.EventHandler
      description: ''
    - id: onFail
      type: System.EventHandler
      description: ''
    - id: startLoad
      type: System.Boolean
      description: If true, starts loading immediately, otherwise call StartGet() to start loading the asset.
    content.vb: Public Sub New(id As String, type As Type, onDone As EventHandler, onFail As EventHandler, startLoad As Boolean = True)
  overload: Fusee.Base.Core.AsyncHttpAsset.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Base.Core.AsyncHttpAsset.StartLoad
  commentId: M:Fusee.Base.Core.AsyncHttpAsset.StartLoad
  id: StartLoad
  parent: Fusee.Base.Core.AsyncHttpAsset
  langs:
  - csharp
  - vb
  name: StartLoad()
  nameWithType: AsyncHttpAsset.StartLoad()
  fullName: Fusee.Base.Core.AsyncHttpAsset.StartLoad()
  type: Method
  source:
    id: StartLoad
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Core\AsyncHttpAsset.cs
    startLine: 136
  assemblies:
  - Fusee.Base.Core
  namespace: Fusee.Base.Core
  summary: "\nStarts to load the assets.\n"
  example: []
  syntax:
    content: public void StartLoad()
    content.vb: Public Sub StartLoad
  overload: Fusee.Base.Core.AsyncHttpAsset.StartLoad*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Fusee.Base.Core
  commentId: N:Fusee.Base.Core
  name: Fusee.Base.Core
  nameWithType: Fusee.Base.Core
  fullName: Fusee.Base.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Fusee.Base.Core.AsyncHttpAsset.AssetHandlers*
  commentId: Overload:Fusee.Base.Core.AsyncHttpAsset.AssetHandlers
  name: AssetHandlers
  nameWithType: AsyncHttpAsset.AssetHandlers
  fullName: Fusee.Base.Core.AsyncHttpAsset.AssetHandlers
- uid: System.Collections.Generic.Dictionary{System.Type,Fusee.Base.Core.AsyncAssetDecoder}
  commentId: T:System.Collections.Generic.Dictionary{System.Type,Fusee.Base.Core.AsyncAssetDecoder}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Type, AsyncAssetDecoder>
  nameWithType: Dictionary<Type, AsyncAssetDecoder>
  fullName: System.Collections.Generic.Dictionary<System.Type, Fusee.Base.Core.AsyncAssetDecoder>
  nameWithType.vb: Dictionary(Of Type, AsyncAssetDecoder)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.Type, Fusee.Base.Core.AsyncAssetDecoder)
  name.vb: Dictionary(Of Type, AsyncAssetDecoder)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Fusee.Base.Core.AsyncAssetDecoder
    name: AsyncAssetDecoder
    nameWithType: AsyncAssetDecoder
    fullName: Fusee.Base.Core.AsyncAssetDecoder
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Fusee.Base.Core.AsyncAssetDecoder
    name: AsyncAssetDecoder
    nameWithType: AsyncAssetDecoder
    fullName: Fusee.Base.Core.AsyncAssetDecoder
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Fusee.Base.Core.AsyncHttpAsset.RegisterTypeHandler*
  commentId: Overload:Fusee.Base.Core.AsyncHttpAsset.RegisterTypeHandler
  name: RegisterTypeHandler
  nameWithType: AsyncHttpAsset.RegisterTypeHandler
  fullName: Fusee.Base.Core.AsyncHttpAsset.RegisterTypeHandler
- uid: Fusee.Base.Core.AsyncAssetHandler
  commentId: T:Fusee.Base.Core.AsyncAssetHandler
  parent: Fusee.Base.Core
  name: AsyncAssetHandler
  nameWithType: AsyncAssetHandler
  fullName: Fusee.Base.Core.AsyncAssetHandler
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Fusee.Base.Core.AsyncAssetDecoder
  commentId: T:Fusee.Base.Core.AsyncAssetDecoder
  parent: Fusee.Base.Core
  name: AsyncAssetDecoder
  nameWithType: AsyncAssetDecoder
  fullName: Fusee.Base.Core.AsyncAssetDecoder
- uid: Fusee.Base.Core.AsyncHttpAsset.Id*
  commentId: Overload:Fusee.Base.Core.AsyncHttpAsset.Id
  name: Id
  nameWithType: AsyncHttpAsset.Id
  fullName: Fusee.Base.Core.AsyncHttpAsset.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Fusee.Base.Core.AsyncHttpAsset.Type*
  commentId: Overload:Fusee.Base.Core.AsyncHttpAsset.Type
  name: Type
  nameWithType: AsyncHttpAsset.Type
  fullName: Fusee.Base.Core.AsyncHttpAsset.Type
- uid: Fusee.Base.Core.AsyncHttpAsset.Content*
  commentId: Overload:Fusee.Base.Core.AsyncHttpAsset.Content
  name: Content
  nameWithType: AsyncHttpAsset.Content
  fullName: Fusee.Base.Core.AsyncHttpAsset.Content
- uid: Fusee.Base.Core.AsyncHttpAsset.State*
  commentId: Overload:Fusee.Base.Core.AsyncHttpAsset.State
  name: State
  nameWithType: AsyncHttpAsset.State
  fullName: Fusee.Base.Core.AsyncHttpAsset.State
- uid: Fusee.Base.Core.AsyncAssetState
  commentId: T:Fusee.Base.Core.AsyncAssetState
  parent: Fusee.Base.Core
  name: AsyncAssetState
  nameWithType: AsyncAssetState
  fullName: Fusee.Base.Core.AsyncAssetState
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: Fusee.Base.Core.AsyncHttpAsset.#ctor*
  commentId: Overload:Fusee.Base.Core.AsyncHttpAsset.#ctor
  name: AsyncHttpAsset
  nameWithType: AsyncHttpAsset.AsyncHttpAsset
  fullName: Fusee.Base.Core.AsyncHttpAsset.AsyncHttpAsset
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Fusee.Base.Core.AsyncHttpAsset.StartLoad*
  commentId: Overload:Fusee.Base.Core.AsyncHttpAsset.StartLoad
  name: StartLoad
  nameWithType: AsyncHttpAsset.StartLoad
  fullName: Fusee.Base.Core.AsyncHttpAsset.StartLoad

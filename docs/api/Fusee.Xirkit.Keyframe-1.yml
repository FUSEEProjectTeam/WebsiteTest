### YamlMime:ManagedReference
items:
- uid: Fusee.Xirkit.Keyframe`1
  commentId: T:Fusee.Xirkit.Keyframe`1
  id: Keyframe`1
  parent: Fusee.Xirkit
  children:
  - Fusee.Xirkit.Keyframe`1.#ctor(System.Single,`0)
  - Fusee.Xirkit.Keyframe`1.Time
  - Fusee.Xirkit.Keyframe`1.Value
  langs:
  - csharp
  - vb
  name: Keyframe<TValue>
  nameWithType: Keyframe<TValue>
  fullName: Fusee.Xirkit.Keyframe<TValue>
  type: Class
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xirkit/Keyframe.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Keyframe
    path: src/Fusee/src/Xirkit/Keyframe.cs
    startLine: 6
  assemblies:
  - Fusee.Xirkit
  namespace: Fusee.Xirkit
  summary: "\nThis Class represents a Keyframe it has a time and a Value.\n"
  example: []
  syntax:
    content: public class Keyframe<TValue>
    typeParameters:
    - id: TValue
      description: The type of the value.
    content.vb: Public Class Keyframe(Of TValue)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: Keyframe(Of TValue)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Fusee.Xirkit.Keyframe(Of TValue)
  name.vb: Keyframe(Of TValue)
- uid: Fusee.Xirkit.Keyframe`1.#ctor(System.Single,`0)
  commentId: M:Fusee.Xirkit.Keyframe`1.#ctor(System.Single,`0)
  id: '#ctor(System.Single,`0)'
  parent: Fusee.Xirkit.Keyframe`1
  langs:
  - csharp
  - vb
  name: Keyframe(Single, TValue)
  nameWithType: Keyframe<TValue>.Keyframe(Single, TValue)
  fullName: Fusee.Xirkit.Keyframe<TValue>.Keyframe(System.Single, TValue)
  type: Constructor
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xirkit/Keyframe.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: .ctor
    path: src/Fusee/src/Xirkit/Keyframe.cs
    startLine: 16
  assemblies:
  - Fusee.Xirkit
  namespace: Fusee.Xirkit
  summary: "\nInitializes a new instance of the <xref href=\"Fusee.Xirkit.Keyframe%601\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public Keyframe(float time, TValue value)
    parameters:
    - id: time
      type: System.Single
      description: The time of the keyframe.
    - id: value
      type: '{TValue}'
      description: The value of the keyframe.
    content.vb: Public Sub New(time As Single, value As TValue)
  overload: Fusee.Xirkit.Keyframe`1.#ctor*
  nameWithType.vb: Keyframe(Of TValue).Keyframe(Single, TValue)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Fusee.Xirkit.Keyframe(Of TValue).Keyframe(System.Single, TValue)
- uid: Fusee.Xirkit.Keyframe`1.Time
  commentId: P:Fusee.Xirkit.Keyframe`1.Time
  id: Time
  parent: Fusee.Xirkit.Keyframe`1
  langs:
  - csharp
  - vb
  name: Time
  nameWithType: Keyframe<TValue>.Time
  fullName: Fusee.Xirkit.Keyframe<TValue>.Time
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xirkit/Keyframe.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Time
    path: src/Fusee/src/Xirkit/Keyframe.cs
    startLine: 28
  assemblies:
  - Fusee.Xirkit
  namespace: Fusee.Xirkit
  summary: "\nGets and sets the time.\n"
  example: []
  syntax:
    content: public float Time { get; set; }
    parameters: []
    return:
      type: System.Single
      description: "\nThe new time.\n"
    content.vb: Public Property Time As Single
  overload: Fusee.Xirkit.Keyframe`1.Time*
  nameWithType.vb: Keyframe(Of TValue).Time
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Fusee.Xirkit.Keyframe(Of TValue).Time
- uid: Fusee.Xirkit.Keyframe`1.Value
  commentId: P:Fusee.Xirkit.Keyframe`1.Value
  id: Value
  parent: Fusee.Xirkit.Keyframe`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Keyframe<TValue>.Value
  fullName: Fusee.Xirkit.Keyframe<TValue>.Value
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xirkit/Keyframe.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Value
    path: src/Fusee/src/Xirkit/Keyframe.cs
    startLine: 44
  assemblies:
  - Fusee.Xirkit
  namespace: Fusee.Xirkit
  summary: "\nGets and sets the value.\n"
  example: []
  syntax:
    content: public TValue Value { get; set; }
    parameters: []
    return:
      type: '{TValue}'
      description: "\nThe new value.\n"
    content.vb: Public Property Value As TValue
  overload: Fusee.Xirkit.Keyframe`1.Value*
  nameWithType.vb: Keyframe(Of TValue).Value
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Fusee.Xirkit.Keyframe(Of TValue).Value
references:
- uid: Fusee.Xirkit
  commentId: N:Fusee.Xirkit
  name: Fusee.Xirkit
  nameWithType: Fusee.Xirkit
  fullName: Fusee.Xirkit
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Fusee.Xirkit.Keyframe`1
  commentId: T:Fusee.Xirkit.Keyframe`1
  name: Keyframe<TValue>
  nameWithType: Keyframe<TValue>
  fullName: Fusee.Xirkit.Keyframe<TValue>
  nameWithType.vb: Keyframe(Of TValue)
  fullName.vb: Fusee.Xirkit.Keyframe(Of TValue)
  name.vb: Keyframe(Of TValue)
  spec.csharp:
  - uid: Fusee.Xirkit.Keyframe`1
    name: Keyframe
    nameWithType: Keyframe
    fullName: Fusee.Xirkit.Keyframe
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Fusee.Xirkit.Keyframe`1
    name: Keyframe
    nameWithType: Keyframe
    fullName: Fusee.Xirkit.Keyframe
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xirkit.Keyframe`1.#ctor*
  commentId: Overload:Fusee.Xirkit.Keyframe`1.#ctor
  name: Keyframe
  nameWithType: Keyframe<TValue>.Keyframe
  fullName: Fusee.Xirkit.Keyframe<TValue>.Keyframe
  nameWithType.vb: Keyframe(Of TValue).Keyframe
  fullName.vb: Fusee.Xirkit.Keyframe(Of TValue).Keyframe
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Fusee.Xirkit.Keyframe`1.Time*
  commentId: Overload:Fusee.Xirkit.Keyframe`1.Time
  name: Time
  nameWithType: Keyframe<TValue>.Time
  fullName: Fusee.Xirkit.Keyframe<TValue>.Time
  nameWithType.vb: Keyframe(Of TValue).Time
  fullName.vb: Fusee.Xirkit.Keyframe(Of TValue).Time
- uid: Fusee.Xirkit.Keyframe`1.Value*
  commentId: Overload:Fusee.Xirkit.Keyframe`1.Value
  name: Value
  nameWithType: Keyframe<TValue>.Value
  fullName: Fusee.Xirkit.Keyframe<TValue>.Value
  nameWithType.vb: Keyframe(Of TValue).Value
  fullName.vb: Fusee.Xirkit.Keyframe(Of TValue).Value

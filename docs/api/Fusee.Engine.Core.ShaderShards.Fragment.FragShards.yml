### YamlMime:ManagedReference
items:
- uid: Fusee.Engine.Core.ShaderShards.Fragment.FragShards
  commentId: T:Fusee.Engine.Core.ShaderShards.Fragment.FragShards
  id: FragShards
  parent: Fusee.Engine.Core.ShaderShards.Fragment
  children:
  - Fusee.Engine.Core.ShaderShards.Fragment.FragShards.SurfOutBody_BRDF
  - Fusee.Engine.Core.ShaderShards.Fragment.FragShards.SurfOutBody_Color
  - Fusee.Engine.Core.ShaderShards.Fragment.FragShards.SurfOutBody_GBuffer
  - Fusee.Engine.Core.ShaderShards.Fragment.FragShards.SurfOutBody_SpecularStd
  - Fusee.Engine.Core.ShaderShards.Fragment.FragShards.SurfOutBody_Textures(Fusee.Engine.Core.ShaderShards.LightingSetupFlags)
  langs:
  - csharp
  - vb
  name: FragShards
  nameWithType: FragShards
  fullName: Fusee.Engine.Core.ShaderShards.Fragment.FragShards
  type: Class
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/ShaderShards/Fragment/FragShards.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: FragShards
    path: src/Fusee/src/Engine/Core/ShaderShards/Fragment/FragShards.cs
    startLine: 8
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.ShaderShards.Fragment
  summary: "\nContains pre-defined Shader Shards = \ncontent of the Fragment Shader&apos;s method that lets us change values of the &quot;out&quot;-struct that is used for the lighting calculation. \n"
  example: []
  syntax:
    content: public static class FragShards
    content.vb: Public Module FragShards
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Fusee.Engine.Core.ShaderShards.Fragment.FragShards.SurfOutBody_Color
  commentId: F:Fusee.Engine.Core.ShaderShards.Fragment.FragShards.SurfOutBody_Color
  id: SurfOutBody_Color
  parent: Fusee.Engine.Core.ShaderShards.Fragment.FragShards
  langs:
  - csharp
  - vb
  name: SurfOutBody_Color
  nameWithType: FragShards.SurfOutBody_Color
  fullName: Fusee.Engine.Core.ShaderShards.Fragment.FragShards.SurfOutBody_Color
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/ShaderShards/Fragment/FragShards.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: SurfOutBody_Color
    path: src/Fusee/src/Engine/Core/ShaderShards/Fragment/FragShards.cs
    startLine: 13
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.ShaderShards.Fragment
  summary: "\nReturns a default method body for a diffuse-specular lighting calculation.\n"
  example: []
  syntax:
    content: public static readonly List<string> SurfOutBody_Color
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Shared ReadOnly SurfOutBody_Color As List(Of String)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Fusee.Engine.Core.ShaderShards.Fragment.FragShards.SurfOutBody_SpecularStd
  commentId: F:Fusee.Engine.Core.ShaderShards.Fragment.FragShards.SurfOutBody_SpecularStd
  id: SurfOutBody_SpecularStd
  parent: Fusee.Engine.Core.ShaderShards.Fragment.FragShards
  langs:
  - csharp
  - vb
  name: SurfOutBody_SpecularStd
  nameWithType: FragShards.SurfOutBody_SpecularStd
  fullName: Fusee.Engine.Core.ShaderShards.Fragment.FragShards.SurfOutBody_SpecularStd
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/ShaderShards/Fragment/FragShards.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: SurfOutBody_SpecularStd
    path: src/Fusee/src/Engine/Core/ShaderShards/Fragment/FragShards.cs
    startLine: 22
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.ShaderShards.Fragment
  summary: "\nReturns a default method body for a diffuse-specular lighting calculation.\n"
  example: []
  syntax:
    content: public static readonly List<string> SurfOutBody_SpecularStd
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Shared ReadOnly SurfOutBody_SpecularStd As List(Of String)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Fusee.Engine.Core.ShaderShards.Fragment.FragShards.SurfOutBody_GBuffer
  commentId: F:Fusee.Engine.Core.ShaderShards.Fragment.FragShards.SurfOutBody_GBuffer
  id: SurfOutBody_GBuffer
  parent: Fusee.Engine.Core.ShaderShards.Fragment.FragShards
  langs:
  - csharp
  - vb
  name: SurfOutBody_GBuffer
  nameWithType: FragShards.SurfOutBody_GBuffer
  fullName: Fusee.Engine.Core.ShaderShards.Fragment.FragShards.SurfOutBody_GBuffer
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/ShaderShards/Fragment/FragShards.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: SurfOutBody_GBuffer
    path: src/Fusee/src/Engine/Core/ShaderShards/Fragment/FragShards.cs
    startLine: 33
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.ShaderShards.Fragment
  summary: "\nReturns a default method body for rendering into a G-Buffer.\n"
  example: []
  syntax:
    content: public static readonly List<string> SurfOutBody_GBuffer
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Shared ReadOnly SurfOutBody_GBuffer As List(Of String)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Fusee.Engine.Core.ShaderShards.Fragment.FragShards.SurfOutBody_BRDF
  commentId: F:Fusee.Engine.Core.ShaderShards.Fragment.FragShards.SurfOutBody_BRDF
  id: SurfOutBody_BRDF
  parent: Fusee.Engine.Core.ShaderShards.Fragment.FragShards
  langs:
  - csharp
  - vb
  name: SurfOutBody_BRDF
  nameWithType: FragShards.SurfOutBody_BRDF
  fullName: Fusee.Engine.Core.ShaderShards.Fragment.FragShards.SurfOutBody_BRDF
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/ShaderShards/Fragment/FragShards.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: SurfOutBody_BRDF
    path: src/Fusee/src/Engine/Core/ShaderShards/Fragment/FragShards.cs
    startLine: 44
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.ShaderShards.Fragment
  summary: "\nReturns a default method body for a physically based diffuse-specular lighting calculation.\n"
  example: []
  syntax:
    content: public static readonly List<string> SurfOutBody_BRDF
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Shared ReadOnly SurfOutBody_BRDF As List(Of String)
  modifiers.csharp:
  - public
  - static
  - readonly
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Fusee.Engine.Core.ShaderShards.Fragment.FragShards.SurfOutBody_Textures(Fusee.Engine.Core.ShaderShards.LightingSetupFlags)
  commentId: M:Fusee.Engine.Core.ShaderShards.Fragment.FragShards.SurfOutBody_Textures(Fusee.Engine.Core.ShaderShards.LightingSetupFlags)
  id: SurfOutBody_Textures(Fusee.Engine.Core.ShaderShards.LightingSetupFlags)
  parent: Fusee.Engine.Core.ShaderShards.Fragment.FragShards
  langs:
  - csharp
  - vb
  name: SurfOutBody_Textures(LightingSetupFlags)
  nameWithType: FragShards.SurfOutBody_Textures(LightingSetupFlags)
  fullName: Fusee.Engine.Core.ShaderShards.Fragment.FragShards.SurfOutBody_Textures(Fusee.Engine.Core.ShaderShards.LightingSetupFlags)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/ShaderShards/Fragment/FragShards.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: SurfOutBody_Textures
    path: src/Fusee/src/Engine/Core/ShaderShards/Fragment/FragShards.cs
    startLine: 59
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.ShaderShards.Fragment
  summary: "\nReturns a default method body for a diffuse-specular lighting calculation that uses textures (albedo and normal).\n<param name=\"lightingSetup\">The lighting setup on which basis the appropriate lighting parameters are chosen.</param>\n"
  example: []
  syntax:
    content: public static List<string> SurfOutBody_Textures(LightingSetupFlags lightingSetup)
    parameters:
    - id: lightingSetup
      type: Fusee.Engine.Core.ShaderShards.LightingSetupFlags
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Shared Function SurfOutBody_Textures(lightingSetup As LightingSetupFlags) As List(Of String)
  overload: Fusee.Engine.Core.ShaderShards.Fragment.FragShards.SurfOutBody_Textures*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Fusee.Engine.Core.ShaderShards.Fragment
  commentId: N:Fusee.Engine.Core.ShaderShards.Fragment
  name: Fusee.Engine.Core.ShaderShards.Fragment
  nameWithType: Fusee.Engine.Core.ShaderShards.Fragment
  fullName: Fusee.Engine.Core.ShaderShards.Fragment
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Fusee.Engine.Core.ShaderShards.Fragment.FragShards.SurfOutBody_Textures*
  commentId: Overload:Fusee.Engine.Core.ShaderShards.Fragment.FragShards.SurfOutBody_Textures
  name: SurfOutBody_Textures
  nameWithType: FragShards.SurfOutBody_Textures
  fullName: Fusee.Engine.Core.ShaderShards.Fragment.FragShards.SurfOutBody_Textures
- uid: Fusee.Engine.Core.ShaderShards.LightingSetupFlags
  commentId: T:Fusee.Engine.Core.ShaderShards.LightingSetupFlags
  parent: Fusee.Engine.Core.ShaderShards
  name: LightingSetupFlags
  nameWithType: LightingSetupFlags
  fullName: Fusee.Engine.Core.ShaderShards.LightingSetupFlags
- uid: Fusee.Engine.Core.ShaderShards
  commentId: N:Fusee.Engine.Core.ShaderShards
  name: Fusee.Engine.Core.ShaderShards
  nameWithType: Fusee.Engine.Core.ShaderShards
  fullName: Fusee.Engine.Core.ShaderShards

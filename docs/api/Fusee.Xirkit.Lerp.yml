### YamlMime:ManagedReference
items:
- uid: Fusee.Xirkit.Lerp
  commentId: T:Fusee.Xirkit.Lerp
  id: Lerp
  parent: Fusee.Xirkit
  children:
  - Fusee.Xirkit.Lerp.DoubleLerp(System.Double,System.Double,System.Single,System.Single)
  - Fusee.Xirkit.Lerp.Float2Lerp(Fusee.Math.Core.float2,Fusee.Math.Core.float2,System.Single,System.Single)
  - Fusee.Xirkit.Lerp.Float3Lerp(Fusee.Math.Core.float3,Fusee.Math.Core.float3,System.Single,System.Single)
  - Fusee.Xirkit.Lerp.Float3QuaternionSlerp(Fusee.Math.Core.float3,Fusee.Math.Core.float3,System.Single,System.Single)
  - Fusee.Xirkit.Lerp.Float4Lerp(Fusee.Math.Core.float4,Fusee.Math.Core.float4,System.Single,System.Single)
  - Fusee.Xirkit.Lerp.FloatLerp(System.Single,System.Single,System.Single,System.Single)
  - Fusee.Xirkit.Lerp.IntLerp(System.Int32,System.Int32,System.Single,System.Single)
  langs:
  - csharp
  - vb
  name: Lerp
  nameWithType: Lerp
  fullName: Fusee.Xirkit.Lerp
  type: Class
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xirkit/Lerp.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Lerp
    path: src/Fusee/src/Xirkit/Lerp.cs
    startLine: 7
  assemblies:
  - Fusee.Xirkit
  namespace: Fusee.Xirkit
  summary: "\nprovides different LerpFunctions that can be used in a channel. A Lerp Function represents a linear interpolation between 2 points in a timeline.\n"
  example: []
  syntax:
    content: public static class Lerp
    content.vb: Public Module Lerp
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Fusee.Xirkit.Lerp.DoubleLerp(System.Double,System.Double,System.Single,System.Single)
  commentId: M:Fusee.Xirkit.Lerp.DoubleLerp(System.Double,System.Double,System.Single,System.Single)
  id: DoubleLerp(System.Double,System.Double,System.Single,System.Single)
  parent: Fusee.Xirkit.Lerp
  langs:
  - csharp
  - vb
  name: DoubleLerp(Double, Double, Single, Single)
  nameWithType: Lerp.DoubleLerp(Double, Double, Single, Single)
  fullName: Fusee.Xirkit.Lerp.DoubleLerp(System.Double, System.Double, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xirkit/Lerp.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: DoubleLerp
    path: src/Fusee/src/Xirkit/Lerp.cs
    startLine: 13
  assemblies:
  - Fusee.Xirkit
  namespace: Fusee.Xirkit
  summary: "\nLerp Function for Doubles.\n"
  example: []
  syntax:
    content: public static double DoubleLerp(double val1, double val2, float time1, float time2)
    parameters:
    - id: val1
      type: System.Double
    - id: val2
      type: System.Double
    - id: time1
      type: System.Single
    - id: time2
      type: System.Single
    return:
      type: System.Double
    content.vb: Public Shared Function DoubleLerp(val1 As Double, val2 As Double, time1 As Single, time2 As Single) As Double
  overload: Fusee.Xirkit.Lerp.DoubleLerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Xirkit.Lerp.IntLerp(System.Int32,System.Int32,System.Single,System.Single)
  commentId: M:Fusee.Xirkit.Lerp.IntLerp(System.Int32,System.Int32,System.Single,System.Single)
  id: IntLerp(System.Int32,System.Int32,System.Single,System.Single)
  parent: Fusee.Xirkit.Lerp
  langs:
  - csharp
  - vb
  name: IntLerp(Int32, Int32, Single, Single)
  nameWithType: Lerp.IntLerp(Int32, Int32, Single, Single)
  fullName: Fusee.Xirkit.Lerp.IntLerp(System.Int32, System.Int32, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xirkit/Lerp.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: IntLerp
    path: src/Fusee/src/Xirkit/Lerp.cs
    startLine: 22
  assemblies:
  - Fusee.Xirkit
  namespace: Fusee.Xirkit
  summary: "\nLerp Function for Int.\n"
  example: []
  syntax:
    content: public static int IntLerp(int val1, int val2, float time1, float time2)
    parameters:
    - id: val1
      type: System.Int32
    - id: val2
      type: System.Int32
    - id: time1
      type: System.Single
    - id: time2
      type: System.Single
    return:
      type: System.Int32
    content.vb: Public Shared Function IntLerp(val1 As Integer, val2 As Integer, time1 As Single, time2 As Single) As Integer
  overload: Fusee.Xirkit.Lerp.IntLerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Xirkit.Lerp.FloatLerp(System.Single,System.Single,System.Single,System.Single)
  commentId: M:Fusee.Xirkit.Lerp.FloatLerp(System.Single,System.Single,System.Single,System.Single)
  id: FloatLerp(System.Single,System.Single,System.Single,System.Single)
  parent: Fusee.Xirkit.Lerp
  langs:
  - csharp
  - vb
  name: FloatLerp(Single, Single, Single, Single)
  nameWithType: Lerp.FloatLerp(Single, Single, Single, Single)
  fullName: Fusee.Xirkit.Lerp.FloatLerp(System.Single, System.Single, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xirkit/Lerp.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: FloatLerp
    path: src/Fusee/src/Xirkit/Lerp.cs
    startLine: 30
  assemblies:
  - Fusee.Xirkit
  namespace: Fusee.Xirkit
  summary: "\nLerp Function for Float.\n"
  example: []
  syntax:
    content: public static float FloatLerp(float val1, float val2, float time1, float time2)
    parameters:
    - id: val1
      type: System.Single
    - id: val2
      type: System.Single
    - id: time1
      type: System.Single
    - id: time2
      type: System.Single
    return:
      type: System.Single
    content.vb: Public Shared Function FloatLerp(val1 As Single, val2 As Single, time1 As Single, time2 As Single) As Single
  overload: Fusee.Xirkit.Lerp.FloatLerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Xirkit.Lerp.Float2Lerp(Fusee.Math.Core.float2,Fusee.Math.Core.float2,System.Single,System.Single)
  commentId: M:Fusee.Xirkit.Lerp.Float2Lerp(Fusee.Math.Core.float2,Fusee.Math.Core.float2,System.Single,System.Single)
  id: Float2Lerp(Fusee.Math.Core.float2,Fusee.Math.Core.float2,System.Single,System.Single)
  parent: Fusee.Xirkit.Lerp
  langs:
  - csharp
  - vb
  name: Float2Lerp(float2, float2, Single, Single)
  nameWithType: Lerp.Float2Lerp(float2, float2, Single, Single)
  fullName: Fusee.Xirkit.Lerp.Float2Lerp(Fusee.Math.Core.float2, Fusee.Math.Core.float2, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xirkit/Lerp.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Float2Lerp
    path: src/Fusee/src/Xirkit/Lerp.cs
    startLine: 38
  assemblies:
  - Fusee.Xirkit
  namespace: Fusee.Xirkit
  summary: "\nLerp Function for Float2.\n"
  example: []
  syntax:
    content: public static float2 Float2Lerp(float2 val1, float2 val2, float time1, float time2)
    parameters:
    - id: val1
      type: Fusee.Math.Core.float2
    - id: val2
      type: Fusee.Math.Core.float2
    - id: time1
      type: System.Single
    - id: time2
      type: System.Single
    return:
      type: Fusee.Math.Core.float2
    content.vb: Public Shared Function Float2Lerp(val1 As float2, val2 As float2, time1 As Single, time2 As Single) As float2
  overload: Fusee.Xirkit.Lerp.Float2Lerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Xirkit.Lerp.Float3Lerp(Fusee.Math.Core.float3,Fusee.Math.Core.float3,System.Single,System.Single)
  commentId: M:Fusee.Xirkit.Lerp.Float3Lerp(Fusee.Math.Core.float3,Fusee.Math.Core.float3,System.Single,System.Single)
  id: Float3Lerp(Fusee.Math.Core.float3,Fusee.Math.Core.float3,System.Single,System.Single)
  parent: Fusee.Xirkit.Lerp
  langs:
  - csharp
  - vb
  name: Float3Lerp(float3, float3, Single, Single)
  nameWithType: Lerp.Float3Lerp(float3, float3, Single, Single)
  fullName: Fusee.Xirkit.Lerp.Float3Lerp(Fusee.Math.Core.float3, Fusee.Math.Core.float3, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xirkit/Lerp.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Float3Lerp
    path: src/Fusee/src/Xirkit/Lerp.cs
    startLine: 49
  assemblies:
  - Fusee.Xirkit
  namespace: Fusee.Xirkit
  summary: "\nLerp Function for float3 values. Linearly interpolates the three components independently.\n"
  example: []
  syntax:
    content: public static float3 Float3Lerp(float3 val1, float3 val2, float time1, float time2)
    parameters:
    - id: val1
      type: Fusee.Math.Core.float3
    - id: val2
      type: Fusee.Math.Core.float3
    - id: time1
      type: System.Single
    - id: time2
      type: System.Single
    return:
      type: Fusee.Math.Core.float3
    content.vb: Public Shared Function Float3Lerp(val1 As float3, val2 As float3, time1 As Single, time2 As Single) As float3
  overload: Fusee.Xirkit.Lerp.Float3Lerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Xirkit.Lerp.Float3QuaternionSlerp(Fusee.Math.Core.float3,Fusee.Math.Core.float3,System.Single,System.Single)
  commentId: M:Fusee.Xirkit.Lerp.Float3QuaternionSlerp(Fusee.Math.Core.float3,Fusee.Math.Core.float3,System.Single,System.Single)
  id: Float3QuaternionSlerp(Fusee.Math.Core.float3,Fusee.Math.Core.float3,System.Single,System.Single)
  parent: Fusee.Xirkit.Lerp
  langs:
  - csharp
  - vb
  name: Float3QuaternionSlerp(float3, float3, Single, Single)
  nameWithType: Lerp.Float3QuaternionSlerp(float3, float3, Single, Single)
  fullName: Fusee.Xirkit.Lerp.Float3QuaternionSlerp(Fusee.Math.Core.float3, Fusee.Math.Core.float3, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xirkit/Lerp.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Float3QuaternionSlerp
    path: src/Fusee/src/Xirkit/Lerp.cs
    startLine: 64
  assemblies:
  - Fusee.Xirkit
  namespace: Fusee.Xirkit
  summary: "\nSlerp Function for float3 using quaternion interpolation. Useful if the given float3 values contain euler angles in Pitch(x)/Yaw(y)/Roll(z) order.\nThe euler angle set returned by this method is on the shortest spherical path between the two parameter euler angle sets.\nNote that using linear interpolation <xref href=\"Fusee.Xirkit.Lerp.Float3Lerp(Fusee.Math.Core.float3%2cFusee.Math.Core.float3%2cSystem.Single%2cSystem.Single)\" data-throw-if-not-resolved=\"false\"></xref> of angle values will NOT yield in a path lying on a great circle between the two parameters. Instead, using\nlinear interpolation, the interpolated values will describe a curve called loxodrome which spirals around the poles (due to gimbal lock). \n"
  example: []
  syntax:
    content: public static float3 Float3QuaternionSlerp(float3 val1, float3 val2, float time1, float time2)
    parameters:
    - id: val1
      type: Fusee.Math.Core.float3
    - id: val2
      type: Fusee.Math.Core.float3
    - id: time1
      type: System.Single
    - id: time2
      type: System.Single
    return:
      type: Fusee.Math.Core.float3
    content.vb: Public Shared Function Float3QuaternionSlerp(val1 As float3, val2 As float3, time1 As Single, time2 As Single) As float3
  overload: Fusee.Xirkit.Lerp.Float3QuaternionSlerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Xirkit.Lerp.Float4Lerp(Fusee.Math.Core.float4,Fusee.Math.Core.float4,System.Single,System.Single)
  commentId: M:Fusee.Xirkit.Lerp.Float4Lerp(Fusee.Math.Core.float4,Fusee.Math.Core.float4,System.Single,System.Single)
  id: Float4Lerp(Fusee.Math.Core.float4,Fusee.Math.Core.float4,System.Single,System.Single)
  parent: Fusee.Xirkit.Lerp
  langs:
  - csharp
  - vb
  name: Float4Lerp(float4, float4, Single, Single)
  nameWithType: Lerp.Float4Lerp(float4, float4, Single, Single)
  fullName: Fusee.Xirkit.Lerp.Float4Lerp(Fusee.Math.Core.float4, Fusee.Math.Core.float4, System.Single, System.Single)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xirkit/Lerp.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Float4Lerp
    path: src/Fusee/src/Xirkit/Lerp.cs
    startLine: 75
  assemblies:
  - Fusee.Xirkit
  namespace: Fusee.Xirkit
  summary: "\nLerp Function for Float4s.\n"
  example: []
  syntax:
    content: public static float4 Float4Lerp(float4 val1, float4 val2, float time1, float time2)
    parameters:
    - id: val1
      type: Fusee.Math.Core.float4
    - id: val2
      type: Fusee.Math.Core.float4
    - id: time1
      type: System.Single
    - id: time2
      type: System.Single
    return:
      type: Fusee.Math.Core.float4
    content.vb: Public Shared Function Float4Lerp(val1 As float4, val2 As float4, time1 As Single, time2 As Single) As float4
  overload: Fusee.Xirkit.Lerp.Float4Lerp*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Fusee.Xirkit
  commentId: N:Fusee.Xirkit
  name: Fusee.Xirkit
  nameWithType: Fusee.Xirkit
  fullName: Fusee.Xirkit
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Fusee.Xirkit.Lerp.DoubleLerp*
  commentId: Overload:Fusee.Xirkit.Lerp.DoubleLerp
  name: DoubleLerp
  nameWithType: Lerp.DoubleLerp
  fullName: Fusee.Xirkit.Lerp.DoubleLerp
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Fusee.Xirkit.Lerp.IntLerp*
  commentId: Overload:Fusee.Xirkit.Lerp.IntLerp
  name: IntLerp
  nameWithType: Lerp.IntLerp
  fullName: Fusee.Xirkit.Lerp.IntLerp
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Fusee.Xirkit.Lerp.FloatLerp*
  commentId: Overload:Fusee.Xirkit.Lerp.FloatLerp
  name: FloatLerp
  nameWithType: Lerp.FloatLerp
  fullName: Fusee.Xirkit.Lerp.FloatLerp
- uid: Fusee.Xirkit.Lerp.Float2Lerp*
  commentId: Overload:Fusee.Xirkit.Lerp.Float2Lerp
  name: Float2Lerp
  nameWithType: Lerp.Float2Lerp
  fullName: Fusee.Xirkit.Lerp.Float2Lerp
- uid: Fusee.Math.Core.float2
  commentId: T:Fusee.Math.Core.float2
  parent: Fusee.Math.Core
  name: float2
  nameWithType: float2
  fullName: Fusee.Math.Core.float2
- uid: Fusee.Math.Core
  commentId: N:Fusee.Math.Core
  name: Fusee.Math.Core
  nameWithType: Fusee.Math.Core
  fullName: Fusee.Math.Core
- uid: Fusee.Xirkit.Lerp.Float3Lerp*
  commentId: Overload:Fusee.Xirkit.Lerp.Float3Lerp
  name: Float3Lerp
  nameWithType: Lerp.Float3Lerp
  fullName: Fusee.Xirkit.Lerp.Float3Lerp
- uid: Fusee.Math.Core.float3
  commentId: T:Fusee.Math.Core.float3
  parent: Fusee.Math.Core
  name: float3
  nameWithType: float3
  fullName: Fusee.Math.Core.float3
- uid: Fusee.Xirkit.Lerp.Float3Lerp(Fusee.Math.Core.float3,Fusee.Math.Core.float3,System.Single,System.Single)
  commentId: M:Fusee.Xirkit.Lerp.Float3Lerp(Fusee.Math.Core.float3,Fusee.Math.Core.float3,System.Single,System.Single)
  isExternal: true
- uid: Fusee.Xirkit.Lerp.Float3QuaternionSlerp*
  commentId: Overload:Fusee.Xirkit.Lerp.Float3QuaternionSlerp
  name: Float3QuaternionSlerp
  nameWithType: Lerp.Float3QuaternionSlerp
  fullName: Fusee.Xirkit.Lerp.Float3QuaternionSlerp
- uid: Fusee.Xirkit.Lerp.Float4Lerp*
  commentId: Overload:Fusee.Xirkit.Lerp.Float4Lerp
  name: Float4Lerp
  nameWithType: Lerp.Float4Lerp
  fullName: Fusee.Xirkit.Lerp.Float4Lerp
- uid: Fusee.Math.Core.float4
  commentId: T:Fusee.Math.Core.float4
  parent: Fusee.Math.Core
  name: float4
  nameWithType: float4
  fullName: Fusee.Math.Core.float4

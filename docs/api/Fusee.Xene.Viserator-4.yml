### YamlMime:ManagedReference
items:
- uid: Fusee.Xene.Viserator`4
  commentId: T:Fusee.Xene.Viserator`4
  id: Viserator`4
  parent: Fusee.Xene
  children:
  - Fusee.Xene.Viserator`4.#ctor
  - Fusee.Xene.Viserator`4.#ctor(System.Collections.Generic.IEnumerable{`2})
  - Fusee.Xene.Viserator`4.Init(System.Collections.Generic.IEnumerable{`2})
  - Fusee.Xene.Viserator`4.InitState
  - Fusee.Xene.Viserator`4.PopState
  - Fusee.Xene.Viserator`4.PushState
  - Fusee.Xene.Viserator`4.State
  langs:
  - csharp
  - vb
  name: Viserator<TItem, TState, TNode, TComponent>
  nameWithType: Viserator<TItem, TState, TNode, TComponent>
  fullName: Fusee.Xene.Viserator<TItem, TState, TNode, TComponent>
  type: Class
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xene/Viserator.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Viserator
    path: src/Fusee/src/Xene/Viserator.cs
    startLine: 193
  assemblies:
  - Fusee.Xene
  namespace: Fusee.Xene
  summary: "\nA Viserator is a scene visitor which returns an enumerator of a user defined type. Serves as a base class\nfor use-cases where traversing a node-component-graph should yield a list (enumerator) of results.\n"
  remarks: "\nVery often you want to traverse a node-component-graph while maintaining a traversal state keeping track of\nindividual values and their changes while traversing. At certain points during the traversal a result arises that\nshould be promoted to the outside of the traversal. Typically the result is derived from the state at a certain\ntime during traversal and some additional information of the tree object currently visited.\n<p></p>\nTo implement your own Viserator you should consider which state information the Viserator must keep track of.\nEither you assemble your own State type by deriving from <xref href=\"Fusee.Xene.VisitorState\" data-throw-if-not-resolved=\"false\"></xref> or choose to use one of \nthe standard state types like <xref href=\"Fusee.Xene.StandardState\" data-throw-if-not-resolved=\"false\"></xref>. Then you need to derive your own class from \n<xref href=\"Fusee.Xene.Viserator%604\" data-throw-if-not-resolved=\"false\"></xref>\nwith the TState replaced by your choice of State and TItem replaced by the type of the items you want your Viserator to yield\nduring the traversal.\n<p></p>\nThe word Viserator is a combination of a visitor and enumerator. Look up &quot;to viscerate&quot; in a dictionary and\njudge for yourself if a Viserator&apos;s operation resembles disemboweling the innards of a tree structure.\n"
  example: []
  syntax:
    content: >-
      public abstract class Viserator<TItem, TState, TNode, TComponent> : ViseratorBase<TItem, TNode, TComponent>, IEnumerator<TItem>, IEnumerator, IDisposable where TState : IStateStack, new()

          where TNode : class, INode where TComponent : class, IComponent
    typeParameters:
    - id: TItem
      description: The type of the result yielded by the enumerator.
    - id: TState
      description: >-
        The type of the state to use during traversal. See <xref href="Fusee.Xene.VisitorState" data-throw-if-not-resolved="false"></xref> how to
         implement your own state type.
    - id: TNode
      description: The root type of nodes the trees passed to the constructor is built from.
    - id: TComponent
      description: The root type of components used in the given trees.
    content.vb: >-
      Public MustInherit Class Viserator(Of TItem, TState As {IStateStack, New}, TNode As {Class, INode}, TComponent As {Class, IComponent})

          Inherits ViseratorBase(Of TItem, TNode, TComponent)

          Implements IEnumerator(Of TItem), IEnumerator, IDisposable
  inheritance:
  - System.Object
  - Fusee.Xene.Visitor{{TNode},{TComponent}}
  - Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}
  derivedClasses:
  - Fusee.Engine.Core.ScenePicker
  implements:
  - System.Collections.Generic.IEnumerator{{TItem}}
  - System.Collections.IEnumerator
  - System.IDisposable
  inheritedMembers:
  - Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}.Init(System.Collections.Generic.IEnumerable{{TNode}})
  - Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}.Dispose
  - Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}.MoveNext
  - Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}.Reset
  - Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}.Current
  - Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}.System#Collections#IEnumerator#Current
  - Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}.YieldItem({TItem})
  - Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}.Viserate
  - Fusee.Xene.Visitor{{TNode},{TComponent}}.Traverse({TNode})
  - Fusee.Xene.Visitor{{TNode},{TComponent}}.Traverse(System.Collections.Generic.IEnumerable{{TNode}})
  - Fusee.Xene.Visitor{{TNode},{TComponent}}.InitState
  - Fusee.Xene.Visitor{{TNode},{TComponent}}.PushState
  - Fusee.Xene.Visitor{{TNode},{TComponent}}.PopState
  - Fusee.Xene.Visitor{{TNode},{TComponent}}.CurrentNode
  - Fusee.Xene.Visitor{{TNode},{TComponent}}.CurrentComponent
  - Fusee.Xene.Visitor{{TNode},{TComponent}}.YieldOnCurrentNode
  - Fusee.Xene.Visitor{{TNode},{TComponent}}.YieldOnCurrentComponent
  - Fusee.Xene.Visitor{{TNode},{TComponent}}.YieldEnumeration
  - Fusee.Xene.Visitor{{TNode},{TComponent}}.EnumInit(System.Collections.Generic.IEnumerator{{TNode}})
  - Fusee.Xene.Visitor{{TNode},{TComponent}}.EnumMoveNext
  - Fusee.Xene.Visitor{{TNode},{TComponent}}.EnumMoveNextNoComponent
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: Viserator(Of TItem, TState, TNode, TComponent)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Fusee.Xene.Viserator(Of TItem, TState, TNode, TComponent)
  name.vb: Viserator(Of TItem, TState, TNode, TComponent)
- uid: Fusee.Xene.Viserator`4.State
  commentId: F:Fusee.Xene.Viserator`4.State
  id: State
  parent: Fusee.Xene.Viserator`4
  langs:
  - csharp
  - vb
  name: State
  nameWithType: Viserator<TItem, TState, TNode, TComponent>.State
  fullName: Fusee.Xene.Viserator<TItem, TState, TNode, TComponent>.State
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xene/Viserator.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: State
    path: src/Fusee/src/Xene/Viserator.cs
    startLine: 202
  assemblies:
  - Fusee.Xene
  namespace: Fusee.Xene
  summary: "\nThe state to keep track of during traversal. You can use your own implementation (as long as it implements <xref href=\"Fusee.Xene.IStateStack\" data-throw-if-not-resolved=\"false\"></xref>\nor use one of the predefined implementations. See <xref href=\"Fusee.Xene.VisitorState\" data-throw-if-not-resolved=\"false\"></xref> how to implement your own state type.\n"
  example: []
  syntax:
    content: protected TState State
    return:
      type: '{TState}'
    content.vb: Protected State As TState
  nameWithType.vb: Viserator(Of TItem, TState, TNode, TComponent).State
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Fusee.Xene.Viserator(Of TItem, TState, TNode, TComponent).State
- uid: Fusee.Xene.Viserator`4.#ctor
  commentId: M:Fusee.Xene.Viserator`4.#ctor
  id: '#ctor'
  parent: Fusee.Xene.Viserator`4
  langs:
  - csharp
  - vb
  name: Viserator()
  nameWithType: Viserator<TItem, TState, TNode, TComponent>.Viserator()
  fullName: Fusee.Xene.Viserator<TItem, TState, TNode, TComponent>.Viserator()
  type: Constructor
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xene/Viserator.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: .ctor
    path: src/Fusee/src/Xene/Viserator.cs
    startLine: 207
  assemblies:
  - Fusee.Xene
  namespace: Fusee.Xene
  summary: "\nInitializes a new instance of the <xref href=\"Fusee.Xene.Viserator%604\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public Viserator()
    content.vb: Public Sub New
  overload: Fusee.Xene.Viserator`4.#ctor*
  nameWithType.vb: Viserator(Of TItem, TState, TNode, TComponent).Viserator()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Fusee.Xene.Viserator(Of TItem, TState, TNode, TComponent).Viserator()
- uid: Fusee.Xene.Viserator`4.Init(System.Collections.Generic.IEnumerable{`2})
  commentId: M:Fusee.Xene.Viserator`4.Init(System.Collections.Generic.IEnumerable{`2})
  id: Init(System.Collections.Generic.IEnumerable{`2})
  parent: Fusee.Xene.Viserator`4
  langs:
  - csharp
  - vb
  name: Init(IEnumerable<TNode>)
  nameWithType: Viserator<TItem, TState, TNode, TComponent>.Init(IEnumerable<TNode>)
  fullName: Fusee.Xene.Viserator<TItem, TState, TNode, TComponent>.Init(System.Collections.Generic.IEnumerable<TNode>)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xene/Viserator.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Init
    path: src/Fusee/src/Xene/Viserator.cs
    startLine: 215
  assemblies:
  - Fusee.Xene
  namespace: Fusee.Xene
  summary: "\nInitializes this viserator using the specified root list.\n"
  example: []
  syntax:
    content: protected override void Init(IEnumerable<TNode> rootList)
    parameters:
    - id: rootList
      type: System.Collections.Generic.IEnumerable{{TNode}}
      description: The tree to traverse.
    content.vb: Protected Overrides Sub Init(rootList As IEnumerable(Of TNode))
  overridden: Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}.Init(System.Collections.Generic.IEnumerable{{TNode}})
  overload: Fusee.Xene.Viserator`4.Init*
  nameWithType.vb: Viserator(Of TItem, TState, TNode, TComponent).Init(IEnumerable(Of TNode))
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Fusee.Xene.Viserator(Of TItem, TState, TNode, TComponent).Init(System.Collections.Generic.IEnumerable(Of TNode))
  name.vb: Init(IEnumerable(Of TNode))
- uid: Fusee.Xene.Viserator`4.#ctor(System.Collections.Generic.IEnumerable{`2})
  commentId: M:Fusee.Xene.Viserator`4.#ctor(System.Collections.Generic.IEnumerable{`2})
  id: '#ctor(System.Collections.Generic.IEnumerable{`2})'
  parent: Fusee.Xene.Viserator`4
  langs:
  - csharp
  - vb
  name: Viserator(IEnumerable<TNode>)
  nameWithType: Viserator<TItem, TState, TNode, TComponent>.Viserator(IEnumerable<TNode>)
  fullName: Fusee.Xene.Viserator<TItem, TState, TNode, TComponent>.Viserator(System.Collections.Generic.IEnumerable<TNode>)
  type: Constructor
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xene/Viserator.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: .ctor
    path: src/Fusee/src/Xene/Viserator.cs
    startLine: 225
  assemblies:
  - Fusee.Xene
  namespace: Fusee.Xene
  summary: "\nInitializes a new instance of the <xref href=\"Fusee.Xene.Viserator%604\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public Viserator(IEnumerable<TNode> rootList)
    parameters:
    - id: rootList
      type: System.Collections.Generic.IEnumerable{{TNode}}
      description: The root list.
    content.vb: Public Sub New(rootList As IEnumerable(Of TNode))
  overload: Fusee.Xene.Viserator`4.#ctor*
  nameWithType.vb: Viserator(Of TItem, TState, TNode, TComponent).Viserator(IEnumerable(Of TNode))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Fusee.Xene.Viserator(Of TItem, TState, TNode, TComponent).Viserator(System.Collections.Generic.IEnumerable(Of TNode))
  name.vb: Viserator(IEnumerable(Of TNode))
- uid: Fusee.Xene.Viserator`4.InitState
  commentId: M:Fusee.Xene.Viserator`4.InitState
  id: InitState
  parent: Fusee.Xene.Viserator`4
  langs:
  - csharp
  - vb
  name: InitState()
  nameWithType: Viserator<TItem, TState, TNode, TComponent>.InitState()
  fullName: Fusee.Xene.Viserator<TItem, TState, TNode, TComponent>.InitState()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xene/Viserator.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: InitState
    path: src/Fusee/src/Xene/Viserator.cs
    startLine: 236
  assemblies:
  - Fusee.Xene
  namespace: Fusee.Xene
  summary: "\nThis method is called when traversal starts to initialize the traversal state. Override this method in derived classes to initialize any state beyond\nthe standard <xref href=\"Fusee.Xene.Viserator%604.State\" data-throw-if-not-resolved=\"false\"></xref>.\nMost visitors will simply initialize the <xref href=\"Fusee.Xene.Viserator%604.State\" data-throw-if-not-resolved=\"false\"></xref> and will thus NOT need to override this method. Make sure to call the base\nimplementation in overridden versions.\n"
  example: []
  syntax:
    content: protected override void InitState()
    content.vb: Protected Overrides Sub InitState
  overridden: Fusee.Xene.Visitor{{TNode},{TComponent}}.InitState
  overload: Fusee.Xene.Viserator`4.InitState*
  nameWithType.vb: Viserator(Of TItem, TState, TNode, TComponent).InitState()
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Fusee.Xene.Viserator(Of TItem, TState, TNode, TComponent).InitState()
- uid: Fusee.Xene.Viserator`4.PushState
  commentId: M:Fusee.Xene.Viserator`4.PushState
  id: PushState
  parent: Fusee.Xene.Viserator`4
  langs:
  - csharp
  - vb
  name: PushState()
  nameWithType: Viserator<TItem, TState, TNode, TComponent>.PushState()
  fullName: Fusee.Xene.Viserator<TItem, TState, TNode, TComponent>.PushState()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xene/Viserator.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: PushState
    path: src/Fusee/src/Xene/Viserator.cs
    startLine: 246
  assemblies:
  - Fusee.Xene
  namespace: Fusee.Xene
  summary: "\nThis method  is called when going down one hierarchy level while traversing. Pushes the traversal state stack <xref href=\"Fusee.Xene.Viserator%604.State\" data-throw-if-not-resolved=\"false\"></xref>.\nMost visitors will simply push the <xref href=\"Fusee.Xene.Viserator%604.State\" data-throw-if-not-resolved=\"false\"></xref> and will thus NOT need to override this method. Make sure to call the base\nimplementation in overridden versions.\n"
  example: []
  syntax:
    content: protected override void PushState()
    content.vb: Protected Overrides Sub PushState
  overridden: Fusee.Xene.Visitor{{TNode},{TComponent}}.PushState
  overload: Fusee.Xene.Viserator`4.PushState*
  nameWithType.vb: Viserator(Of TItem, TState, TNode, TComponent).PushState()
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Fusee.Xene.Viserator(Of TItem, TState, TNode, TComponent).PushState()
- uid: Fusee.Xene.Viserator`4.PopState
  commentId: M:Fusee.Xene.Viserator`4.PopState
  id: PopState
  parent: Fusee.Xene.Viserator`4
  langs:
  - csharp
  - vb
  name: PopState()
  nameWithType: Viserator<TItem, TState, TNode, TComponent>.PopState()
  fullName: Fusee.Xene.Viserator<TItem, TState, TNode, TComponent>.PopState()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xene/Viserator.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: PopState
    path: src/Fusee/src/Xene/Viserator.cs
    startLine: 256
  assemblies:
  - Fusee.Xene
  namespace: Fusee.Xene
  summary: "\nThis method  is called when going up one hierarchy level while traversing. Pops the traversal state stack <xref href=\"Fusee.Xene.Viserator%604.State\" data-throw-if-not-resolved=\"false\"></xref>.\nMost visitors will simply perform pop on the <xref href=\"Fusee.Xene.Viserator%604.State\" data-throw-if-not-resolved=\"false\"></xref> and will thus NOT need to override this method. Make sure to call the base\nimplementation in overridden versions.\n"
  example: []
  syntax:
    content: protected override void PopState()
    content.vb: Protected Overrides Sub PopState
  overridden: Fusee.Xene.Visitor{{TNode},{TComponent}}.PopState
  overload: Fusee.Xene.Viserator`4.PopState*
  nameWithType.vb: Viserator(Of TItem, TState, TNode, TComponent).PopState()
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
  fullName.vb: Fusee.Xene.Viserator(Of TItem, TState, TNode, TComponent).PopState()
references:
- uid: Fusee.Xene.VisitorState
  commentId: T:Fusee.Xene.VisitorState
  parent: Fusee.Xene
  name: VisitorState
  nameWithType: VisitorState
  fullName: Fusee.Xene.VisitorState
- uid: Fusee.Xene.StandardState
  commentId: T:Fusee.Xene.StandardState
  name: StandardState
  nameWithType: StandardState
  fullName: Fusee.Xene.StandardState
- uid: Fusee.Xene.Viserator`4
  commentId: T:Fusee.Xene.Viserator`4
  name: Viserator<TItem, TState, TNode, TComponent>
  nameWithType: Viserator<TItem, TState, TNode, TComponent>
  fullName: Fusee.Xene.Viserator<TItem, TState, TNode, TComponent>
  nameWithType.vb: Viserator(Of TItem, TState, TNode, TComponent)
  fullName.vb: Fusee.Xene.Viserator(Of TItem, TState, TNode, TComponent)
  name.vb: Viserator(Of TItem, TState, TNode, TComponent)
  spec.csharp:
  - uid: Fusee.Xene.Viserator`4
    name: Viserator
    nameWithType: Viserator
    fullName: Fusee.Xene.Viserator
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TComponent
    nameWithType: TComponent
    fullName: TComponent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Fusee.Xene.Viserator`4
    name: Viserator
    nameWithType: Viserator
    fullName: Fusee.Xene.Viserator
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TState
    nameWithType: TState
    fullName: TState
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TComponent
    nameWithType: TComponent
    fullName: TComponent
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene
  commentId: N:Fusee.Xene
  name: Fusee.Xene
  nameWithType: Fusee.Xene
  fullName: Fusee.Xene
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Fusee.Xene.Visitor{{TNode},{TComponent}}
  commentId: T:Fusee.Xene.Visitor{`1,`2}
  parent: Fusee.Xene
  definition: Fusee.Xene.Visitor`2
  name: Visitor<TNode, TComponent>
  nameWithType: Visitor<TNode, TComponent>
  fullName: Fusee.Xene.Visitor<TNode, TComponent>
  nameWithType.vb: Visitor(Of TNode, TComponent)
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent)
  name.vb: Visitor(Of TNode, TComponent)
  spec.csharp:
  - uid: Fusee.Xene.Visitor`2
    name: Visitor
    nameWithType: Visitor
    fullName: Fusee.Xene.Visitor
  - name: <
    nameWithType: <
    fullName: <
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TComponent
    nameWithType: TComponent
    fullName: TComponent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Fusee.Xene.Visitor`2
    name: Visitor
    nameWithType: Visitor
    fullName: Fusee.Xene.Visitor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TComponent
    nameWithType: TComponent
    fullName: TComponent
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}
  commentId: T:Fusee.Xene.ViseratorBase{`0,`2,`3}
  parent: Fusee.Xene
  definition: Fusee.Xene.ViseratorBase`3
  name: ViseratorBase<TItem, TNode, TComponent>
  nameWithType: ViseratorBase<TItem, TNode, TComponent>
  fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>
  nameWithType.vb: ViseratorBase(Of TItem, TNode, TComponent)
  fullName.vb: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent)
  name.vb: ViseratorBase(Of TItem, TNode, TComponent)
  spec.csharp:
  - uid: Fusee.Xene.ViseratorBase`3
    name: ViseratorBase
    nameWithType: ViseratorBase
    fullName: Fusee.Xene.ViseratorBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TComponent
    nameWithType: TComponent
    fullName: TComponent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Fusee.Xene.ViseratorBase`3
    name: ViseratorBase
    nameWithType: ViseratorBase
    fullName: Fusee.Xene.ViseratorBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TComponent
    nameWithType: TComponent
    fullName: TComponent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{TItem}}
  commentId: T:System.Collections.Generic.IEnumerator{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<TItem>
  nameWithType: IEnumerator<TItem>
  fullName: System.Collections.Generic.IEnumerator<TItem>
  nameWithType.vb: IEnumerator(Of TItem)
  fullName.vb: System.Collections.Generic.IEnumerator(Of TItem)
  name.vb: IEnumerator(Of TItem)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}.Init(System.Collections.Generic.IEnumerable{{TNode}})
  commentId: M:Fusee.Xene.ViseratorBase{`0,`2,`3}.Init(System.Collections.Generic.IEnumerable{`2})
  parent: Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}
  definition: Fusee.Xene.ViseratorBase`3.Init(System.Collections.Generic.IEnumerable{`1})
  name: Init(IEnumerable<TNode>)
  nameWithType: ViseratorBase<TItem, TNode, TComponent>.Init(IEnumerable<TNode>)
  fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.Init(System.Collections.Generic.IEnumerable<TNode>)
  nameWithType.vb: ViseratorBase(Of TItem, TNode, TComponent).Init(IEnumerable(Of TNode))
  fullName.vb: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).Init(System.Collections.Generic.IEnumerable(Of TNode))
  name.vb: Init(IEnumerable(Of TNode))
  spec.csharp:
  - uid: Fusee.Xene.ViseratorBase`3.Init(System.Collections.Generic.IEnumerable{`1})
    name: Init
    nameWithType: ViseratorBase<TItem, TNode, TComponent>.Init
    fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.ViseratorBase`3.Init(System.Collections.Generic.IEnumerable{`1})
    name: Init
    nameWithType: ViseratorBase(Of TItem, TNode, TComponent).Init
    fullName: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}.Dispose
  commentId: M:Fusee.Xene.ViseratorBase{`0,`2,`3}.Dispose
  parent: Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}
  definition: Fusee.Xene.ViseratorBase`3.Dispose
  name: Dispose()
  nameWithType: ViseratorBase<TItem, TNode, TComponent>.Dispose()
  fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.Dispose()
  nameWithType.vb: ViseratorBase(Of TItem, TNode, TComponent).Dispose()
  fullName.vb: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).Dispose()
  spec.csharp:
  - uid: Fusee.Xene.ViseratorBase`3.Dispose
    name: Dispose
    nameWithType: ViseratorBase<TItem, TNode, TComponent>.Dispose
    fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.ViseratorBase`3.Dispose
    name: Dispose
    nameWithType: ViseratorBase(Of TItem, TNode, TComponent).Dispose
    fullName: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}.MoveNext
  commentId: M:Fusee.Xene.ViseratorBase{`0,`2,`3}.MoveNext
  parent: Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}
  definition: Fusee.Xene.ViseratorBase`3.MoveNext
  name: MoveNext()
  nameWithType: ViseratorBase<TItem, TNode, TComponent>.MoveNext()
  fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.MoveNext()
  nameWithType.vb: ViseratorBase(Of TItem, TNode, TComponent).MoveNext()
  fullName.vb: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).MoveNext()
  spec.csharp:
  - uid: Fusee.Xene.ViseratorBase`3.MoveNext
    name: MoveNext
    nameWithType: ViseratorBase<TItem, TNode, TComponent>.MoveNext
    fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.MoveNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.ViseratorBase`3.MoveNext
    name: MoveNext
    nameWithType: ViseratorBase(Of TItem, TNode, TComponent).MoveNext
    fullName: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).MoveNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}.Reset
  commentId: M:Fusee.Xene.ViseratorBase{`0,`2,`3}.Reset
  parent: Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}
  definition: Fusee.Xene.ViseratorBase`3.Reset
  name: Reset()
  nameWithType: ViseratorBase<TItem, TNode, TComponent>.Reset()
  fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.Reset()
  nameWithType.vb: ViseratorBase(Of TItem, TNode, TComponent).Reset()
  fullName.vb: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).Reset()
  spec.csharp:
  - uid: Fusee.Xene.ViseratorBase`3.Reset
    name: Reset
    nameWithType: ViseratorBase<TItem, TNode, TComponent>.Reset
    fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.ViseratorBase`3.Reset
    name: Reset
    nameWithType: ViseratorBase(Of TItem, TNode, TComponent).Reset
    fullName: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}.Current
  commentId: P:Fusee.Xene.ViseratorBase{`0,`2,`3}.Current
  parent: Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}
  definition: Fusee.Xene.ViseratorBase`3.Current
  name: Current
  nameWithType: ViseratorBase<TItem, TNode, TComponent>.Current
  fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.Current
  nameWithType.vb: ViseratorBase(Of TItem, TNode, TComponent).Current
  fullName.vb: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).Current
- uid: Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}.System#Collections#IEnumerator#Current
  commentId: P:Fusee.Xene.ViseratorBase{`0,`2,`3}.System#Collections#IEnumerator#Current
  parent: Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}
  definition: Fusee.Xene.ViseratorBase`3.System#Collections#IEnumerator#Current
  name: IEnumerator.Current
  nameWithType: ViseratorBase<TItem, TNode, TComponent>.IEnumerator.Current
  fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.System.Collections.IEnumerator.Current
  nameWithType.vb: ViseratorBase(Of TItem, TNode, TComponent).System.Collections.IEnumerator.Current
  fullName.vb: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).System.Collections.IEnumerator.Current
  name.vb: System.Collections.IEnumerator.Current
- uid: Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}.YieldItem({TItem})
  commentId: M:Fusee.Xene.ViseratorBase{`0,`2,`3}.YieldItem(`0)
  parent: Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}
  definition: Fusee.Xene.ViseratorBase`3.YieldItem(`0)
  name: YieldItem(TItem)
  nameWithType: ViseratorBase<TItem, TNode, TComponent>.YieldItem(TItem)
  fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.YieldItem(TItem)
  nameWithType.vb: ViseratorBase(Of TItem, TNode, TComponent).YieldItem(TItem)
  fullName.vb: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).YieldItem(TItem)
  spec.csharp:
  - uid: Fusee.Xene.ViseratorBase`3.YieldItem(`0)
    name: YieldItem
    nameWithType: ViseratorBase<TItem, TNode, TComponent>.YieldItem
    fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.YieldItem
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.ViseratorBase`3.YieldItem(`0)
    name: YieldItem
    nameWithType: ViseratorBase(Of TItem, TNode, TComponent).YieldItem
    fullName: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).YieldItem
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}.Viserate
  commentId: M:Fusee.Xene.ViseratorBase{`0,`2,`3}.Viserate
  parent: Fusee.Xene.ViseratorBase{{TItem},{TNode},{TComponent}}
  definition: Fusee.Xene.ViseratorBase`3.Viserate
  name: Viserate()
  nameWithType: ViseratorBase<TItem, TNode, TComponent>.Viserate()
  fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.Viserate()
  nameWithType.vb: ViseratorBase(Of TItem, TNode, TComponent).Viserate()
  fullName.vb: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).Viserate()
  spec.csharp:
  - uid: Fusee.Xene.ViseratorBase`3.Viserate
    name: Viserate
    nameWithType: ViseratorBase<TItem, TNode, TComponent>.Viserate
    fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.Viserate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.ViseratorBase`3.Viserate
    name: Viserate
    nameWithType: ViseratorBase(Of TItem, TNode, TComponent).Viserate
    fullName: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).Viserate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.Visitor{{TNode},{TComponent}}.Traverse({TNode})
  commentId: M:Fusee.Xene.Visitor{`1,`2}.Traverse(`1)
  parent: Fusee.Xene.Visitor{{TNode},{TComponent}}
  definition: Fusee.Xene.Visitor`2.Traverse(`0)
  name: Traverse(TNode)
  nameWithType: Visitor<TNode, TComponent>.Traverse(TNode)
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.Traverse(TNode)
  nameWithType.vb: Visitor(Of TNode, TComponent).Traverse(TNode)
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).Traverse(TNode)
  spec.csharp:
  - uid: Fusee.Xene.Visitor`2.Traverse(`0)
    name: Traverse
    nameWithType: Visitor<TNode, TComponent>.Traverse
    fullName: Fusee.Xene.Visitor<TNode, TComponent>.Traverse
  - name: (
    nameWithType: (
    fullName: (
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.Visitor`2.Traverse(`0)
    name: Traverse
    nameWithType: Visitor(Of TNode, TComponent).Traverse
    fullName: Fusee.Xene.Visitor(Of TNode, TComponent).Traverse
  - name: (
    nameWithType: (
    fullName: (
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.Visitor{{TNode},{TComponent}}.Traverse(System.Collections.Generic.IEnumerable{{TNode}})
  commentId: M:Fusee.Xene.Visitor{`1,`2}.Traverse(System.Collections.Generic.IEnumerable{`1})
  parent: Fusee.Xene.Visitor{{TNode},{TComponent}}
  definition: Fusee.Xene.Visitor`2.Traverse(System.Collections.Generic.IEnumerable{`0})
  name: Traverse(IEnumerable<TNode>)
  nameWithType: Visitor<TNode, TComponent>.Traverse(IEnumerable<TNode>)
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.Traverse(System.Collections.Generic.IEnumerable<TNode>)
  nameWithType.vb: Visitor(Of TNode, TComponent).Traverse(IEnumerable(Of TNode))
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).Traverse(System.Collections.Generic.IEnumerable(Of TNode))
  name.vb: Traverse(IEnumerable(Of TNode))
  spec.csharp:
  - uid: Fusee.Xene.Visitor`2.Traverse(System.Collections.Generic.IEnumerable{`0})
    name: Traverse
    nameWithType: Visitor<TNode, TComponent>.Traverse
    fullName: Fusee.Xene.Visitor<TNode, TComponent>.Traverse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.Visitor`2.Traverse(System.Collections.Generic.IEnumerable{`0})
    name: Traverse
    nameWithType: Visitor(Of TNode, TComponent).Traverse
    fullName: Fusee.Xene.Visitor(Of TNode, TComponent).Traverse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.Visitor{{TNode},{TComponent}}.InitState
  commentId: M:Fusee.Xene.Visitor{`1,`2}.InitState
  parent: Fusee.Xene.Visitor{{TNode},{TComponent}}
  definition: Fusee.Xene.Visitor`2.InitState
  name: InitState()
  nameWithType: Visitor<TNode, TComponent>.InitState()
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.InitState()
  nameWithType.vb: Visitor(Of TNode, TComponent).InitState()
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).InitState()
  spec.csharp:
  - uid: Fusee.Xene.Visitor`2.InitState
    name: InitState
    nameWithType: Visitor<TNode, TComponent>.InitState
    fullName: Fusee.Xene.Visitor<TNode, TComponent>.InitState
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.Visitor`2.InitState
    name: InitState
    nameWithType: Visitor(Of TNode, TComponent).InitState
    fullName: Fusee.Xene.Visitor(Of TNode, TComponent).InitState
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.Visitor{{TNode},{TComponent}}.PushState
  commentId: M:Fusee.Xene.Visitor{`1,`2}.PushState
  parent: Fusee.Xene.Visitor{{TNode},{TComponent}}
  definition: Fusee.Xene.Visitor`2.PushState
  name: PushState()
  nameWithType: Visitor<TNode, TComponent>.PushState()
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.PushState()
  nameWithType.vb: Visitor(Of TNode, TComponent).PushState()
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).PushState()
  spec.csharp:
  - uid: Fusee.Xene.Visitor`2.PushState
    name: PushState
    nameWithType: Visitor<TNode, TComponent>.PushState
    fullName: Fusee.Xene.Visitor<TNode, TComponent>.PushState
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.Visitor`2.PushState
    name: PushState
    nameWithType: Visitor(Of TNode, TComponent).PushState
    fullName: Fusee.Xene.Visitor(Of TNode, TComponent).PushState
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.Visitor{{TNode},{TComponent}}.PopState
  commentId: M:Fusee.Xene.Visitor{`1,`2}.PopState
  parent: Fusee.Xene.Visitor{{TNode},{TComponent}}
  definition: Fusee.Xene.Visitor`2.PopState
  name: PopState()
  nameWithType: Visitor<TNode, TComponent>.PopState()
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.PopState()
  nameWithType.vb: Visitor(Of TNode, TComponent).PopState()
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).PopState()
  spec.csharp:
  - uid: Fusee.Xene.Visitor`2.PopState
    name: PopState
    nameWithType: Visitor<TNode, TComponent>.PopState
    fullName: Fusee.Xene.Visitor<TNode, TComponent>.PopState
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.Visitor`2.PopState
    name: PopState
    nameWithType: Visitor(Of TNode, TComponent).PopState
    fullName: Fusee.Xene.Visitor(Of TNode, TComponent).PopState
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.Visitor{{TNode},{TComponent}}.CurrentNode
  commentId: P:Fusee.Xene.Visitor{`1,`2}.CurrentNode
  parent: Fusee.Xene.Visitor{{TNode},{TComponent}}
  definition: Fusee.Xene.Visitor`2.CurrentNode
  name: CurrentNode
  nameWithType: Visitor<TNode, TComponent>.CurrentNode
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.CurrentNode
  nameWithType.vb: Visitor(Of TNode, TComponent).CurrentNode
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).CurrentNode
- uid: Fusee.Xene.Visitor{{TNode},{TComponent}}.CurrentComponent
  commentId: P:Fusee.Xene.Visitor{`1,`2}.CurrentComponent
  parent: Fusee.Xene.Visitor{{TNode},{TComponent}}
  definition: Fusee.Xene.Visitor`2.CurrentComponent
  name: CurrentComponent
  nameWithType: Visitor<TNode, TComponent>.CurrentComponent
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.CurrentComponent
  nameWithType.vb: Visitor(Of TNode, TComponent).CurrentComponent
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).CurrentComponent
- uid: Fusee.Xene.Visitor{{TNode},{TComponent}}.YieldOnCurrentNode
  commentId: P:Fusee.Xene.Visitor{`1,`2}.YieldOnCurrentNode
  parent: Fusee.Xene.Visitor{{TNode},{TComponent}}
  definition: Fusee.Xene.Visitor`2.YieldOnCurrentNode
  name: YieldOnCurrentNode
  nameWithType: Visitor<TNode, TComponent>.YieldOnCurrentNode
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.YieldOnCurrentNode
  nameWithType.vb: Visitor(Of TNode, TComponent).YieldOnCurrentNode
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).YieldOnCurrentNode
- uid: Fusee.Xene.Visitor{{TNode},{TComponent}}.YieldOnCurrentComponent
  commentId: P:Fusee.Xene.Visitor{`1,`2}.YieldOnCurrentComponent
  parent: Fusee.Xene.Visitor{{TNode},{TComponent}}
  definition: Fusee.Xene.Visitor`2.YieldOnCurrentComponent
  name: YieldOnCurrentComponent
  nameWithType: Visitor<TNode, TComponent>.YieldOnCurrentComponent
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.YieldOnCurrentComponent
  nameWithType.vb: Visitor(Of TNode, TComponent).YieldOnCurrentComponent
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).YieldOnCurrentComponent
- uid: Fusee.Xene.Visitor{{TNode},{TComponent}}.YieldEnumeration
  commentId: P:Fusee.Xene.Visitor{`1,`2}.YieldEnumeration
  parent: Fusee.Xene.Visitor{{TNode},{TComponent}}
  definition: Fusee.Xene.Visitor`2.YieldEnumeration
  name: YieldEnumeration
  nameWithType: Visitor<TNode, TComponent>.YieldEnumeration
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.YieldEnumeration
  nameWithType.vb: Visitor(Of TNode, TComponent).YieldEnumeration
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).YieldEnumeration
- uid: Fusee.Xene.Visitor{{TNode},{TComponent}}.EnumInit(System.Collections.Generic.IEnumerator{{TNode}})
  commentId: M:Fusee.Xene.Visitor{`1,`2}.EnumInit(System.Collections.Generic.IEnumerator{`1})
  parent: Fusee.Xene.Visitor{{TNode},{TComponent}}
  definition: Fusee.Xene.Visitor`2.EnumInit(System.Collections.Generic.IEnumerator{`0})
  name: EnumInit(IEnumerator<TNode>)
  nameWithType: Visitor<TNode, TComponent>.EnumInit(IEnumerator<TNode>)
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.EnumInit(System.Collections.Generic.IEnumerator<TNode>)
  nameWithType.vb: Visitor(Of TNode, TComponent).EnumInit(IEnumerator(Of TNode))
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).EnumInit(System.Collections.Generic.IEnumerator(Of TNode))
  name.vb: EnumInit(IEnumerator(Of TNode))
  spec.csharp:
  - uid: Fusee.Xene.Visitor`2.EnumInit(System.Collections.Generic.IEnumerator{`0})
    name: EnumInit
    nameWithType: Visitor<TNode, TComponent>.EnumInit
    fullName: Fusee.Xene.Visitor<TNode, TComponent>.EnumInit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.Visitor`2.EnumInit(System.Collections.Generic.IEnumerator{`0})
    name: EnumInit
    nameWithType: Visitor(Of TNode, TComponent).EnumInit
    fullName: Fusee.Xene.Visitor(Of TNode, TComponent).EnumInit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.Visitor{{TNode},{TComponent}}.EnumMoveNext
  commentId: M:Fusee.Xene.Visitor{`1,`2}.EnumMoveNext
  parent: Fusee.Xene.Visitor{{TNode},{TComponent}}
  definition: Fusee.Xene.Visitor`2.EnumMoveNext
  name: EnumMoveNext()
  nameWithType: Visitor<TNode, TComponent>.EnumMoveNext()
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.EnumMoveNext()
  nameWithType.vb: Visitor(Of TNode, TComponent).EnumMoveNext()
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).EnumMoveNext()
  spec.csharp:
  - uid: Fusee.Xene.Visitor`2.EnumMoveNext
    name: EnumMoveNext
    nameWithType: Visitor<TNode, TComponent>.EnumMoveNext
    fullName: Fusee.Xene.Visitor<TNode, TComponent>.EnumMoveNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.Visitor`2.EnumMoveNext
    name: EnumMoveNext
    nameWithType: Visitor(Of TNode, TComponent).EnumMoveNext
    fullName: Fusee.Xene.Visitor(Of TNode, TComponent).EnumMoveNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.Visitor{{TNode},{TComponent}}.EnumMoveNextNoComponent
  commentId: M:Fusee.Xene.Visitor{`1,`2}.EnumMoveNextNoComponent
  parent: Fusee.Xene.Visitor{{TNode},{TComponent}}
  definition: Fusee.Xene.Visitor`2.EnumMoveNextNoComponent
  name: EnumMoveNextNoComponent()
  nameWithType: Visitor<TNode, TComponent>.EnumMoveNextNoComponent()
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.EnumMoveNextNoComponent()
  nameWithType.vb: Visitor(Of TNode, TComponent).EnumMoveNextNoComponent()
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).EnumMoveNextNoComponent()
  spec.csharp:
  - uid: Fusee.Xene.Visitor`2.EnumMoveNextNoComponent
    name: EnumMoveNextNoComponent
    nameWithType: Visitor<TNode, TComponent>.EnumMoveNextNoComponent
    fullName: Fusee.Xene.Visitor<TNode, TComponent>.EnumMoveNextNoComponent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.Visitor`2.EnumMoveNextNoComponent
    name: EnumMoveNextNoComponent
    nameWithType: Visitor(Of TNode, TComponent).EnumMoveNextNoComponent
    fullName: Fusee.Xene.Visitor(Of TNode, TComponent).EnumMoveNextNoComponent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Fusee.Xene.Visitor`2
  commentId: T:Fusee.Xene.Visitor`2
  name: Visitor<TNode, TComponent>
  nameWithType: Visitor<TNode, TComponent>
  fullName: Fusee.Xene.Visitor<TNode, TComponent>
  nameWithType.vb: Visitor(Of TNode, TComponent)
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent)
  name.vb: Visitor(Of TNode, TComponent)
  spec.csharp:
  - uid: Fusee.Xene.Visitor`2
    name: Visitor
    nameWithType: Visitor
    fullName: Fusee.Xene.Visitor
  - name: <
    nameWithType: <
    fullName: <
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TComponent
    nameWithType: TComponent
    fullName: TComponent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Fusee.Xene.Visitor`2
    name: Visitor
    nameWithType: Visitor
    fullName: Fusee.Xene.Visitor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TComponent
    nameWithType: TComponent
    fullName: TComponent
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.ViseratorBase`3
  commentId: T:Fusee.Xene.ViseratorBase`3
  name: ViseratorBase<TItem, TNode, TComponent>
  nameWithType: ViseratorBase<TItem, TNode, TComponent>
  fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>
  nameWithType.vb: ViseratorBase(Of TItem, TNode, TComponent)
  fullName.vb: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent)
  name.vb: ViseratorBase(Of TItem, TNode, TComponent)
  spec.csharp:
  - uid: Fusee.Xene.ViseratorBase`3
    name: ViseratorBase
    nameWithType: ViseratorBase
    fullName: Fusee.Xene.ViseratorBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TComponent
    nameWithType: TComponent
    fullName: TComponent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Fusee.Xene.ViseratorBase`3
    name: ViseratorBase
    nameWithType: ViseratorBase
    fullName: Fusee.Xene.ViseratorBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TComponent
    nameWithType: TComponent
    fullName: TComponent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  commentId: T:System.Collections.Generic.IEnumerator`1
  isExternal: true
  name: IEnumerator<T>
  nameWithType: IEnumerator<T>
  fullName: System.Collections.Generic.IEnumerator<T>
  nameWithType.vb: IEnumerator(Of T)
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  name.vb: IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: Fusee.Xene.ViseratorBase`3.Init(System.Collections.Generic.IEnumerable{`1})
  commentId: M:Fusee.Xene.ViseratorBase`3.Init(System.Collections.Generic.IEnumerable{`1})
  isExternal: true
  name: Init(IEnumerable<TNode>)
  nameWithType: ViseratorBase<TItem, TNode, TComponent>.Init(IEnumerable<TNode>)
  fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.Init(System.Collections.Generic.IEnumerable<TNode>)
  nameWithType.vb: ViseratorBase(Of TItem, TNode, TComponent).Init(IEnumerable(Of TNode))
  fullName.vb: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).Init(System.Collections.Generic.IEnumerable(Of TNode))
  name.vb: Init(IEnumerable(Of TNode))
  spec.csharp:
  - uid: Fusee.Xene.ViseratorBase`3.Init(System.Collections.Generic.IEnumerable{`1})
    name: Init
    nameWithType: ViseratorBase<TItem, TNode, TComponent>.Init
    fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.ViseratorBase`3.Init(System.Collections.Generic.IEnumerable{`1})
    name: Init
    nameWithType: ViseratorBase(Of TItem, TNode, TComponent).Init
    fullName: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).Init
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.ViseratorBase`3.Dispose
  commentId: M:Fusee.Xene.ViseratorBase`3.Dispose
  name: Dispose()
  nameWithType: ViseratorBase<TItem, TNode, TComponent>.Dispose()
  fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.Dispose()
  nameWithType.vb: ViseratorBase(Of TItem, TNode, TComponent).Dispose()
  fullName.vb: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).Dispose()
  spec.csharp:
  - uid: Fusee.Xene.ViseratorBase`3.Dispose
    name: Dispose
    nameWithType: ViseratorBase<TItem, TNode, TComponent>.Dispose
    fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.ViseratorBase`3.Dispose
    name: Dispose
    nameWithType: ViseratorBase(Of TItem, TNode, TComponent).Dispose
    fullName: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).Dispose
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.ViseratorBase`3.MoveNext
  commentId: M:Fusee.Xene.ViseratorBase`3.MoveNext
  name: MoveNext()
  nameWithType: ViseratorBase<TItem, TNode, TComponent>.MoveNext()
  fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.MoveNext()
  nameWithType.vb: ViseratorBase(Of TItem, TNode, TComponent).MoveNext()
  fullName.vb: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).MoveNext()
  spec.csharp:
  - uid: Fusee.Xene.ViseratorBase`3.MoveNext
    name: MoveNext
    nameWithType: ViseratorBase<TItem, TNode, TComponent>.MoveNext
    fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.MoveNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.ViseratorBase`3.MoveNext
    name: MoveNext
    nameWithType: ViseratorBase(Of TItem, TNode, TComponent).MoveNext
    fullName: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).MoveNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.ViseratorBase`3.Reset
  commentId: M:Fusee.Xene.ViseratorBase`3.Reset
  name: Reset()
  nameWithType: ViseratorBase<TItem, TNode, TComponent>.Reset()
  fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.Reset()
  nameWithType.vb: ViseratorBase(Of TItem, TNode, TComponent).Reset()
  fullName.vb: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).Reset()
  spec.csharp:
  - uid: Fusee.Xene.ViseratorBase`3.Reset
    name: Reset
    nameWithType: ViseratorBase<TItem, TNode, TComponent>.Reset
    fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.ViseratorBase`3.Reset
    name: Reset
    nameWithType: ViseratorBase(Of TItem, TNode, TComponent).Reset
    fullName: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).Reset
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.ViseratorBase`3.Current
  commentId: P:Fusee.Xene.ViseratorBase`3.Current
  name: Current
  nameWithType: ViseratorBase<TItem, TNode, TComponent>.Current
  fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.Current
  nameWithType.vb: ViseratorBase(Of TItem, TNode, TComponent).Current
  fullName.vb: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).Current
- uid: Fusee.Xene.ViseratorBase`3.System#Collections#IEnumerator#Current
  commentId: P:Fusee.Xene.ViseratorBase`3.System#Collections#IEnumerator#Current
  name: IEnumerator.Current
  nameWithType: ViseratorBase<TItem, TNode, TComponent>.IEnumerator.Current
  fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.System.Collections.IEnumerator.Current
  nameWithType.vb: ViseratorBase(Of TItem, TNode, TComponent).System.Collections.IEnumerator.Current
  fullName.vb: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).System.Collections.IEnumerator.Current
  name.vb: System.Collections.IEnumerator.Current
- uid: Fusee.Xene.ViseratorBase`3.YieldItem(`0)
  commentId: M:Fusee.Xene.ViseratorBase`3.YieldItem(`0)
  name: YieldItem(TItem)
  nameWithType: ViseratorBase<TItem, TNode, TComponent>.YieldItem(TItem)
  fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.YieldItem(TItem)
  nameWithType.vb: ViseratorBase(Of TItem, TNode, TComponent).YieldItem(TItem)
  fullName.vb: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).YieldItem(TItem)
  spec.csharp:
  - uid: Fusee.Xene.ViseratorBase`3.YieldItem(`0)
    name: YieldItem
    nameWithType: ViseratorBase<TItem, TNode, TComponent>.YieldItem
    fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.YieldItem
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.ViseratorBase`3.YieldItem(`0)
    name: YieldItem
    nameWithType: ViseratorBase(Of TItem, TNode, TComponent).YieldItem
    fullName: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).YieldItem
  - name: (
    nameWithType: (
    fullName: (
  - name: TItem
    nameWithType: TItem
    fullName: TItem
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.ViseratorBase`3.Viserate
  commentId: M:Fusee.Xene.ViseratorBase`3.Viserate
  name: Viserate()
  nameWithType: ViseratorBase<TItem, TNode, TComponent>.Viserate()
  fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.Viserate()
  nameWithType.vb: ViseratorBase(Of TItem, TNode, TComponent).Viserate()
  fullName.vb: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).Viserate()
  spec.csharp:
  - uid: Fusee.Xene.ViseratorBase`3.Viserate
    name: Viserate
    nameWithType: ViseratorBase<TItem, TNode, TComponent>.Viserate
    fullName: Fusee.Xene.ViseratorBase<TItem, TNode, TComponent>.Viserate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.ViseratorBase`3.Viserate
    name: Viserate
    nameWithType: ViseratorBase(Of TItem, TNode, TComponent).Viserate
    fullName: Fusee.Xene.ViseratorBase(Of TItem, TNode, TComponent).Viserate
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.Visitor`2.Traverse(`0)
  commentId: M:Fusee.Xene.Visitor`2.Traverse(`0)
  name: Traverse(TNode)
  nameWithType: Visitor<TNode, TComponent>.Traverse(TNode)
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.Traverse(TNode)
  nameWithType.vb: Visitor(Of TNode, TComponent).Traverse(TNode)
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).Traverse(TNode)
  spec.csharp:
  - uid: Fusee.Xene.Visitor`2.Traverse(`0)
    name: Traverse
    nameWithType: Visitor<TNode, TComponent>.Traverse
    fullName: Fusee.Xene.Visitor<TNode, TComponent>.Traverse
  - name: (
    nameWithType: (
    fullName: (
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.Visitor`2.Traverse(`0)
    name: Traverse
    nameWithType: Visitor(Of TNode, TComponent).Traverse
    fullName: Fusee.Xene.Visitor(Of TNode, TComponent).Traverse
  - name: (
    nameWithType: (
    fullName: (
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.Visitor`2.Traverse(System.Collections.Generic.IEnumerable{`0})
  commentId: M:Fusee.Xene.Visitor`2.Traverse(System.Collections.Generic.IEnumerable{`0})
  isExternal: true
  name: Traverse(IEnumerable<TNode>)
  nameWithType: Visitor<TNode, TComponent>.Traverse(IEnumerable<TNode>)
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.Traverse(System.Collections.Generic.IEnumerable<TNode>)
  nameWithType.vb: Visitor(Of TNode, TComponent).Traverse(IEnumerable(Of TNode))
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).Traverse(System.Collections.Generic.IEnumerable(Of TNode))
  name.vb: Traverse(IEnumerable(Of TNode))
  spec.csharp:
  - uid: Fusee.Xene.Visitor`2.Traverse(System.Collections.Generic.IEnumerable{`0})
    name: Traverse
    nameWithType: Visitor<TNode, TComponent>.Traverse
    fullName: Fusee.Xene.Visitor<TNode, TComponent>.Traverse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.Visitor`2.Traverse(System.Collections.Generic.IEnumerable{`0})
    name: Traverse
    nameWithType: Visitor(Of TNode, TComponent).Traverse
    fullName: Fusee.Xene.Visitor(Of TNode, TComponent).Traverse
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.Visitor`2.InitState
  commentId: M:Fusee.Xene.Visitor`2.InitState
  name: InitState()
  nameWithType: Visitor<TNode, TComponent>.InitState()
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.InitState()
  nameWithType.vb: Visitor(Of TNode, TComponent).InitState()
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).InitState()
  spec.csharp:
  - uid: Fusee.Xene.Visitor`2.InitState
    name: InitState
    nameWithType: Visitor<TNode, TComponent>.InitState
    fullName: Fusee.Xene.Visitor<TNode, TComponent>.InitState
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.Visitor`2.InitState
    name: InitState
    nameWithType: Visitor(Of TNode, TComponent).InitState
    fullName: Fusee.Xene.Visitor(Of TNode, TComponent).InitState
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.Visitor`2.PushState
  commentId: M:Fusee.Xene.Visitor`2.PushState
  name: PushState()
  nameWithType: Visitor<TNode, TComponent>.PushState()
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.PushState()
  nameWithType.vb: Visitor(Of TNode, TComponent).PushState()
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).PushState()
  spec.csharp:
  - uid: Fusee.Xene.Visitor`2.PushState
    name: PushState
    nameWithType: Visitor<TNode, TComponent>.PushState
    fullName: Fusee.Xene.Visitor<TNode, TComponent>.PushState
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.Visitor`2.PushState
    name: PushState
    nameWithType: Visitor(Of TNode, TComponent).PushState
    fullName: Fusee.Xene.Visitor(Of TNode, TComponent).PushState
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.Visitor`2.PopState
  commentId: M:Fusee.Xene.Visitor`2.PopState
  name: PopState()
  nameWithType: Visitor<TNode, TComponent>.PopState()
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.PopState()
  nameWithType.vb: Visitor(Of TNode, TComponent).PopState()
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).PopState()
  spec.csharp:
  - uid: Fusee.Xene.Visitor`2.PopState
    name: PopState
    nameWithType: Visitor<TNode, TComponent>.PopState
    fullName: Fusee.Xene.Visitor<TNode, TComponent>.PopState
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.Visitor`2.PopState
    name: PopState
    nameWithType: Visitor(Of TNode, TComponent).PopState
    fullName: Fusee.Xene.Visitor(Of TNode, TComponent).PopState
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.Visitor`2.CurrentNode
  commentId: P:Fusee.Xene.Visitor`2.CurrentNode
  name: CurrentNode
  nameWithType: Visitor<TNode, TComponent>.CurrentNode
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.CurrentNode
  nameWithType.vb: Visitor(Of TNode, TComponent).CurrentNode
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).CurrentNode
- uid: Fusee.Xene.Visitor`2.CurrentComponent
  commentId: P:Fusee.Xene.Visitor`2.CurrentComponent
  name: CurrentComponent
  nameWithType: Visitor<TNode, TComponent>.CurrentComponent
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.CurrentComponent
  nameWithType.vb: Visitor(Of TNode, TComponent).CurrentComponent
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).CurrentComponent
- uid: Fusee.Xene.Visitor`2.YieldOnCurrentNode
  commentId: P:Fusee.Xene.Visitor`2.YieldOnCurrentNode
  name: YieldOnCurrentNode
  nameWithType: Visitor<TNode, TComponent>.YieldOnCurrentNode
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.YieldOnCurrentNode
  nameWithType.vb: Visitor(Of TNode, TComponent).YieldOnCurrentNode
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).YieldOnCurrentNode
- uid: Fusee.Xene.Visitor`2.YieldOnCurrentComponent
  commentId: P:Fusee.Xene.Visitor`2.YieldOnCurrentComponent
  name: YieldOnCurrentComponent
  nameWithType: Visitor<TNode, TComponent>.YieldOnCurrentComponent
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.YieldOnCurrentComponent
  nameWithType.vb: Visitor(Of TNode, TComponent).YieldOnCurrentComponent
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).YieldOnCurrentComponent
- uid: Fusee.Xene.Visitor`2.YieldEnumeration
  commentId: P:Fusee.Xene.Visitor`2.YieldEnumeration
  name: YieldEnumeration
  nameWithType: Visitor<TNode, TComponent>.YieldEnumeration
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.YieldEnumeration
  nameWithType.vb: Visitor(Of TNode, TComponent).YieldEnumeration
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).YieldEnumeration
- uid: Fusee.Xene.Visitor`2.EnumInit(System.Collections.Generic.IEnumerator{`0})
  commentId: M:Fusee.Xene.Visitor`2.EnumInit(System.Collections.Generic.IEnumerator{`0})
  isExternal: true
  name: EnumInit(IEnumerator<TNode>)
  nameWithType: Visitor<TNode, TComponent>.EnumInit(IEnumerator<TNode>)
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.EnumInit(System.Collections.Generic.IEnumerator<TNode>)
  nameWithType.vb: Visitor(Of TNode, TComponent).EnumInit(IEnumerator(Of TNode))
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).EnumInit(System.Collections.Generic.IEnumerator(Of TNode))
  name.vb: EnumInit(IEnumerator(Of TNode))
  spec.csharp:
  - uid: Fusee.Xene.Visitor`2.EnumInit(System.Collections.Generic.IEnumerator{`0})
    name: EnumInit
    nameWithType: Visitor<TNode, TComponent>.EnumInit
    fullName: Fusee.Xene.Visitor<TNode, TComponent>.EnumInit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.Visitor`2.EnumInit(System.Collections.Generic.IEnumerator{`0})
    name: EnumInit
    nameWithType: Visitor(Of TNode, TComponent).EnumInit
    fullName: Fusee.Xene.Visitor(Of TNode, TComponent).EnumInit
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.Visitor`2.EnumMoveNext
  commentId: M:Fusee.Xene.Visitor`2.EnumMoveNext
  name: EnumMoveNext()
  nameWithType: Visitor<TNode, TComponent>.EnumMoveNext()
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.EnumMoveNext()
  nameWithType.vb: Visitor(Of TNode, TComponent).EnumMoveNext()
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).EnumMoveNext()
  spec.csharp:
  - uid: Fusee.Xene.Visitor`2.EnumMoveNext
    name: EnumMoveNext
    nameWithType: Visitor<TNode, TComponent>.EnumMoveNext
    fullName: Fusee.Xene.Visitor<TNode, TComponent>.EnumMoveNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.Visitor`2.EnumMoveNext
    name: EnumMoveNext
    nameWithType: Visitor(Of TNode, TComponent).EnumMoveNext
    fullName: Fusee.Xene.Visitor(Of TNode, TComponent).EnumMoveNext
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.Visitor`2.EnumMoveNextNoComponent
  commentId: M:Fusee.Xene.Visitor`2.EnumMoveNextNoComponent
  name: EnumMoveNextNoComponent()
  nameWithType: Visitor<TNode, TComponent>.EnumMoveNextNoComponent()
  fullName: Fusee.Xene.Visitor<TNode, TComponent>.EnumMoveNextNoComponent()
  nameWithType.vb: Visitor(Of TNode, TComponent).EnumMoveNextNoComponent()
  fullName.vb: Fusee.Xene.Visitor(Of TNode, TComponent).EnumMoveNextNoComponent()
  spec.csharp:
  - uid: Fusee.Xene.Visitor`2.EnumMoveNextNoComponent
    name: EnumMoveNextNoComponent
    nameWithType: Visitor<TNode, TComponent>.EnumMoveNextNoComponent
    fullName: Fusee.Xene.Visitor<TNode, TComponent>.EnumMoveNextNoComponent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.Visitor`2.EnumMoveNextNoComponent
    name: EnumMoveNextNoComponent
    nameWithType: Visitor(Of TNode, TComponent).EnumMoveNextNoComponent
    fullName: Fusee.Xene.Visitor(Of TNode, TComponent).EnumMoveNextNoComponent
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.IStateStack
  commentId: T:Fusee.Xene.IStateStack
  parent: Fusee.Xene
  name: IStateStack
  nameWithType: IStateStack
  fullName: Fusee.Xene.IStateStack
- uid: '{TState}'
  commentId: '!:TState'
  definition: TState
  name: TState
  nameWithType: TState
  fullName: TState
- uid: TState
  commentId: '!:TState'
  name: TState
  nameWithType: TState
  fullName: TState
- uid: Fusee.Xene.Viserator`4.#ctor*
  commentId: Overload:Fusee.Xene.Viserator`4.#ctor
  name: Viserator
  nameWithType: Viserator<TItem, TState, TNode, TComponent>.Viserator
  fullName: Fusee.Xene.Viserator<TItem, TState, TNode, TComponent>.Viserator
  nameWithType.vb: Viserator(Of TItem, TState, TNode, TComponent).Viserator
  fullName.vb: Fusee.Xene.Viserator(Of TItem, TState, TNode, TComponent).Viserator
- uid: Fusee.Xene.Viserator`4.Init*
  commentId: Overload:Fusee.Xene.Viserator`4.Init
  name: Init
  nameWithType: Viserator<TItem, TState, TNode, TComponent>.Init
  fullName: Fusee.Xene.Viserator<TItem, TState, TNode, TComponent>.Init
  nameWithType.vb: Viserator(Of TItem, TState, TNode, TComponent).Init
  fullName.vb: Fusee.Xene.Viserator(Of TItem, TState, TNode, TComponent).Init
- uid: System.Collections.Generic.IEnumerable{{TNode}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TNode>
  nameWithType: IEnumerable<TNode>
  fullName: System.Collections.Generic.IEnumerable<TNode>
  nameWithType.vb: IEnumerable(Of TNode)
  fullName.vb: System.Collections.Generic.IEnumerable(Of TNode)
  name.vb: IEnumerable(Of TNode)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TNode
    nameWithType: TNode
    fullName: TNode
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.Viserator`4.State
  commentId: F:Fusee.Xene.Viserator`4.State
  name: State
  nameWithType: Viserator<TItem, TState, TNode, TComponent>.State
  fullName: Fusee.Xene.Viserator<TItem, TState, TNode, TComponent>.State
  nameWithType.vb: Viserator(Of TItem, TState, TNode, TComponent).State
  fullName.vb: Fusee.Xene.Viserator(Of TItem, TState, TNode, TComponent).State
- uid: Fusee.Xene.Viserator`4.InitState*
  commentId: Overload:Fusee.Xene.Viserator`4.InitState
  name: InitState
  nameWithType: Viserator<TItem, TState, TNode, TComponent>.InitState
  fullName: Fusee.Xene.Viserator<TItem, TState, TNode, TComponent>.InitState
  nameWithType.vb: Viserator(Of TItem, TState, TNode, TComponent).InitState
  fullName.vb: Fusee.Xene.Viserator(Of TItem, TState, TNode, TComponent).InitState
- uid: Fusee.Xene.Viserator`4.PushState*
  commentId: Overload:Fusee.Xene.Viserator`4.PushState
  name: PushState
  nameWithType: Viserator<TItem, TState, TNode, TComponent>.PushState
  fullName: Fusee.Xene.Viserator<TItem, TState, TNode, TComponent>.PushState
  nameWithType.vb: Viserator(Of TItem, TState, TNode, TComponent).PushState
  fullName.vb: Fusee.Xene.Viserator(Of TItem, TState, TNode, TComponent).PushState
- uid: Fusee.Xene.Viserator`4.PopState*
  commentId: Overload:Fusee.Xene.Viserator`4.PopState
  name: PopState
  nameWithType: Viserator<TItem, TState, TNode, TComponent>.PopState
  fullName: Fusee.Xene.Viserator<TItem, TState, TNode, TComponent>.PopState
  nameWithType.vb: Viserator(Of TItem, TState, TNode, TComponent).PopState
  fullName.vb: Fusee.Xene.Viserator(Of TItem, TState, TNode, TComponent).PopState

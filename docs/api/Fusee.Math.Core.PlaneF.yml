### YamlMime:ManagedReference
items:
- uid: Fusee.Math.Core.PlaneF
  commentId: T:Fusee.Math.Core.PlaneF
  id: PlaneF
  parent: Fusee.Math.Core
  children:
  - Fusee.Math.Core.PlaneF.A
  - Fusee.Math.Core.PlaneF.AngleBetween(Fusee.Math.Core.PlaneF)
  - Fusee.Math.Core.PlaneF.B
  - Fusee.Math.Core.PlaneF.C
  - Fusee.Math.Core.PlaneF.D
  - Fusee.Math.Core.PlaneF.Equals(System.Object)
  - Fusee.Math.Core.PlaneF.GetHashCode
  - Fusee.Math.Core.PlaneF.InsideOrIntersecting(Fusee.Math.Core.AABBf)
  - Fusee.Math.Core.PlaneF.InsideOrIntersecting(Fusee.Math.Core.OBBf)
  - Fusee.Math.Core.PlaneF.Intersects(Fusee.Math.Core.AABBf)
  - Fusee.Math.Core.PlaneF.Intersects(Fusee.Math.Core.OBBf)
  - Fusee.Math.Core.PlaneF.Normal
  - Fusee.Math.Core.PlaneF.Normalize
  - Fusee.Math.Core.PlaneF.op_Equality(Fusee.Math.Core.PlaneF,Fusee.Math.Core.PlaneF)
  - Fusee.Math.Core.PlaneF.op_Inequality(Fusee.Math.Core.PlaneF,Fusee.Math.Core.PlaneF)
  - Fusee.Math.Core.PlaneF.op_Multiply(Fusee.Math.Core.PlaneF,System.Single)
  - Fusee.Math.Core.PlaneF.SignedDistanceFromPoint(Fusee.Math.Core.float3)
  langs:
  - csharp
  - vb
  name: PlaneF
  nameWithType: PlaneF
  fullName: Fusee.Math.Core.PlaneF
  type: Struct
  source:
    id: PlaneF
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\PlaneF.cs
    startLine: 10
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nRepresents a plane in the form of Ax + By + Cz = D. The following applies: Ax + Bx + Cz - D = 0.\nThe plane&apos;s normal equals n = (A, B, C) and may NOT necessarily be of unit length.\nThe plane divides a space into two half-spaces.The direction plane&apos;s normal vector defines the &quot;outer&quot; or negative half-space.\nPoints that lie in the positive half space of the plane do have a negative signed distance to the plane.\n"
  example: []
  syntax:
    content: public struct PlaneF
    content.vb: Public Structure PlaneF
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Fusee.Math.Core.PlaneF.A
  commentId: P:Fusee.Math.Core.PlaneF.A
  id: A
  parent: Fusee.Math.Core.PlaneF
  langs:
  - csharp
  - vb
  name: A
  nameWithType: PlaneF.A
  fullName: Fusee.Math.Core.PlaneF.A
  type: Property
  source:
    id: A
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\PlaneF.cs
    startLine: 15
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nThe A plane coefficient.\n"
  example: []
  syntax:
    content: public float A { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property A As Single
  overload: Fusee.Math.Core.PlaneF.A*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.PlaneF.B
  commentId: P:Fusee.Math.Core.PlaneF.B
  id: B
  parent: Fusee.Math.Core.PlaneF
  langs:
  - csharp
  - vb
  name: B
  nameWithType: PlaneF.B
  fullName: Fusee.Math.Core.PlaneF.B
  type: Property
  source:
    id: B
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\PlaneF.cs
    startLine: 32
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nThe B plane coefficient.\n"
  example: []
  syntax:
    content: public float B { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property B As Single
  overload: Fusee.Math.Core.PlaneF.B*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.PlaneF.C
  commentId: P:Fusee.Math.Core.PlaneF.C
  id: C
  parent: Fusee.Math.Core.PlaneF
  langs:
  - csharp
  - vb
  name: C
  nameWithType: PlaneF.C
  fullName: Fusee.Math.Core.PlaneF.C
  type: Property
  source:
    id: C
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\PlaneF.cs
    startLine: 49
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nThe C plane coefficient.\n"
  example: []
  syntax:
    content: public float C { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property C As Single
  overload: Fusee.Math.Core.PlaneF.C*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.PlaneF.D
  commentId: F:Fusee.Math.Core.PlaneF.D
  id: D
  parent: Fusee.Math.Core.PlaneF
  langs:
  - csharp
  - vb
  name: D
  nameWithType: PlaneF.D
  fullName: Fusee.Math.Core.PlaneF.D
  type: Field
  source:
    id: D
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\PlaneF.cs
    startLine: 66
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nThe D plane coefficient.\n"
  example: []
  syntax:
    content: public float D
    return:
      type: System.Single
    content.vb: Public D As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.PlaneF.Normal
  commentId: P:Fusee.Math.Core.PlaneF.Normal
  id: Normal
  parent: Fusee.Math.Core.PlaneF
  langs:
  - csharp
  - vb
  name: Normal
  nameWithType: PlaneF.Normal
  fullName: Fusee.Math.Core.PlaneF.Normal
  type: Property
  source:
    id: Normal
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\PlaneF.cs
    startLine: 71
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nThe plane&apos;s normal vector. May NOT be of unit length if the plane isn&apos;t normalized.\n"
  example: []
  syntax:
    content: public float3 Normal { get; }
    parameters: []
    return:
      type: Fusee.Math.Core.float3
    content.vb: Public ReadOnly Property Normal As float3
  overload: Fusee.Math.Core.PlaneF.Normal*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Math.Core.PlaneF.Normalize
  commentId: M:Fusee.Math.Core.PlaneF.Normalize
  id: Normalize
  parent: Fusee.Math.Core.PlaneF
  langs:
  - csharp
  - vb
  name: Normalize()
  nameWithType: PlaneF.Normalize()
  fullName: Fusee.Math.Core.PlaneF.Normalize()
  type: Method
  source:
    id: Normalize
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\PlaneF.cs
    startLine: 86
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nNormalizes this plane.\n"
  example: []
  syntax:
    content: public PlaneF Normalize()
    return:
      type: Fusee.Math.Core.PlaneF
    content.vb: Public Function Normalize As PlaneF
  overload: Fusee.Math.Core.PlaneF.Normalize*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.PlaneF.SignedDistanceFromPoint(Fusee.Math.Core.float3)
  commentId: M:Fusee.Math.Core.PlaneF.SignedDistanceFromPoint(Fusee.Math.Core.float3)
  id: SignedDistanceFromPoint(Fusee.Math.Core.float3)
  parent: Fusee.Math.Core.PlaneF
  langs:
  - csharp
  - vb
  name: SignedDistanceFromPoint(float3)
  nameWithType: PlaneF.SignedDistanceFromPoint(float3)
  fullName: Fusee.Math.Core.PlaneF.SignedDistanceFromPoint(Fusee.Math.Core.float3)
  type: Method
  source:
    id: SignedDistanceFromPoint
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\PlaneF.cs
    startLine: 106
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns the signed distance from a point to this plane.\nIf the plane isn&apos;t normalized this may not be the euclidean distance!\nFor normalized and unnormalized planes the following is true:\n1.If the distance is negative, the point lies in the negative half-space.\n2.If 0 = dist, the point lies in the plane.\n3.If the distance is positive the point lies in the positive half-space.\n"
  example: []
  syntax:
    content: public float SignedDistanceFromPoint(float3 pt)
    parameters:
    - id: pt
      type: Fusee.Math.Core.float3
      description: An arbitrary point.
    return:
      type: System.Single
    content.vb: Public Function SignedDistanceFromPoint(pt As float3) As Single
  overload: Fusee.Math.Core.PlaneF.SignedDistanceFromPoint*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.PlaneF.AngleBetween(Fusee.Math.Core.PlaneF)
  commentId: M:Fusee.Math.Core.PlaneF.AngleBetween(Fusee.Math.Core.PlaneF)
  id: AngleBetween(Fusee.Math.Core.PlaneF)
  parent: Fusee.Math.Core.PlaneF
  langs:
  - csharp
  - vb
  name: AngleBetween(PlaneF)
  nameWithType: PlaneF.AngleBetween(PlaneF)
  fullName: Fusee.Math.Core.PlaneF.AngleBetween(Fusee.Math.Core.PlaneF)
  type: Method
  source:
    id: AngleBetween
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\PlaneF.cs
    startLine: 115
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCalculates the angle between this plane and another one.\n"
  example: []
  syntax:
    content: public float AngleBetween(PlaneF other)
    parameters:
    - id: other
      type: Fusee.Math.Core.PlaneF
      description: The other plane to calculate the angle with.
    return:
      type: System.Single
    content.vb: Public Function AngleBetween(other As PlaneF) As Single
  overload: Fusee.Math.Core.PlaneF.AngleBetween*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.PlaneF.Intersects(Fusee.Math.Core.AABBf)
  commentId: M:Fusee.Math.Core.PlaneF.Intersects(Fusee.Math.Core.AABBf)
  id: Intersects(Fusee.Math.Core.AABBf)
  parent: Fusee.Math.Core.PlaneF
  langs:
  - csharp
  - vb
  name: Intersects(AABBf)
  nameWithType: PlaneF.Intersects(AABBf)
  fullName: Fusee.Math.Core.PlaneF.Intersects(Fusee.Math.Core.AABBf)
  type: Method
  source:
    id: Intersects
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\PlaneF.cs
    startLine: 133
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nTest whether a <xref href=\"Fusee.Math.Core.AABBf\" data-throw-if-not-resolved=\"false\"></xref> intersects this plane.\nSee: Ericson 2005, Real Time Collision Detection, p. 161 - 164\n"
  example: []
  syntax:
    content: public bool Intersects(AABBf aabb)
    parameters:
    - id: aabb
      type: Fusee.Math.Core.AABBf
      description: The axis aligned bounding box.
    return:
      type: System.Boolean
    content.vb: Public Function Intersects(aabb As AABBf) As Boolean
  overload: Fusee.Math.Core.PlaneF.Intersects*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.PlaneF.Intersects(Fusee.Math.Core.OBBf)
  commentId: M:Fusee.Math.Core.PlaneF.Intersects(Fusee.Math.Core.OBBf)
  id: Intersects(Fusee.Math.Core.OBBf)
  parent: Fusee.Math.Core.PlaneF
  langs:
  - csharp
  - vb
  name: Intersects(OBBf)
  nameWithType: PlaneF.Intersects(OBBf)
  fullName: Fusee.Math.Core.PlaneF.Intersects(Fusee.Math.Core.OBBf)
  type: Method
  source:
    id: Intersects
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\PlaneF.cs
    startLine: 146
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nTest whether a <xref href=\"Fusee.Math.Core.OBBf\" data-throw-if-not-resolved=\"false\"></xref> intersects this plane.\nSee: Ericson 2005, Real Time Collision Detection, p. 161 - 164\n"
  example: []
  syntax:
    content: public bool Intersects(OBBf obb)
    parameters:
    - id: obb
      type: Fusee.Math.Core.OBBf
      description: The axis aligned bounding box.
    return:
      type: System.Boolean
    content.vb: Public Function Intersects(obb As OBBf) As Boolean
  overload: Fusee.Math.Core.PlaneF.Intersects*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.PlaneF.InsideOrIntersecting(Fusee.Math.Core.AABBf)
  commentId: M:Fusee.Math.Core.PlaneF.InsideOrIntersecting(Fusee.Math.Core.AABBf)
  id: InsideOrIntersecting(Fusee.Math.Core.AABBf)
  parent: Fusee.Math.Core.PlaneF
  langs:
  - csharp
  - vb
  name: InsideOrIntersecting(AABBf)
  nameWithType: PlaneF.InsideOrIntersecting(AABBf)
  fullName: Fusee.Math.Core.PlaneF.InsideOrIntersecting(Fusee.Math.Core.AABBf)
  type: Method
  source:
    id: InsideOrIntersecting
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\PlaneF.cs
    startLine: 161
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nTest whether a <xref href=\"Fusee.Math.Core.AABBf\" data-throw-if-not-resolved=\"false\"></xref> intersects this plane.\nSee: Ericson 2005, Real Time Collision Detection, p. 161 - 164\nCAREFUL: the definition whats completely inside and outside is flipped in comparison to Ericson, \nbecause FUSEE defines a point with a negative signed distance to be inside.\n"
  example: []
  syntax:
    content: public bool InsideOrIntersecting(AABBf aabb)
    parameters:
    - id: aabb
      type: Fusee.Math.Core.AABBf
      description: The axis aligned bounding box.
    return:
      type: System.Boolean
    content.vb: Public Function InsideOrIntersecting(aabb As AABBf) As Boolean
  overload: Fusee.Math.Core.PlaneF.InsideOrIntersecting*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.PlaneF.InsideOrIntersecting(Fusee.Math.Core.OBBf)
  commentId: M:Fusee.Math.Core.PlaneF.InsideOrIntersecting(Fusee.Math.Core.OBBf)
  id: InsideOrIntersecting(Fusee.Math.Core.OBBf)
  parent: Fusee.Math.Core.PlaneF
  langs:
  - csharp
  - vb
  name: InsideOrIntersecting(OBBf)
  nameWithType: PlaneF.InsideOrIntersecting(OBBf)
  fullName: Fusee.Math.Core.PlaneF.InsideOrIntersecting(Fusee.Math.Core.OBBf)
  type: Method
  source:
    id: InsideOrIntersecting
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\PlaneF.cs
    startLine: 185
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nTest whether a <xref href=\"Fusee.Math.Core.AABBf\" data-throw-if-not-resolved=\"false\"></xref> intersects this plane.\nSee: Ericson 2005, Real Time Collision Detection, p. 161 - 164\nCAREFUL: the definition whats completely inside and outside is flipped in comparison to Ericson, \nbecause FUSEE defines a point with a negative signed distance to be inside.\n"
  example: []
  syntax:
    content: public bool InsideOrIntersecting(OBBf obb)
    parameters:
    - id: obb
      type: Fusee.Math.Core.OBBf
      description: The object oriented bounding box.
    return:
      type: System.Boolean
    content.vb: Public Function InsideOrIntersecting(obb As OBBf) As Boolean
  overload: Fusee.Math.Core.PlaneF.InsideOrIntersecting*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.PlaneF.op_Multiply(Fusee.Math.Core.PlaneF,System.Single)
  commentId: M:Fusee.Math.Core.PlaneF.op_Multiply(Fusee.Math.Core.PlaneF,System.Single)
  id: op_Multiply(Fusee.Math.Core.PlaneF,System.Single)
  parent: Fusee.Math.Core.PlaneF
  langs:
  - csharp
  - vb
  name: Multiply(PlaneF, Single)
  nameWithType: PlaneF.Multiply(PlaneF, Single)
  fullName: Fusee.Math.Core.PlaneF.Multiply(Fusee.Math.Core.PlaneF, System.Single)
  type: Operator
  source:
    id: op_Multiply
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\PlaneF.cs
    startLine: 240
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nOperator override for multiplying a Plane with a float.\n"
  example: []
  syntax:
    content: public static PlaneF operator *(PlaneF plane, float scalar)
    parameters:
    - id: plane
      type: Fusee.Math.Core.PlaneF
      description: The plane.
    - id: scalar
      type: System.Single
      description: The scalar value.
    return:
      type: Fusee.Math.Core.PlaneF
      description: ''
    content.vb: Public Shared Operator *(plane As PlaneF, scalar As Single) As PlaneF
  overload: Fusee.Math.Core.PlaneF.op_Multiply*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.PlaneF.op_Equality(Fusee.Math.Core.PlaneF,Fusee.Math.Core.PlaneF)
  commentId: M:Fusee.Math.Core.PlaneF.op_Equality(Fusee.Math.Core.PlaneF,Fusee.Math.Core.PlaneF)
  id: op_Equality(Fusee.Math.Core.PlaneF,Fusee.Math.Core.PlaneF)
  parent: Fusee.Math.Core.PlaneF
  langs:
  - csharp
  - vb
  name: Equality(PlaneF, PlaneF)
  nameWithType: PlaneF.Equality(PlaneF, PlaneF)
  fullName: Fusee.Math.Core.PlaneF.Equality(Fusee.Math.Core.PlaneF, Fusee.Math.Core.PlaneF)
  type: Operator
  source:
    id: op_Equality
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\PlaneF.cs
    startLine: 256
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nOperator override for equality.\n"
  example: []
  syntax:
    content: public static bool operator ==(PlaneF left, PlaneF right)
    parameters:
    - id: left
      type: Fusee.Math.Core.PlaneF
      description: The plane.
    - id: right
      type: Fusee.Math.Core.PlaneF
      description: The scalar value.
    return:
      type: System.Boolean
    content.vb: Public Shared Operator =(left As PlaneF, right As PlaneF) As Boolean
  overload: Fusee.Math.Core.PlaneF.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.PlaneF.op_Inequality(Fusee.Math.Core.PlaneF,Fusee.Math.Core.PlaneF)
  commentId: M:Fusee.Math.Core.PlaneF.op_Inequality(Fusee.Math.Core.PlaneF,Fusee.Math.Core.PlaneF)
  id: op_Inequality(Fusee.Math.Core.PlaneF,Fusee.Math.Core.PlaneF)
  parent: Fusee.Math.Core.PlaneF
  langs:
  - csharp
  - vb
  name: Inequality(PlaneF, PlaneF)
  nameWithType: PlaneF.Inequality(PlaneF, PlaneF)
  fullName: Fusee.Math.Core.PlaneF.Inequality(Fusee.Math.Core.PlaneF, Fusee.Math.Core.PlaneF)
  type: Operator
  source:
    id: op_Inequality
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\PlaneF.cs
    startLine: 266
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nOperator override for inequality.\n"
  example: []
  syntax:
    content: public static bool operator !=(PlaneF left, PlaneF right)
    parameters:
    - id: left
      type: Fusee.Math.Core.PlaneF
      description: The plane.
    - id: right
      type: Fusee.Math.Core.PlaneF
      description: The scalar value.
    return:
      type: System.Boolean
    content.vb: Public Shared Operator <>(left As PlaneF, right As PlaneF) As Boolean
  overload: Fusee.Math.Core.PlaneF.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.PlaneF.Equals(System.Object)
  commentId: M:Fusee.Math.Core.PlaneF.Equals(System.Object)
  id: Equals(System.Object)
  parent: Fusee.Math.Core.PlaneF
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: PlaneF.Equals(Object)
  fullName: Fusee.Math.Core.PlaneF.Equals(System.Object)
  type: Method
  source:
    id: Equals
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\PlaneF.cs
    startLine: 276
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nIndicates whether this plane is equal to another object.\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: The object. This method will throw an exception if the object isn&apos;t of type <xref href="Fusee.Math.Core.PlaneF" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Fusee.Math.Core.PlaneF.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Fusee.Math.Core.PlaneF.GetHashCode
  commentId: M:Fusee.Math.Core.PlaneF.GetHashCode
  id: GetHashCode
  parent: Fusee.Math.Core.PlaneF
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: PlaneF.GetHashCode()
  fullName: Fusee.Math.Core.PlaneF.GetHashCode()
  type: Method
  source:
    id: GetHashCode
    path: C:\Users\test\Documents\fusee\Fusee\src\Math\Core\PlaneF.cs
    startLine: 291
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGenerates a hash code for this plane.\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: Fusee.Math.Core.PlaneF.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Fusee.Math.Core
  commentId: N:Fusee.Math.Core
  name: Fusee.Math.Core
  nameWithType: Fusee.Math.Core
  fullName: Fusee.Math.Core
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Fusee.Math.Core.PlaneF.A*
  commentId: Overload:Fusee.Math.Core.PlaneF.A
  name: A
  nameWithType: PlaneF.A
  fullName: Fusee.Math.Core.PlaneF.A
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Fusee.Math.Core.PlaneF.B*
  commentId: Overload:Fusee.Math.Core.PlaneF.B
  name: B
  nameWithType: PlaneF.B
  fullName: Fusee.Math.Core.PlaneF.B
- uid: Fusee.Math.Core.PlaneF.C*
  commentId: Overload:Fusee.Math.Core.PlaneF.C
  name: C
  nameWithType: PlaneF.C
  fullName: Fusee.Math.Core.PlaneF.C
- uid: Fusee.Math.Core.PlaneF.Normal*
  commentId: Overload:Fusee.Math.Core.PlaneF.Normal
  name: Normal
  nameWithType: PlaneF.Normal
  fullName: Fusee.Math.Core.PlaneF.Normal
- uid: Fusee.Math.Core.float3
  commentId: T:Fusee.Math.Core.float3
  parent: Fusee.Math.Core
  name: float3
  nameWithType: float3
  fullName: Fusee.Math.Core.float3
- uid: Fusee.Math.Core.PlaneF.Normalize*
  commentId: Overload:Fusee.Math.Core.PlaneF.Normalize
  name: Normalize
  nameWithType: PlaneF.Normalize
  fullName: Fusee.Math.Core.PlaneF.Normalize
- uid: Fusee.Math.Core.PlaneF
  commentId: T:Fusee.Math.Core.PlaneF
  parent: Fusee.Math.Core
  name: PlaneF
  nameWithType: PlaneF
  fullName: Fusee.Math.Core.PlaneF
- uid: Fusee.Math.Core.PlaneF.SignedDistanceFromPoint*
  commentId: Overload:Fusee.Math.Core.PlaneF.SignedDistanceFromPoint
  name: SignedDistanceFromPoint
  nameWithType: PlaneF.SignedDistanceFromPoint
  fullName: Fusee.Math.Core.PlaneF.SignedDistanceFromPoint
- uid: Fusee.Math.Core.PlaneF.AngleBetween*
  commentId: Overload:Fusee.Math.Core.PlaneF.AngleBetween
  name: AngleBetween
  nameWithType: PlaneF.AngleBetween
  fullName: Fusee.Math.Core.PlaneF.AngleBetween
- uid: Fusee.Math.Core.AABBf
  commentId: T:Fusee.Math.Core.AABBf
  parent: Fusee.Math.Core
  name: AABBf
  nameWithType: AABBf
  fullName: Fusee.Math.Core.AABBf
- uid: Fusee.Math.Core.PlaneF.Intersects*
  commentId: Overload:Fusee.Math.Core.PlaneF.Intersects
  name: Intersects
  nameWithType: PlaneF.Intersects
  fullName: Fusee.Math.Core.PlaneF.Intersects
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Fusee.Math.Core.OBBf
  commentId: T:Fusee.Math.Core.OBBf
  parent: Fusee.Math.Core
  name: OBBf
  nameWithType: OBBf
  fullName: Fusee.Math.Core.OBBf
- uid: Fusee.Math.Core.PlaneF.InsideOrIntersecting*
  commentId: Overload:Fusee.Math.Core.PlaneF.InsideOrIntersecting
  name: InsideOrIntersecting
  nameWithType: PlaneF.InsideOrIntersecting
  fullName: Fusee.Math.Core.PlaneF.InsideOrIntersecting
- uid: Fusee.Math.Core.PlaneF.op_Multiply*
  commentId: Overload:Fusee.Math.Core.PlaneF.op_Multiply
  name: Multiply
  nameWithType: PlaneF.Multiply
  fullName: Fusee.Math.Core.PlaneF.Multiply
- uid: Fusee.Math.Core.PlaneF.op_Equality*
  commentId: Overload:Fusee.Math.Core.PlaneF.op_Equality
  name: Equality
  nameWithType: PlaneF.Equality
  fullName: Fusee.Math.Core.PlaneF.Equality
- uid: Fusee.Math.Core.PlaneF.op_Inequality*
  commentId: Overload:Fusee.Math.Core.PlaneF.op_Inequality
  name: Inequality
  nameWithType: PlaneF.Inequality
  fullName: Fusee.Math.Core.PlaneF.Inequality
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Math.Core.PlaneF.Equals*
  commentId: Overload:Fusee.Math.Core.PlaneF.Equals
  name: Equals
  nameWithType: PlaneF.Equals
  fullName: Fusee.Math.Core.PlaneF.Equals
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Math.Core.PlaneF.GetHashCode*
  commentId: Overload:Fusee.Math.Core.PlaneF.GetHashCode
  name: GetHashCode
  nameWithType: PlaneF.GetHashCode
  fullName: Fusee.Math.Core.PlaneF.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32

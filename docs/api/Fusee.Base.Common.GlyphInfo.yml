### YamlMime:ManagedReference
items:
- uid: Fusee.Base.Common.GlyphInfo
  commentId: T:Fusee.Base.Common.GlyphInfo
  id: GlyphInfo
  parent: Fusee.Base.Common
  children:
  - Fusee.Base.Common.GlyphInfo.AdvanceX
  - Fusee.Base.Common.GlyphInfo.AdvanceY
  - Fusee.Base.Common.GlyphInfo.CharCode
  - Fusee.Base.Common.GlyphInfo.Height
  - Fusee.Base.Common.GlyphInfo.Width
  langs:
  - csharp
  - vb
  name: GlyphInfo
  nameWithType: GlyphInfo
  fullName: Fusee.Base.Common.GlyphInfo
  type: Struct
  source:
    id: GlyphInfo
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Common\IFontImp.cs
    startLine: 7
  assemblies:
  - Fusee.Base.Common
  namespace: Fusee.Base.Common
  summary: "\nA struct for saving character information needed for processing a font.\n"
  example: []
  syntax:
    content: public struct GlyphInfo
    content.vb: Public Structure GlyphInfo
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Fusee.Base.Common.GlyphInfo.CharCode
  commentId: F:Fusee.Base.Common.GlyphInfo.CharCode
  id: CharCode
  parent: Fusee.Base.Common.GlyphInfo
  langs:
  - csharp
  - vb
  name: CharCode
  nameWithType: GlyphInfo.CharCode
  fullName: Fusee.Base.Common.GlyphInfo.CharCode
  type: Field
  source:
    id: CharCode
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Common\IFontImp.cs
    startLine: 12
  assemblies:
  - Fusee.Base.Common
  namespace: Fusee.Base.Common
  summary: "\nThe unicode character code this information is for.\n"
  example: []
  syntax:
    content: public uint CharCode
    return:
      type: System.UInt32
    content.vb: Public CharCode As UInteger
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Base.Common.GlyphInfo.AdvanceX
  commentId: F:Fusee.Base.Common.GlyphInfo.AdvanceX
  id: AdvanceX
  parent: Fusee.Base.Common.GlyphInfo
  langs:
  - csharp
  - vb
  name: AdvanceX
  nameWithType: GlyphInfo.AdvanceX
  fullName: Fusee.Base.Common.GlyphInfo.AdvanceX
  type: Field
  source:
    id: AdvanceX
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Common\IFontImp.cs
    startLine: 17
  assemblies:
  - Fusee.Base.Common
  namespace: Fusee.Base.Common
  summary: "\nThe amount to advance the pen horizontally when drawing this glyph.\n"
  example: []
  syntax:
    content: public float AdvanceX
    return:
      type: System.Single
    content.vb: Public AdvanceX As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Base.Common.GlyphInfo.AdvanceY
  commentId: F:Fusee.Base.Common.GlyphInfo.AdvanceY
  id: AdvanceY
  parent: Fusee.Base.Common.GlyphInfo
  langs:
  - csharp
  - vb
  name: AdvanceY
  nameWithType: GlyphInfo.AdvanceY
  fullName: Fusee.Base.Common.GlyphInfo.AdvanceY
  type: Field
  source:
    id: AdvanceY
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Common\IFontImp.cs
    startLine: 23
  assemblies:
  - Fusee.Base.Common
  namespace: Fusee.Base.Common
  summary: "\nThe amount to advance the pen vertically when drawing this glyph. \nTypically 0 for western fonts/script systems.\n"
  example: []
  syntax:
    content: public float AdvanceY
    return:
      type: System.Single
    content.vb: Public AdvanceY As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Base.Common.GlyphInfo.Width
  commentId: F:Fusee.Base.Common.GlyphInfo.Width
  id: Width
  parent: Fusee.Base.Common.GlyphInfo
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: GlyphInfo.Width
  fullName: Fusee.Base.Common.GlyphInfo.Width
  type: Field
  source:
    id: Width
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Common\IFontImp.cs
    startLine: 28
  assemblies:
  - Fusee.Base.Common
  namespace: Fusee.Base.Common
  summary: "\nThe width of this glyph. \n"
  example: []
  syntax:
    content: public float Width
    return:
      type: System.Single
    content.vb: Public Width As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Base.Common.GlyphInfo.Height
  commentId: F:Fusee.Base.Common.GlyphInfo.Height
  id: Height
  parent: Fusee.Base.Common.GlyphInfo
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: GlyphInfo.Height
  fullName: Fusee.Base.Common.GlyphInfo.Height
  type: Field
  source:
    id: Height
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Common\IFontImp.cs
    startLine: 33
  assemblies:
  - Fusee.Base.Common
  namespace: Fusee.Base.Common
  summary: "\nThe height of this glyph.\n"
  example: []
  syntax:
    content: public float Height
    return:
      type: System.Single
    content.vb: Public Height As Single
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Fusee.Base.Common
  commentId: N:Fusee.Base.Common
  name: Fusee.Base.Common
  nameWithType: Fusee.Base.Common
  fullName: Fusee.Base.Common
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single

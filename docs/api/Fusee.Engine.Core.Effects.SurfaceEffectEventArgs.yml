### YamlMime:ManagedReference
items:
- uid: Fusee.Engine.Core.Effects.SurfaceEffectEventArgs
  commentId: T:Fusee.Engine.Core.Effects.SurfaceEffectEventArgs
  id: SurfaceEffectEventArgs
  parent: Fusee.Engine.Core.Effects
  children:
  - Fusee.Engine.Core.Effects.SurfaceEffectEventArgs.#ctor(System.Type,System.String,System.Object)
  - Fusee.Engine.Core.Effects.SurfaceEffectEventArgs.Name
  - Fusee.Engine.Core.Effects.SurfaceEffectEventArgs.Type
  - Fusee.Engine.Core.Effects.SurfaceEffectEventArgs.Value
  langs:
  - csharp
  - vb
  name: SurfaceEffectEventArgs
  nameWithType: SurfaceEffectEventArgs
  fullName: Fusee.Engine.Core.Effects.SurfaceEffectEventArgs
  type: Class
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Effects/SurfaceEffectEventArgs.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: SurfaceEffectEventArgs
    path: src/Fusee/src/Engine/Core/Effects/SurfaceEffectEventArgs.cs
    startLine: 7
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Effects
  summary: "\nEvent arguments for notifying a <xref href=\"Fusee.Engine.Core.Effects.SurfaceEffect\" data-throw-if-not-resolved=\"false\"></xref> about changes in a property of a class (for example see <xref href=\"Fusee.Engine.Core.Effects.ColorInput\" data-throw-if-not-resolved=\"false\"></xref>).\n"
  example: []
  syntax:
    content: 'public class SurfaceEffectEventArgs : EventArgs'
    content.vb: >-
      Public Class SurfaceEffectEventArgs
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Fusee.Engine.Core.Effects.SurfaceEffectEventArgs.Type
  commentId: F:Fusee.Engine.Core.Effects.SurfaceEffectEventArgs.Type
  id: Type
  parent: Fusee.Engine.Core.Effects.SurfaceEffectEventArgs
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: SurfaceEffectEventArgs.Type
  fullName: Fusee.Engine.Core.Effects.SurfaceEffectEventArgs.Type
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Effects/SurfaceEffectEventArgs.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Type
    path: src/Fusee/src/Engine/Core/Effects/SurfaceEffectEventArgs.cs
    startLine: 12
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Effects
  summary: "\nThe type of the property.\n"
  example: []
  syntax:
    content: public readonly Type Type
    return:
      type: System.Type
    content.vb: Public ReadOnly Type As Type
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Engine.Core.Effects.SurfaceEffectEventArgs.Name
  commentId: F:Fusee.Engine.Core.Effects.SurfaceEffectEventArgs.Name
  id: Name
  parent: Fusee.Engine.Core.Effects.SurfaceEffectEventArgs
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: SurfaceEffectEventArgs.Name
  fullName: Fusee.Engine.Core.Effects.SurfaceEffectEventArgs.Name
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Effects/SurfaceEffectEventArgs.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Name
    path: src/Fusee/src/Engine/Core/Effects/SurfaceEffectEventArgs.cs
    startLine: 17
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Effects
  summary: "\nThe name of the property.\n"
  example: []
  syntax:
    content: public readonly string Name
    return:
      type: System.String
    content.vb: Public ReadOnly Name As String
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Engine.Core.Effects.SurfaceEffectEventArgs.Value
  commentId: F:Fusee.Engine.Core.Effects.SurfaceEffectEventArgs.Value
  id: Value
  parent: Fusee.Engine.Core.Effects.SurfaceEffectEventArgs
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: SurfaceEffectEventArgs.Value
  fullName: Fusee.Engine.Core.Effects.SurfaceEffectEventArgs.Value
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Effects/SurfaceEffectEventArgs.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Value
    path: src/Fusee/src/Engine/Core/Effects/SurfaceEffectEventArgs.cs
    startLine: 22
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Effects
  summary: "\nThe value of the property.\n"
  example: []
  syntax:
    content: public readonly object Value
    return:
      type: System.Object
    content.vb: Public ReadOnly Value As Object
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Engine.Core.Effects.SurfaceEffectEventArgs.#ctor(System.Type,System.String,System.Object)
  commentId: M:Fusee.Engine.Core.Effects.SurfaceEffectEventArgs.#ctor(System.Type,System.String,System.Object)
  id: '#ctor(System.Type,System.String,System.Object)'
  parent: Fusee.Engine.Core.Effects.SurfaceEffectEventArgs
  langs:
  - csharp
  - vb
  name: SurfaceEffectEventArgs(Type, String, Object)
  nameWithType: SurfaceEffectEventArgs.SurfaceEffectEventArgs(Type, String, Object)
  fullName: Fusee.Engine.Core.Effects.SurfaceEffectEventArgs.SurfaceEffectEventArgs(System.Type, System.String, System.Object)
  type: Constructor
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Effects/SurfaceEffectEventArgs.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: .ctor
    path: src/Fusee/src/Engine/Core/Effects/SurfaceEffectEventArgs.cs
    startLine: 30
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Effects
  summary: "\nCreates a new instance of type &quot;SurfaceEffectEventArgs&quot;.\n"
  example: []
  syntax:
    content: public SurfaceEffectEventArgs(Type type, string name, object value)
    parameters:
    - id: type
      type: System.Type
      description: The type of the property.
    - id: name
      type: System.String
      description: The name of the property.
    - id: value
      type: System.Object
      description: The value of the property.
    content.vb: Public Sub New(type As Type, name As String, value As Object)
  overload: Fusee.Engine.Core.Effects.SurfaceEffectEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Fusee.Engine.Core.Effects.SurfaceEffect
  commentId: T:Fusee.Engine.Core.Effects.SurfaceEffect
  parent: Fusee.Engine.Core.Effects
  name: SurfaceEffect
  nameWithType: SurfaceEffect
  fullName: Fusee.Engine.Core.Effects.SurfaceEffect
- uid: Fusee.Engine.Core.Effects.ColorInput
  commentId: T:Fusee.Engine.Core.Effects.ColorInput
  parent: Fusee.Engine.Core.Effects
  name: ColorInput
  nameWithType: ColorInput
  fullName: Fusee.Engine.Core.Effects.ColorInput
- uid: Fusee.Engine.Core.Effects
  commentId: N:Fusee.Engine.Core.Effects
  name: Fusee.Engine.Core.Effects
  nameWithType: Fusee.Engine.Core.Effects
  fullName: Fusee.Engine.Core.Effects
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Fusee.Engine.Core.Effects.SurfaceEffectEventArgs.#ctor*
  commentId: Overload:Fusee.Engine.Core.Effects.SurfaceEffectEventArgs.#ctor
  name: SurfaceEffectEventArgs
  nameWithType: SurfaceEffectEventArgs.SurfaceEffectEventArgs
  fullName: Fusee.Engine.Core.Effects.SurfaceEffectEventArgs.SurfaceEffectEventArgs

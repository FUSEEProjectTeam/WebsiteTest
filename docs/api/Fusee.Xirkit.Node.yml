### YamlMime:ManagedReference
items:
- uid: Fusee.Xirkit.Node
  commentId: T:Fusee.Xirkit.Node
  id: Node
  parent: Fusee.Xirkit
  children:
  - Fusee.Xirkit.Node.#ctor(System.Object)
  - Fusee.Xirkit.Node.AllPinsActual
  - Fusee.Xirkit.Node.Attach(System.String,Fusee.Xirkit.Node,System.String)
  - Fusee.Xirkit.Node.InPins
  - Fusee.Xirkit.Node.O
  - Fusee.Xirkit.Node.OutPins
  - Fusee.Xirkit.Node.Propagate
  - Fusee.Xirkit.Node.RemoveAllPins
  - Fusee.Xirkit.Node.Reset
  langs:
  - csharp
  - vb
  name: Node
  nameWithType: Node
  fullName: Fusee.Xirkit.Node
  type: Class
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xirkit/Node.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Node
    path: src/Fusee/src/Xirkit/Node.cs
    startLine: 18
  assemblies:
  - Fusee.Xirkit
  namespace: Fusee.Xirkit
  summary: "\n<p>\nMajor building block of the Xirkit library. Each <xref href=\"Fusee.Xirkit.Circuit\" data-throw-if-not-resolved=\"false\"></xref> contains Node instances.\n</p>\n<p>\nA single object instance of any type can be hosted inside a node. This way any arbitrary object \ncan participate in a Circuit. Node instances within a <xref href=\"Fusee.Xirkit.Circuit\" data-throw-if-not-resolved=\"false\"></xref> are interconnected \nusing in-pins and out-pins.\nThe internal connection from pins to actual members (properties and fields) of the contained object\nare done using <xref href=\"Fusee.Xirkit.IMemberAccessor%601\" data-throw-if-not-resolved=\"false\"></xref>s.\n</p>\n"
  example: []
  syntax:
    content: public class Node
    content.vb: Public Class Node
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Fusee.Xirkit.Node.O
  commentId: P:Fusee.Xirkit.Node.O
  id: O
  parent: Fusee.Xirkit.Node
  langs:
  - csharp
  - vb
  name: O
  nameWithType: Node.O
  fullName: Fusee.Xirkit.Node.O
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xirkit/Node.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: O
    path: src/Fusee/src/Xirkit/Node.cs
    startLine: 33
  assemblies:
  - Fusee.Xirkit
  namespace: Fusee.Xirkit
  summary: "\nGets and sets the object to host by this node.\n"
  example: []
  syntax:
    content: public object O { get; set; }
    parameters: []
    return:
      type: System.Object
      description: "\nThe object to be hosted.\n"
    content.vb: Public Property O As Object
  overload: Fusee.Xirkit.Node.O*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Fusee.Xirkit.Node.#ctor(System.Object)
  commentId: M:Fusee.Xirkit.Node.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: Fusee.Xirkit.Node
  langs:
  - csharp
  - vb
  name: Node(Object)
  nameWithType: Node.Node(Object)
  fullName: Fusee.Xirkit.Node.Node(System.Object)
  type: Constructor
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xirkit/Node.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: .ctor
    path: src/Fusee/src/Xirkit/Node.cs
    startLine: 59
  assemblies:
  - Fusee.Xirkit
  namespace: Fusee.Xirkit
  summary: "\nConstructs a new node.\n"
  example: []
  syntax:
    content: public Node(object o)
    parameters:
    - id: o
      type: System.Object
      description: The object to be hosted.
    content.vb: Public Sub New(o As Object)
  overload: Fusee.Xirkit.Node.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Xirkit.Node.Reset
  commentId: M:Fusee.Xirkit.Node.Reset
  id: Reset
  parent: Fusee.Xirkit.Node
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: Node.Reset()
  fullName: Fusee.Xirkit.Node.Reset()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xirkit/Node.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Reset
    path: src/Fusee/src/Xirkit/Node.cs
    startLine: 81
  assemblies:
  - Fusee.Xirkit
  namespace: Fusee.Xirkit
  summary: "\nResets this instance by considering all in-pins to contain &quot;dirty&quot; values.\n"
  remarks: "\nKeeping a dirty/actual state on the in-pins is necessary if the node hosts\nan instance of <xref href=\"Fusee.Xirkit.ICalculationPerformer\" data-throw-if-not-resolved=\"false\"></xref>. In this case the calculation\nshould only be performed once in an execution step and not each time an in-pin\nchanges its value.\n"
  example: []
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  overload: Fusee.Xirkit.Node.Reset*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Xirkit.Node.Attach(System.String,Fusee.Xirkit.Node,System.String)
  commentId: M:Fusee.Xirkit.Node.Attach(System.String,Fusee.Xirkit.Node,System.String)
  id: Attach(System.String,Fusee.Xirkit.Node,System.String)
  parent: Fusee.Xirkit.Node
  langs:
  - csharp
  - vb
  name: Attach(String, Node, String)
  nameWithType: Node.Attach(String, Node, String)
  fullName: Fusee.Xirkit.Node.Attach(System.String, Fusee.Xirkit.Node, System.String)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xirkit/Node.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Attach
    path: src/Fusee/src/Xirkit/Node.cs
    startLine: 100
  assemblies:
  - Fusee.Xirkit
  namespace: Fusee.Xirkit
  summary: "\nAttaches this Node&apos;s object&apos;s member (specified by thisMember) as outgoing pin to the specified member of the object hosted by the other node. \nA member can be any field or property.\n"
  remarks: "\nThis is a high-level method users can call to do the wiring inside a <xref href=\"Fusee.Xirkit.Circuit\" data-throw-if-not-resolved=\"false\"></xref>. It creates all the necessary in- and out-pins\ntogether with their respective member accessors.\n"
  example: []
  syntax:
    content: public void Attach(string thisMemberOut, Node other, string otherMemberIn)
    parameters:
    - id: thisMemberOut
      type: System.String
      description: The member of this node emitting values.
    - id: other
      type: Fusee.Xirkit.Node
      description: The other node.
    - id: otherMemberIn
      type: System.String
      description: The other node&apos;s object&apos;s member receiving values.
    content.vb: Public Sub Attach(thisMemberOut As String, other As Node, otherMemberIn As String)
  overload: Fusee.Xirkit.Node.Attach*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Xirkit.Node.Propagate
  commentId: M:Fusee.Xirkit.Node.Propagate
  id: Propagate
  parent: Fusee.Xirkit.Node
  langs:
  - csharp
  - vb
  name: Propagate()
  nameWithType: Node.Propagate()
  fullName: Fusee.Xirkit.Node.Propagate()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xirkit/Node.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Propagate
    path: src/Fusee/src/Xirkit/Node.cs
    startLine: 165
  assemblies:
  - Fusee.Xirkit
  namespace: Fusee.Xirkit
  summary: "\nPropagates the values at the object&apos;s members&apos; to all in-pins connected to each out-pin connected\nto a member of this Node&apos;s hosted object.\n"
  example: []
  syntax:
    content: public void Propagate()
    content.vb: Public Sub Propagate
  overload: Fusee.Xirkit.Node.Propagate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Xirkit.Node.OutPins
  commentId: P:Fusee.Xirkit.Node.OutPins
  id: OutPins
  parent: Fusee.Xirkit.Node
  langs:
  - csharp
  - vb
  name: OutPins
  nameWithType: Node.OutPins
  fullName: Fusee.Xirkit.Node.OutPins
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xirkit/Node.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: OutPins
    path: src/Fusee/src/Xirkit/Node.cs
    startLine: 182
  assemblies:
  - Fusee.Xirkit
  namespace: Fusee.Xirkit
  summary: "\nGets the out pins.\n"
  example: []
  syntax:
    content: public IEnumerable<IOutPin> OutPins { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Fusee.Xirkit.IOutPin}
      description: "\nThe out pins.\n"
    content.vb: Public ReadOnly Property OutPins As IEnumerable(Of IOutPin)
  overload: Fusee.Xirkit.Node.OutPins*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Xirkit.Node.InPins
  commentId: P:Fusee.Xirkit.Node.InPins
  id: InPins
  parent: Fusee.Xirkit.Node
  langs:
  - csharp
  - vb
  name: InPins
  nameWithType: Node.InPins
  fullName: Fusee.Xirkit.Node.InPins
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xirkit/Node.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: InPins
    path: src/Fusee/src/Xirkit/Node.cs
    startLine: 193
  assemblies:
  - Fusee.Xirkit
  namespace: Fusee.Xirkit
  summary: "\nGets the in pins.\n"
  example: []
  syntax:
    content: public IEnumerable<IInPin> InPins { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Fusee.Xirkit.IInPin}
      description: "\nThe in pins.\n"
    content.vb: Public ReadOnly Property InPins As IEnumerable(Of IInPin)
  overload: Fusee.Xirkit.Node.InPins*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Xirkit.Node.AllPinsActual
  commentId: P:Fusee.Xirkit.Node.AllPinsActual
  id: AllPinsActual
  parent: Fusee.Xirkit.Node
  langs:
  - csharp
  - vb
  name: AllPinsActual
  nameWithType: Node.AllPinsActual
  fullName: Fusee.Xirkit.Node.AllPinsActual
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xirkit/Node.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: AllPinsActual
    path: src/Fusee/src/Xirkit/Node.cs
    startLine: 204
  assemblies:
  - Fusee.Xirkit
  namespace: Fusee.Xirkit
  summary: "\nGets a value indicating whether all in-pins have been updated actual since the last call to <xref href=\"Fusee.Xirkit.Node.Reset\" data-throw-if-not-resolved=\"false\"></xref>.\n"
  example: []
  syntax:
    content: public bool AllPinsActual { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if all pins are actual; otherwise, <code>false</code>.\n"
    content.vb: Public ReadOnly Property AllPinsActual As Boolean
  overload: Fusee.Xirkit.Node.AllPinsActual*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Xirkit.Node.RemoveAllPins
  commentId: M:Fusee.Xirkit.Node.RemoveAllPins
  id: RemoveAllPins
  parent: Fusee.Xirkit.Node
  langs:
  - csharp
  - vb
  name: RemoveAllPins()
  nameWithType: Node.RemoveAllPins()
  fullName: Fusee.Xirkit.Node.RemoveAllPins()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Xirkit/Node.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: RemoveAllPins
    path: src/Fusee/src/Xirkit/Node.cs
    startLine: 222
  assemblies:
  - Fusee.Xirkit
  namespace: Fusee.Xirkit
  summary: "\nRemoves all pins.\n"
  example: []
  syntax:
    content: public void RemoveAllPins()
    content.vb: Public Sub RemoveAllPins
  overload: Fusee.Xirkit.Node.RemoveAllPins*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Fusee.Xirkit.Circuit
  commentId: T:Fusee.Xirkit.Circuit
  name: Circuit
  nameWithType: Circuit
  fullName: Fusee.Xirkit.Circuit
- uid: Fusee.Xirkit.IMemberAccessor`1
  commentId: T:Fusee.Xirkit.IMemberAccessor`1
  name: IMemberAccessor<T>
  nameWithType: IMemberAccessor<T>
  fullName: Fusee.Xirkit.IMemberAccessor<T>
  nameWithType.vb: IMemberAccessor(Of T)
  fullName.vb: Fusee.Xirkit.IMemberAccessor(Of T)
  name.vb: IMemberAccessor(Of T)
  spec.csharp:
  - uid: Fusee.Xirkit.IMemberAccessor`1
    name: IMemberAccessor
    nameWithType: IMemberAccessor
    fullName: Fusee.Xirkit.IMemberAccessor
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Fusee.Xirkit.IMemberAccessor`1
    name: IMemberAccessor
    nameWithType: IMemberAccessor
    fullName: Fusee.Xirkit.IMemberAccessor
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xirkit
  commentId: N:Fusee.Xirkit
  name: Fusee.Xirkit
  nameWithType: Fusee.Xirkit
  fullName: Fusee.Xirkit
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Fusee.Xirkit.Node.O*
  commentId: Overload:Fusee.Xirkit.Node.O
  name: O
  nameWithType: Node.O
  fullName: Fusee.Xirkit.Node.O
- uid: Fusee.Xirkit.Node.#ctor*
  commentId: Overload:Fusee.Xirkit.Node.#ctor
  name: Node
  nameWithType: Node.Node
  fullName: Fusee.Xirkit.Node.Node
- uid: Fusee.Xirkit.ICalculationPerformer
  commentId: T:Fusee.Xirkit.ICalculationPerformer
  name: ICalculationPerformer
  nameWithType: ICalculationPerformer
  fullName: Fusee.Xirkit.ICalculationPerformer
- uid: Fusee.Xirkit.Node.Reset*
  commentId: Overload:Fusee.Xirkit.Node.Reset
  name: Reset
  nameWithType: Node.Reset
  fullName: Fusee.Xirkit.Node.Reset
- uid: Fusee.Xirkit.Node.Attach*
  commentId: Overload:Fusee.Xirkit.Node.Attach
  name: Attach
  nameWithType: Node.Attach
  fullName: Fusee.Xirkit.Node.Attach
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Fusee.Xirkit.Node
  commentId: T:Fusee.Xirkit.Node
  parent: Fusee.Xirkit
  name: Node
  nameWithType: Node
  fullName: Fusee.Xirkit.Node
- uid: Fusee.Xirkit.Node.Propagate*
  commentId: Overload:Fusee.Xirkit.Node.Propagate
  name: Propagate
  nameWithType: Node.Propagate
  fullName: Fusee.Xirkit.Node.Propagate
- uid: Fusee.Xirkit.Node.OutPins*
  commentId: Overload:Fusee.Xirkit.Node.OutPins
  name: OutPins
  nameWithType: Node.OutPins
  fullName: Fusee.Xirkit.Node.OutPins
- uid: System.Collections.Generic.IEnumerable{Fusee.Xirkit.IOutPin}
  commentId: T:System.Collections.Generic.IEnumerable{Fusee.Xirkit.IOutPin}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IOutPin>
  nameWithType: IEnumerable<IOutPin>
  fullName: System.Collections.Generic.IEnumerable<Fusee.Xirkit.IOutPin>
  nameWithType.vb: IEnumerable(Of IOutPin)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Fusee.Xirkit.IOutPin)
  name.vb: IEnumerable(Of IOutPin)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Fusee.Xirkit.IOutPin
    name: IOutPin
    nameWithType: IOutPin
    fullName: Fusee.Xirkit.IOutPin
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Fusee.Xirkit.IOutPin
    name: IOutPin
    nameWithType: IOutPin
    fullName: Fusee.Xirkit.IOutPin
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Fusee.Xirkit.Node.InPins*
  commentId: Overload:Fusee.Xirkit.Node.InPins
  name: InPins
  nameWithType: Node.InPins
  fullName: Fusee.Xirkit.Node.InPins
- uid: System.Collections.Generic.IEnumerable{Fusee.Xirkit.IInPin}
  commentId: T:System.Collections.Generic.IEnumerable{Fusee.Xirkit.IInPin}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IInPin>
  nameWithType: IEnumerable<IInPin>
  fullName: System.Collections.Generic.IEnumerable<Fusee.Xirkit.IInPin>
  nameWithType.vb: IEnumerable(Of IInPin)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Fusee.Xirkit.IInPin)
  name.vb: IEnumerable(Of IInPin)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Fusee.Xirkit.IInPin
    name: IInPin
    nameWithType: IInPin
    fullName: Fusee.Xirkit.IInPin
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Fusee.Xirkit.IInPin
    name: IInPin
    nameWithType: IInPin
    fullName: Fusee.Xirkit.IInPin
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xirkit.Node.Reset
  commentId: M:Fusee.Xirkit.Node.Reset
  isExternal: true
- uid: Fusee.Xirkit.Node.AllPinsActual*
  commentId: Overload:Fusee.Xirkit.Node.AllPinsActual
  name: AllPinsActual
  nameWithType: Node.AllPinsActual
  fullName: Fusee.Xirkit.Node.AllPinsActual
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Fusee.Xirkit.Node.RemoveAllPins*
  commentId: Overload:Fusee.Xirkit.Node.RemoveAllPins
  name: RemoveAllPins
  nameWithType: Node.RemoveAllPins
  fullName: Fusee.Xirkit.Node.RemoveAllPins

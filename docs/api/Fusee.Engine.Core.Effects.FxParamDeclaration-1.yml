### YamlMime:ManagedReference
items:
- uid: Fusee.Engine.Core.Effects.FxParamDeclaration`1
  commentId: T:Fusee.Engine.Core.Effects.FxParamDeclaration`1
  id: FxParamDeclaration`1
  parent: Fusee.Engine.Core.Effects
  children:
  - Fusee.Engine.Core.Effects.FxParamDeclaration`1.Fusee#Engine#Core#Effects#IFxParamDeclaration#UsedInShaders
  - Fusee.Engine.Core.Effects.FxParamDeclaration`1.Name
  - Fusee.Engine.Core.Effects.FxParamDeclaration`1.ParamType
  - Fusee.Engine.Core.Effects.FxParamDeclaration`1.Value
  langs:
  - csharp
  - vb
  name: FxParamDeclaration<T>
  nameWithType: FxParamDeclaration<T>
  fullName: Fusee.Engine.Core.Effects.FxParamDeclaration<T>
  type: Struct
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Effects/FxParamDeclaration.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: FxParamDeclaration
    path: src/Fusee/src/Engine/Core/Effects/FxParamDeclaration.cs
    startLine: 32
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Effects
  summary: "\nA data type for the list of (uniform) parameters possibly occurring in one of the shaders in the various passes.\nEach of this array entry consists of the parameter&apos;s name and its initial value. The concrete type of the object also indicates the\nparameter&apos;s type.\n"
  example: []
  syntax:
    content: 'public struct FxParamDeclaration<T> : IFxParamDeclaration'
    typeParameters:
    - id: T
    content.vb: >-
      Public Structure FxParamDeclaration(Of T)
          Implements IFxParamDeclaration
  implements:
  - Fusee.Engine.Core.Effects.IFxParamDeclaration
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: FxParamDeclaration(Of T)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
  fullName.vb: Fusee.Engine.Core.Effects.FxParamDeclaration(Of T)
  name.vb: FxParamDeclaration(Of T)
- uid: Fusee.Engine.Core.Effects.FxParamDeclaration`1.Name
  commentId: P:Fusee.Engine.Core.Effects.FxParamDeclaration`1.Name
  id: Name
  parent: Fusee.Engine.Core.Effects.FxParamDeclaration`1
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: FxParamDeclaration<T>.Name
  fullName: Fusee.Engine.Core.Effects.FxParamDeclaration<T>.Name
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Effects/FxParamDeclaration.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Name
    path: src/Fusee/src/Engine/Core/Effects/FxParamDeclaration.cs
    startLine: 38
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Effects
  summary: "\nThe name of the parameter.\n"
  example: []
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Fusee.Engine.Core.Effects.FxParamDeclaration`1.Name*
  implements:
  - Fusee.Engine.Core.Effects.IFxParamDeclaration.Name
  nameWithType.vb: FxParamDeclaration(Of T).Name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Fusee.Engine.Core.Effects.FxParamDeclaration(Of T).Name
- uid: Fusee.Engine.Core.Effects.FxParamDeclaration`1.Value
  commentId: F:Fusee.Engine.Core.Effects.FxParamDeclaration`1.Value
  id: Value
  parent: Fusee.Engine.Core.Effects.FxParamDeclaration`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: FxParamDeclaration<T>.Value
  fullName: Fusee.Engine.Core.Effects.FxParamDeclaration<T>.Value
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Effects/FxParamDeclaration.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Value
    path: src/Fusee/src/Engine/Core/Effects/FxParamDeclaration.cs
    startLine: 43
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Effects
  summary: "\nThe value of the parameter.\n"
  example: []
  syntax:
    content: public T Value
    return:
      type: '{T}'
    content.vb: Public Value As T
  nameWithType.vb: FxParamDeclaration(Of T).Value
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Fusee.Engine.Core.Effects.FxParamDeclaration(Of T).Value
- uid: Fusee.Engine.Core.Effects.FxParamDeclaration`1.ParamType
  commentId: P:Fusee.Engine.Core.Effects.FxParamDeclaration`1.ParamType
  id: ParamType
  parent: Fusee.Engine.Core.Effects.FxParamDeclaration`1
  langs:
  - csharp
  - vb
  name: ParamType
  nameWithType: FxParamDeclaration<T>.ParamType
  fullName: Fusee.Engine.Core.Effects.FxParamDeclaration<T>.ParamType
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Effects/FxParamDeclaration.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: ParamType
    path: src/Fusee/src/Engine/Core/Effects/FxParamDeclaration.cs
    startLine: 48
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Effects
  summary: "\nThe type of the parameter.\n"
  example: []
  syntax:
    content: public Type ParamType { get; }
    parameters: []
    return:
      type: System.Type
    content.vb: Public ReadOnly Property ParamType As Type
  overload: Fusee.Engine.Core.Effects.FxParamDeclaration`1.ParamType*
  implements:
  - Fusee.Engine.Core.Effects.IFxParamDeclaration.ParamType
  nameWithType.vb: FxParamDeclaration(Of T).ParamType
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Fusee.Engine.Core.Effects.FxParamDeclaration(Of T).ParamType
- uid: Fusee.Engine.Core.Effects.FxParamDeclaration`1.Fusee#Engine#Core#Effects#IFxParamDeclaration#UsedInShaders
  commentId: P:Fusee.Engine.Core.Effects.FxParamDeclaration`1.Fusee#Engine#Core#Effects#IFxParamDeclaration#UsedInShaders
  id: Fusee#Engine#Core#Effects#IFxParamDeclaration#UsedInShaders
  isEii: true
  parent: Fusee.Engine.Core.Effects.FxParamDeclaration`1
  langs:
  - csharp
  - vb
  name: IFxParamDeclaration.UsedInShaders
  nameWithType: FxParamDeclaration<T>.IFxParamDeclaration.UsedInShaders
  fullName: Fusee.Engine.Core.Effects.FxParamDeclaration<T>.Fusee.Engine.Core.Effects.IFxParamDeclaration.UsedInShaders
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Effects/FxParamDeclaration.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: Fusee.Engine.Core.Effects.IFxParamDeclaration.UsedInShaders
    path: src/Fusee/src/Engine/Core/Effects/FxParamDeclaration.cs
    startLine: 50
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Effects
  syntax:
    content: IEnumerable<ShaderCategory> IFxParamDeclaration.UsedInShaders { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Fusee.Engine.Core.Effects.ShaderCategory}
    content.vb: ReadOnly WriteOnly Property Fusee.Engine.Core.Effects.IFxParamDeclaration.UsedInShaders As IEnumerable(Of ShaderCategory) Implements IFxParamDeclaration.UsedInShaders
  overload: Fusee.Engine.Core.Effects.FxParamDeclaration`1.Fusee#Engine#Core#Effects#IFxParamDeclaration#UsedInShaders*
  implements:
  - Fusee.Engine.Core.Effects.IFxParamDeclaration.UsedInShaders
  nameWithType.vb: FxParamDeclaration(Of T).Fusee.Engine.Core.Effects.IFxParamDeclaration.UsedInShaders
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Fusee.Engine.Core.Effects.FxParamDeclaration(Of T).Fusee.Engine.Core.Effects.IFxParamDeclaration.UsedInShaders
  name.vb: Fusee.Engine.Core.Effects.IFxParamDeclaration.UsedInShaders
references:
- uid: Fusee.Engine.Core.Effects
  commentId: N:Fusee.Engine.Core.Effects
  name: Fusee.Engine.Core.Effects
  nameWithType: Fusee.Engine.Core.Effects
  fullName: Fusee.Engine.Core.Effects
- uid: Fusee.Engine.Core.Effects.IFxParamDeclaration
  commentId: T:Fusee.Engine.Core.Effects.IFxParamDeclaration
  parent: Fusee.Engine.Core.Effects
  name: IFxParamDeclaration
  nameWithType: IFxParamDeclaration
  fullName: Fusee.Engine.Core.Effects.IFxParamDeclaration
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Fusee.Engine.Core.Effects.FxParamDeclaration`1.Name*
  commentId: Overload:Fusee.Engine.Core.Effects.FxParamDeclaration`1.Name
  name: Name
  nameWithType: FxParamDeclaration<T>.Name
  fullName: Fusee.Engine.Core.Effects.FxParamDeclaration<T>.Name
  nameWithType.vb: FxParamDeclaration(Of T).Name
  fullName.vb: Fusee.Engine.Core.Effects.FxParamDeclaration(Of T).Name
- uid: Fusee.Engine.Core.Effects.IFxParamDeclaration.Name
  commentId: P:Fusee.Engine.Core.Effects.IFxParamDeclaration.Name
  parent: Fusee.Engine.Core.Effects.IFxParamDeclaration
  name: Name
  nameWithType: IFxParamDeclaration.Name
  fullName: Fusee.Engine.Core.Effects.IFxParamDeclaration.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Fusee.Engine.Core.Effects.FxParamDeclaration`1.ParamType*
  commentId: Overload:Fusee.Engine.Core.Effects.FxParamDeclaration`1.ParamType
  name: ParamType
  nameWithType: FxParamDeclaration<T>.ParamType
  fullName: Fusee.Engine.Core.Effects.FxParamDeclaration<T>.ParamType
  nameWithType.vb: FxParamDeclaration(Of T).ParamType
  fullName.vb: Fusee.Engine.Core.Effects.FxParamDeclaration(Of T).ParamType
- uid: Fusee.Engine.Core.Effects.IFxParamDeclaration.ParamType
  commentId: P:Fusee.Engine.Core.Effects.IFxParamDeclaration.ParamType
  parent: Fusee.Engine.Core.Effects.IFxParamDeclaration
  name: ParamType
  nameWithType: IFxParamDeclaration.ParamType
  fullName: Fusee.Engine.Core.Effects.IFxParamDeclaration.ParamType
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Fusee.Engine.Core.Effects.FxParamDeclaration`1.Fusee#Engine#Core#Effects#IFxParamDeclaration#UsedInShaders*
  commentId: Overload:Fusee.Engine.Core.Effects.FxParamDeclaration`1.Fusee#Engine#Core#Effects#IFxParamDeclaration#UsedInShaders
  name: IFxParamDeclaration.UsedInShaders
  nameWithType: FxParamDeclaration<T>.IFxParamDeclaration.UsedInShaders
  fullName: Fusee.Engine.Core.Effects.FxParamDeclaration<T>.Fusee.Engine.Core.Effects.IFxParamDeclaration.UsedInShaders
  nameWithType.vb: FxParamDeclaration(Of T).Fusee.Engine.Core.Effects.IFxParamDeclaration.UsedInShaders
  fullName.vb: Fusee.Engine.Core.Effects.FxParamDeclaration(Of T).Fusee.Engine.Core.Effects.IFxParamDeclaration.UsedInShaders
  name.vb: Fusee.Engine.Core.Effects.IFxParamDeclaration.UsedInShaders
- uid: Fusee.Engine.Core.Effects.IFxParamDeclaration.UsedInShaders
  commentId: P:Fusee.Engine.Core.Effects.IFxParamDeclaration.UsedInShaders
  parent: Fusee.Engine.Core.Effects.IFxParamDeclaration
  name: UsedInShaders
  nameWithType: IFxParamDeclaration.UsedInShaders
  fullName: Fusee.Engine.Core.Effects.IFxParamDeclaration.UsedInShaders
- uid: System.Collections.Generic.IEnumerable{Fusee.Engine.Core.Effects.ShaderCategory}
  commentId: T:System.Collections.Generic.IEnumerable{Fusee.Engine.Core.Effects.ShaderCategory}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<ShaderCategory>
  nameWithType: IEnumerable<ShaderCategory>
  fullName: System.Collections.Generic.IEnumerable<Fusee.Engine.Core.Effects.ShaderCategory>
  nameWithType.vb: IEnumerable(Of ShaderCategory)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Fusee.Engine.Core.Effects.ShaderCategory)
  name.vb: IEnumerable(Of ShaderCategory)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Fusee.Engine.Core.Effects.ShaderCategory
    name: ShaderCategory
    nameWithType: ShaderCategory
    fullName: Fusee.Engine.Core.Effects.ShaderCategory
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Fusee.Engine.Core.Effects.ShaderCategory
    name: ShaderCategory
    nameWithType: ShaderCategory
    fullName: Fusee.Engine.Core.Effects.ShaderCategory
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic

### YamlMime:ManagedReference
items:
- uid: Fusee.Math.Core.CurvePart
  commentId: T:Fusee.Math.Core.CurvePart
  id: CurvePart
  parent: Fusee.Math.Core
  children:
  - Fusee.Math.Core.CurvePart.CalcAdaptivePolyline(System.Int32)
  - Fusee.Math.Core.CurvePart.CalcAdaptivePolyline(System.Single)
  - Fusee.Math.Core.CurvePart.CalcUniformPolyline(System.Int32)
  - Fusee.Math.Core.CurvePart.CurveSegments
  - Fusee.Math.Core.CurvePart.IsClosed
  - Fusee.Math.Core.CurvePart.StartPoint
  langs:
  - csharp
  - vb
  name: CurvePart
  nameWithType: CurvePart
  fullName: Fusee.Math.Core.CurvePart
  type: Class
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Curve.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: CurvePart
    path: src/Fusee/src/Math/Core/Curve.cs
    startLine: 99
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nRepresents a open or closed part of a curve, using a list of CurveSegments and its starting point.\n"
  example: []
  syntax:
    content: public class CurvePart
    content.vb: Public Class CurvePart
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Fusee.Math.Core.CurvePart.IsClosed
  commentId: F:Fusee.Math.Core.CurvePart.IsClosed
  id: IsClosed
  parent: Fusee.Math.Core.CurvePart
  langs:
  - csharp
  - vb
  name: IsClosed
  nameWithType: CurvePart.IsClosed
  fullName: Fusee.Math.Core.CurvePart.IsClosed
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Curve.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: IsClosed
    path: src/Fusee/src/Math/Core/Curve.cs
    startLine: 104
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nA CurvePart can be closed or open.\n"
  example: []
  syntax:
    content: public bool IsClosed
    return:
      type: System.Boolean
    content.vb: Public IsClosed As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.CurvePart.StartPoint
  commentId: F:Fusee.Math.Core.CurvePart.StartPoint
  id: StartPoint
  parent: Fusee.Math.Core.CurvePart
  langs:
  - csharp
  - vb
  name: StartPoint
  nameWithType: CurvePart.StartPoint
  fullName: Fusee.Math.Core.CurvePart.StartPoint
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Curve.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: StartPoint
    path: src/Fusee/src/Math/Core/Curve.cs
    startLine: 109
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nThe starting point of the CurvePart.\n"
  example: []
  syntax:
    content: public float3 StartPoint
    return:
      type: Fusee.Math.Core.float3
    content.vb: Public StartPoint As float3
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.CurvePart.CurveSegments
  commentId: F:Fusee.Math.Core.CurvePart.CurveSegments
  id: CurveSegments
  parent: Fusee.Math.Core.CurvePart
  langs:
  - csharp
  - vb
  name: CurveSegments
  nameWithType: CurvePart.CurveSegments
  fullName: Fusee.Math.Core.CurvePart.CurveSegments
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Curve.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: CurveSegments
    path: src/Fusee/src/Math/Core/Curve.cs
    startLine: 114
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nThe segments making up the CurvePart.\n"
  example: []
  syntax:
    content: public IList<CurveSegment> CurveSegments
    return:
      type: System.Collections.Generic.IList{Fusee.Math.Core.CurveSegment}
    content.vb: Public CurveSegments As IList(Of CurveSegment)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.CurvePart.CalcUniformPolyline(System.Int32)
  commentId: M:Fusee.Math.Core.CurvePart.CalcUniformPolyline(System.Int32)
  id: CalcUniformPolyline(System.Int32)
  parent: Fusee.Math.Core.CurvePart
  langs:
  - csharp
  - vb
  name: CalcUniformPolyline(Int32)
  nameWithType: CurvePart.CalcUniformPolyline(Int32)
  fullName: Fusee.Math.Core.CurvePart.CalcUniformPolyline(System.Int32)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Curve.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: CalcUniformPolyline
    path: src/Fusee/src/Math/Core/Curve.cs
    startLine: 121
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCalculates a polygonal chain, representing the CurvePart.\n"
  example: []
  syntax:
    content: public IEnumerable<float3> CalcUniformPolyline(int subdiv)
    parameters:
    - id: subdiv
      type: System.Int32
      description: The number of subdivisions per CurveSegment.
    return:
      type: System.Collections.Generic.IEnumerable{Fusee.Math.Core.float3}
      description: ''
    content.vb: Public Function CalcUniformPolyline(subdiv As Integer) As IEnumerable(Of float3)
  overload: Fusee.Math.Core.CurvePart.CalcUniformPolyline*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.CurvePart.CalcAdaptivePolyline(System.Int32)
  commentId: M:Fusee.Math.Core.CurvePart.CalcAdaptivePolyline(System.Int32)
  id: CalcAdaptivePolyline(System.Int32)
  parent: Fusee.Math.Core.CurvePart
  langs:
  - csharp
  - vb
  name: CalcAdaptivePolyline(Int32)
  nameWithType: CurvePart.CalcAdaptivePolyline(Int32)
  fullName: Fusee.Math.Core.CurvePart.CalcAdaptivePolyline(System.Int32)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Curve.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: CalcAdaptivePolyline
    path: src/Fusee/src/Math/Core/Curve.cs
    startLine: 156
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nCalculates a polygonal chain, representing the curve part.\n"
  example: []
  syntax:
    content: public IEnumerable<float3> CalcAdaptivePolyline(int angle)
    parameters:
    - id: angle
      type: System.Int32
      description: Determines how far the angle may vary from 180Â°.
    return:
      type: System.Collections.Generic.IEnumerable{Fusee.Math.Core.float3}
      description: ''
    content.vb: Public Function CalcAdaptivePolyline(angle As Integer) As IEnumerable(Of float3)
  overload: Fusee.Math.Core.CurvePart.CalcAdaptivePolyline*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.CurvePart.CalcAdaptivePolyline(System.Single)
  commentId: M:Fusee.Math.Core.CurvePart.CalcAdaptivePolyline(System.Single)
  id: CalcAdaptivePolyline(System.Single)
  parent: Fusee.Math.Core.CurvePart
  langs:
  - csharp
  - vb
  name: CalcAdaptivePolyline(Single)
  nameWithType: CurvePart.CalcAdaptivePolyline(Single)
  fullName: Fusee.Math.Core.CurvePart.CalcAdaptivePolyline(System.Single)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Curve.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: CalcAdaptivePolyline
    path: src/Fusee/src/Math/Core/Curve.cs
    startLine: 191
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns a polygonal chain, representing the curve segment. Intermediate points are calculated adaptively.\n"
  example: []
  syntax:
    content: public IEnumerable<float3> CalcAdaptivePolyline(float acreage)
    parameters:
    - id: acreage
      type: System.Single
      description: Determines a maximal acreage for the triangle created from start point random point and end point.
    return:
      type: System.Collections.Generic.IEnumerable{Fusee.Math.Core.float3}
      description: ''
    content.vb: Public Function CalcAdaptivePolyline(acreage As Single) As IEnumerable(Of float3)
  overload: Fusee.Math.Core.CurvePart.CalcAdaptivePolyline*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Fusee.Math.Core
  commentId: N:Fusee.Math.Core
  name: Fusee.Math.Core
  nameWithType: Fusee.Math.Core
  fullName: Fusee.Math.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Fusee.Math.Core.float3
  commentId: T:Fusee.Math.Core.float3
  parent: Fusee.Math.Core
  name: float3
  nameWithType: float3
  fullName: Fusee.Math.Core.float3
- uid: System.Collections.Generic.IList{Fusee.Math.Core.CurveSegment}
  commentId: T:System.Collections.Generic.IList{Fusee.Math.Core.CurveSegment}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<CurveSegment>
  nameWithType: IList<CurveSegment>
  fullName: System.Collections.Generic.IList<Fusee.Math.Core.CurveSegment>
  nameWithType.vb: IList(Of CurveSegment)
  fullName.vb: System.Collections.Generic.IList(Of Fusee.Math.Core.CurveSegment)
  name.vb: IList(Of CurveSegment)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Fusee.Math.Core.CurveSegment
    name: CurveSegment
    nameWithType: CurveSegment
    fullName: Fusee.Math.Core.CurveSegment
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Fusee.Math.Core.CurveSegment
    name: CurveSegment
    nameWithType: CurveSegment
    fullName: Fusee.Math.Core.CurveSegment
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Fusee.Math.Core.CurvePart.CalcUniformPolyline*
  commentId: Overload:Fusee.Math.Core.CurvePart.CalcUniformPolyline
  name: CalcUniformPolyline
  nameWithType: CurvePart.CalcUniformPolyline
  fullName: Fusee.Math.Core.CurvePart.CalcUniformPolyline
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEnumerable{Fusee.Math.Core.float3}
  commentId: T:System.Collections.Generic.IEnumerable{Fusee.Math.Core.float3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<float3>
  nameWithType: IEnumerable<float3>
  fullName: System.Collections.Generic.IEnumerable<Fusee.Math.Core.float3>
  nameWithType.vb: IEnumerable(Of float3)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Fusee.Math.Core.float3)
  name.vb: IEnumerable(Of float3)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Fusee.Math.Core.float3
    name: float3
    nameWithType: float3
    fullName: Fusee.Math.Core.float3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Fusee.Math.Core.float3
    name: float3
    nameWithType: float3
    fullName: Fusee.Math.Core.float3
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Math.Core.CurvePart.CalcAdaptivePolyline*
  commentId: Overload:Fusee.Math.Core.CurvePart.CalcAdaptivePolyline
  name: CalcAdaptivePolyline
  nameWithType: CurvePart.CalcAdaptivePolyline
  fullName: Fusee.Math.Core.CurvePart.CalcAdaptivePolyline
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single

### YamlMime:ManagedReference
items:
- uid: Fusee.Engine.Core.Scene.AnimationTrack
  commentId: T:Fusee.Engine.Core.Scene.AnimationTrack
  id: AnimationTrack
  parent: Fusee.Engine.Core.Scene
  children:
  - Fusee.Engine.Core.Scene.AnimationTrack.KeyFrames
  - Fusee.Engine.Core.Scene.AnimationTrack.LerpType
  - Fusee.Engine.Core.Scene.AnimationTrack.Property
  - Fusee.Engine.Core.Scene.AnimationTrack.SceneComponent
  - Fusee.Engine.Core.Scene.AnimationTrack.TypeId
  langs:
  - csharp
  - vb
  name: AnimationTrack
  nameWithType: AnimationTrack
  fullName: Fusee.Engine.Core.Scene.AnimationTrack
  type: Class
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Scene/AnimationTrack.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: AnimationTrack
    path: src/Fusee/src/Engine/Core/Scene/AnimationTrack.cs
    startLine: 128
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Scene
  summary: "\nStores data about a single animation track (mainly a list of keyframes).\n"
  example: []
  syntax:
    content: public class AnimationTrack
    content.vb: Public Class AnimationTrack
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Fusee.Engine.Core.Scene.AnimationTrack.SceneComponent
  commentId: F:Fusee.Engine.Core.Scene.AnimationTrack.SceneComponent
  id: SceneComponent
  parent: Fusee.Engine.Core.Scene.AnimationTrack
  langs:
  - csharp
  - vb
  name: SceneComponent
  nameWithType: AnimationTrack.SceneComponent
  fullName: Fusee.Engine.Core.Scene.AnimationTrack.SceneComponent
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Scene/AnimationTrack.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: SceneComponent
    path: src/Fusee/src/Engine/Core/Scene/AnimationTrack.cs
    startLine: 133
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Scene
  summary: "\nThe scene component to be controlled by this animation track.\n"
  example: []
  syntax:
    content: public SceneComponent SceneComponent
    return:
      type: Fusee.Engine.Core.Scene.SceneComponent
    content.vb: Public SceneComponent As SceneComponent
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Engine.Core.Scene.AnimationTrack.Property
  commentId: F:Fusee.Engine.Core.Scene.AnimationTrack.Property
  id: Property
  parent: Fusee.Engine.Core.Scene.AnimationTrack
  langs:
  - csharp
  - vb
  name: Property
  nameWithType: AnimationTrack.Property
  fullName: Fusee.Engine.Core.Scene.AnimationTrack.Property
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Scene/AnimationTrack.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Property
    path: src/Fusee/src/Engine/Core/Scene/AnimationTrack.cs
    startLine: 138
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Scene
  summary: "\nThe name to the property/field to control. May be a dot-separated path to a sub-item (e.g. &quot;Transform.Position.x&quot;).\n"
  example: []
  syntax:
    content: public string Property
    return:
      type: System.String
    content.vb: Public Property As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Engine.Core.Scene.AnimationTrack.TypeId
  commentId: F:Fusee.Engine.Core.Scene.AnimationTrack.TypeId
  id: TypeId
  parent: Fusee.Engine.Core.Scene.AnimationTrack
  langs:
  - csharp
  - vb
  name: TypeId
  nameWithType: AnimationTrack.TypeId
  fullName: Fusee.Engine.Core.Scene.AnimationTrack.TypeId
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Scene/AnimationTrack.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: TypeId
    path: src/Fusee/src/Engine/Core/Scene/AnimationTrack.cs
    startLine: 143
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Scene
  summary: "\nThe type of the key-values stored in this animation track.\n"
  example: []
  syntax:
    content: public TypeId TypeId
    return:
      type: Fusee.Engine.Core.Scene.TypeId
    content.vb: Public TypeId As TypeId
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Engine.Core.Scene.AnimationTrack.LerpType
  commentId: F:Fusee.Engine.Core.Scene.AnimationTrack.LerpType
  id: LerpType
  parent: Fusee.Engine.Core.Scene.AnimationTrack
  langs:
  - csharp
  - vb
  name: LerpType
  nameWithType: AnimationTrack.LerpType
  fullName: Fusee.Engine.Core.Scene.AnimationTrack.LerpType
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Scene/AnimationTrack.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: LerpType
    path: src/Fusee/src/Engine/Core/Scene/AnimationTrack.cs
    startLine: 148
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Scene
  summary: "\nThe lerp type to use for interpolation. \n"
  example: []
  syntax:
    content: public LerpType LerpType
    return:
      type: Fusee.Engine.Core.Scene.LerpType
    content.vb: Public LerpType As LerpType
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Engine.Core.Scene.AnimationTrack.KeyFrames
  commentId: F:Fusee.Engine.Core.Scene.AnimationTrack.KeyFrames
  id: KeyFrames
  parent: Fusee.Engine.Core.Scene.AnimationTrack
  langs:
  - csharp
  - vb
  name: KeyFrames
  nameWithType: AnimationTrack.KeyFrames
  fullName: Fusee.Engine.Core.Scene.AnimationTrack.KeyFrames
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/Scene/AnimationTrack.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: KeyFrames
    path: src/Fusee/src/Engine/Core/Scene/AnimationTrack.cs
    startLine: 153
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Scene
  summary: "\nThe list of key frames ordered by time.\n"
  example: []
  syntax:
    content: public List<AnimationKeyBase> KeyFrames
    return:
      type: System.Collections.Generic.List{Fusee.Engine.Core.Scene.AnimationKeyBase}
    content.vb: Public KeyFrames As List(Of AnimationKeyBase)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Fusee.Engine.Core.Scene
  commentId: N:Fusee.Engine.Core.Scene
  name: Fusee.Engine.Core.Scene
  nameWithType: Fusee.Engine.Core.Scene
  fullName: Fusee.Engine.Core.Scene
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Fusee.Engine.Core.Scene.SceneComponent
  commentId: T:Fusee.Engine.Core.Scene.SceneComponent
  parent: Fusee.Engine.Core.Scene
  name: SceneComponent
  nameWithType: SceneComponent
  fullName: Fusee.Engine.Core.Scene.SceneComponent
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Fusee.Engine.Core.Scene.TypeId
  commentId: T:Fusee.Engine.Core.Scene.TypeId
  parent: Fusee.Engine.Core.Scene
  name: TypeId
  nameWithType: TypeId
  fullName: Fusee.Engine.Core.Scene.TypeId
- uid: Fusee.Engine.Core.Scene.LerpType
  commentId: T:Fusee.Engine.Core.Scene.LerpType
  parent: Fusee.Engine.Core.Scene
  name: LerpType
  nameWithType: LerpType
  fullName: Fusee.Engine.Core.Scene.LerpType
- uid: System.Collections.Generic.List{Fusee.Engine.Core.Scene.AnimationKeyBase}
  commentId: T:System.Collections.Generic.List{Fusee.Engine.Core.Scene.AnimationKeyBase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<AnimationKeyBase>
  nameWithType: List<AnimationKeyBase>
  fullName: System.Collections.Generic.List<Fusee.Engine.Core.Scene.AnimationKeyBase>
  nameWithType.vb: List(Of AnimationKeyBase)
  fullName.vb: System.Collections.Generic.List(Of Fusee.Engine.Core.Scene.AnimationKeyBase)
  name.vb: List(Of AnimationKeyBase)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Fusee.Engine.Core.Scene.AnimationKeyBase
    name: AnimationKeyBase
    nameWithType: AnimationKeyBase
    fullName: Fusee.Engine.Core.Scene.AnimationKeyBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Fusee.Engine.Core.Scene.AnimationKeyBase
    name: AnimationKeyBase
    nameWithType: AnimationKeyBase
    fullName: Fusee.Engine.Core.Scene.AnimationKeyBase
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic

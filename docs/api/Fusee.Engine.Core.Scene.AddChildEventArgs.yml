### YamlMime:ManagedReference
items:
- uid: Fusee.Engine.Core.Scene.AddChildEventArgs
  commentId: T:Fusee.Engine.Core.Scene.AddChildEventArgs
  id: AddChildEventArgs
  parent: Fusee.Engine.Core.Scene
  children:
  - Fusee.Engine.Core.Scene.AddChildEventArgs.#ctor(Fusee.Engine.Core.Scene.SceneNode)
  - Fusee.Engine.Core.Scene.AddChildEventArgs.Snc
  langs:
  - csharp
  - vb
  name: AddChildEventArgs
  nameWithType: AddChildEventArgs
  fullName: Fusee.Engine.Core.Scene.AddChildEventArgs
  type: Class
  source:
    id: AddChildEventArgs
    path: C:\Users\test\Documents\fusee\Fusee\src\Engine\Core\Scene\SceneNode.cs
    startLine: 10
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Scene
  summary: "\nEvent Arguments for adding a new child to a SceneNodeContainer and set its parent.\n"
  example: []
  syntax:
    content: 'public class AddChildEventArgs : EventArgs'
    content.vb: >-
      Public Class AddChildEventArgs

          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Fusee.Engine.Core.Scene.AddChildEventArgs.Snc
  commentId: P:Fusee.Engine.Core.Scene.AddChildEventArgs.Snc
  id: Snc
  parent: Fusee.Engine.Core.Scene.AddChildEventArgs
  langs:
  - csharp
  - vb
  name: Snc
  nameWithType: AddChildEventArgs.Snc
  fullName: Fusee.Engine.Core.Scene.AddChildEventArgs.Snc
  type: Property
  source:
    id: Snc
    path: C:\Users\test\Documents\fusee\Fusee\src\Engine\Core\Scene\SceneNode.cs
    startLine: 15
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Scene
  summary: "\nReturns the scene node container.\n"
  example: []
  syntax:
    content: public SceneNode Snc { get; }
    parameters: []
    return:
      type: Fusee.Engine.Core.Scene.SceneNode
    content.vb: Public ReadOnly Property Snc As SceneNode
  overload: Fusee.Engine.Core.Scene.AddChildEventArgs.Snc*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Engine.Core.Scene.AddChildEventArgs.#ctor(Fusee.Engine.Core.Scene.SceneNode)
  commentId: M:Fusee.Engine.Core.Scene.AddChildEventArgs.#ctor(Fusee.Engine.Core.Scene.SceneNode)
  id: '#ctor(Fusee.Engine.Core.Scene.SceneNode)'
  parent: Fusee.Engine.Core.Scene.AddChildEventArgs
  langs:
  - csharp
  - vb
  name: AddChildEventArgs(SceneNode)
  nameWithType: AddChildEventArgs.AddChildEventArgs(SceneNode)
  fullName: Fusee.Engine.Core.Scene.AddChildEventArgs.AddChildEventArgs(Fusee.Engine.Core.Scene.SceneNode)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\test\Documents\fusee\Fusee\src\Engine\Core\Scene\SceneNode.cs
    startLine: 20
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Scene
  summary: "\nAdds event arguments to a scene node container.\n"
  example: []
  syntax:
    content: public AddChildEventArgs(SceneNode snc)
    parameters:
    - id: snc
      type: Fusee.Engine.Core.Scene.SceneNode
      description: The scene node container <xref href="Fusee.Engine.Core.Scene.SceneNode" data-throw-if-not-resolved="false"></xref>/>
    content.vb: Public Sub New(snc As SceneNode)
  overload: Fusee.Engine.Core.Scene.AddChildEventArgs.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Fusee.Engine.Core.Scene
  commentId: N:Fusee.Engine.Core.Scene
  name: Fusee.Engine.Core.Scene
  nameWithType: Fusee.Engine.Core.Scene
  fullName: Fusee.Engine.Core.Scene
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Fusee.Engine.Core.Scene.AddChildEventArgs.Snc*
  commentId: Overload:Fusee.Engine.Core.Scene.AddChildEventArgs.Snc
  name: Snc
  nameWithType: AddChildEventArgs.Snc
  fullName: Fusee.Engine.Core.Scene.AddChildEventArgs.Snc
- uid: Fusee.Engine.Core.Scene.SceneNode
  commentId: T:Fusee.Engine.Core.Scene.SceneNode
  parent: Fusee.Engine.Core.Scene
  name: SceneNode
  nameWithType: SceneNode
  fullName: Fusee.Engine.Core.Scene.SceneNode
- uid: Fusee.Engine.Core.Scene.AddChildEventArgs.#ctor*
  commentId: Overload:Fusee.Engine.Core.Scene.AddChildEventArgs.#ctor
  name: AddChildEventArgs
  nameWithType: AddChildEventArgs.AddChildEventArgs
  fullName: Fusee.Engine.Core.Scene.AddChildEventArgs.AddChildEventArgs

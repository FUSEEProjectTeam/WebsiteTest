### YamlMime:ManagedReference
items:
- uid: Fusee.Xene.CollapsingStateStack`1
  commentId: T:Fusee.Xene.CollapsingStateStack`1
  id: CollapsingStateStack`1
  parent: Fusee.Xene
  children:
  - Fusee.Xene.CollapsingStateStack`1.#ctor(System.Int32)
  - Fusee.Xene.CollapsingStateStack`1.Clear
  - Fusee.Xene.CollapsingStateStack`1.Depth
  - Fusee.Xene.CollapsingStateStack`1.Pop
  - Fusee.Xene.CollapsingStateStack`1.Push
  - Fusee.Xene.CollapsingStateStack`1.Tos
  langs:
  - csharp
  - vb
  name: CollapsingStateStack<T>
  nameWithType: CollapsingStateStack<T>
  fullName: Fusee.Xene.CollapsingStateStack<T>
  type: Class
  source:
    id: CollapsingStateStack
    path: C:\Users\test\Documents\fusee\Fusee\src\Xene\VisitorState.cs
    startLine: 121
  assemblies:
  - Fusee.Xene
  namespace: Fusee.Xene
  summary: "\nAn <xref href=\"Fusee.Xene.IStateStack\" data-throw-if-not-resolved=\"false\"></xref> implementation behaving better in situations where many subsequent Push (and Pop) operations occur\nwithout actually altering the TOS contents. \n"
  remarks: "\nUsing instances of this class is recommended if the Type parameter is a large value type.\nDefines the <xref href=\"Fusee.Xene.CollapsingStateStack%601.Tos\" data-throw-if-not-resolved=\"false\"></xref> property granting read and write access the current Top of stack.\n<typeparam name=\"T\">The type of the entries stored within the stack.</typeparam>\n"
  example: []
  syntax:
    content: 'public class CollapsingStateStack<T> : IStateStack'
    typeParameters:
    - id: T
    content.vb: >-
      Public Class CollapsingStateStack(Of T)

          Implements IStateStack
  inheritance:
  - System.Object
  implements:
  - Fusee.Xene.IStateStack
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: CollapsingStateStack(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Fusee.Xene.CollapsingStateStack(Of T)
  name.vb: CollapsingStateStack(Of T)
- uid: Fusee.Xene.CollapsingStateStack`1.#ctor(System.Int32)
  commentId: M:Fusee.Xene.CollapsingStateStack`1.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Fusee.Xene.CollapsingStateStack`1
  langs:
  - csharp
  - vb
  name: CollapsingStateStack(Int32)
  nameWithType: CollapsingStateStack<T>.CollapsingStateStack(Int32)
  fullName: Fusee.Xene.CollapsingStateStack<T>.CollapsingStateStack(System.Int32)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\test\Documents\fusee\Fusee\src\Xene\VisitorState.cs
    startLine: 130
  assemblies:
  - Fusee.Xene
  namespace: Fusee.Xene
  summary: "\nInitializes a new instance of the <xref href=\"Fusee.Xene.CollapsingStateStack%601\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public CollapsingStateStack(int capacity = 4)
    parameters:
    - id: capacity
      type: System.Int32
      description: "The initial capacity of the stack. This is the expected maximum stack depth. \nIf the stack depth grows bigger, the stack automatically doubles its capacity internally."
    content.vb: Public Sub New(capacity As Integer = 4)
  overload: Fusee.Xene.CollapsingStateStack`1.#ctor*
  nameWithType.vb: CollapsingStateStack(Of T).CollapsingStateStack(Int32)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Fusee.Xene.CollapsingStateStack(Of T).CollapsingStateStack(System.Int32)
- uid: Fusee.Xene.CollapsingStateStack`1.Push
  commentId: M:Fusee.Xene.CollapsingStateStack`1.Push
  id: Push
  parent: Fusee.Xene.CollapsingStateStack`1
  langs:
  - csharp
  - vb
  name: Push()
  nameWithType: CollapsingStateStack<T>.Push()
  fullName: Fusee.Xene.CollapsingStateStack<T>.Push()
  type: Method
  source:
    id: Push
    path: C:\Users\test\Documents\fusee\Fusee\src\Xene\VisitorState.cs
    startLine: 144
  assemblies:
  - Fusee.Xene
  namespace: Fusee.Xene
  summary: "\nThe stack&apos;s Push operation. Increases the stack Depth about one and copies the top of stack.\n"
  example: []
  syntax:
    content: public void Push()
    content.vb: Public Sub Push
  overload: Fusee.Xene.CollapsingStateStack`1.Push*
  implements:
  - Fusee.Xene.IStateStack.Push
  nameWithType.vb: CollapsingStateStack(Of T).Push()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Fusee.Xene.CollapsingStateStack(Of T).Push()
- uid: Fusee.Xene.CollapsingStateStack`1.Pop
  commentId: M:Fusee.Xene.CollapsingStateStack`1.Pop
  id: Pop
  parent: Fusee.Xene.CollapsingStateStack`1
  langs:
  - csharp
  - vb
  name: Pop()
  nameWithType: CollapsingStateStack<T>.Pop()
  fullName: Fusee.Xene.CollapsingStateStack<T>.Pop()
  type: Method
  source:
    id: Pop
    path: C:\Users\test\Documents\fusee\Fusee\src\Xene\VisitorState.cs
    startLine: 154
  assemblies:
  - Fusee.Xene
  namespace: Fusee.Xene
  summary: "\nThe stack&apos;s Pop operation. Decreases the stack Depth about one and restores the previous state.\n"
  example: []
  syntax:
    content: public void Pop()
    content.vb: Public Sub Pop
  overload: Fusee.Xene.CollapsingStateStack`1.Pop*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: CollapsingState Stack depth is already 0. Cannot Pop stack.
  implements:
  - Fusee.Xene.IStateStack.Pop
  nameWithType.vb: CollapsingStateStack(Of T).Pop()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Fusee.Xene.CollapsingStateStack(Of T).Pop()
- uid: Fusee.Xene.CollapsingStateStack`1.Clear
  commentId: M:Fusee.Xene.CollapsingStateStack`1.Clear
  id: Clear
  parent: Fusee.Xene.CollapsingStateStack`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: CollapsingStateStack<T>.Clear()
  fullName: Fusee.Xene.CollapsingStateStack<T>.Clear()
  type: Method
  source:
    id: Clear
    path: C:\Users\test\Documents\fusee\Fusee\src\Xene\VisitorState.cs
    startLine: 174
  assemblies:
  - Fusee.Xene
  namespace: Fusee.Xene
  summary: "\nClears the stack. The Depth will be reset to zero.\n"
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
  overload: Fusee.Xene.CollapsingStateStack`1.Clear*
  implements:
  - Fusee.Xene.IStateStack.Clear
  nameWithType.vb: CollapsingStateStack(Of T).Clear()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Fusee.Xene.CollapsingStateStack(Of T).Clear()
- uid: Fusee.Xene.CollapsingStateStack`1.Depth
  commentId: P:Fusee.Xene.CollapsingStateStack`1.Depth
  id: Depth
  parent: Fusee.Xene.CollapsingStateStack`1
  langs:
  - csharp
  - vb
  name: Depth
  nameWithType: CollapsingStateStack<T>.Depth
  fullName: Fusee.Xene.CollapsingStateStack<T>.Depth
  type: Property
  source:
    id: Depth
    path: C:\Users\test\Documents\fusee\Fusee\src\Xene\VisitorState.cs
    startLine: 187
  assemblies:
  - Fusee.Xene
  namespace: Fusee.Xene
  summary: "\nRetrieves the stack&apos;s depth.\n"
  example: []
  syntax:
    content: public int Depth { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe current depth of the stack.\n"
    content.vb: Public ReadOnly Property Depth As Integer
  overload: Fusee.Xene.CollapsingStateStack`1.Depth*
  implements:
  - Fusee.Xene.IStateStack.Depth
  nameWithType.vb: CollapsingStateStack(Of T).Depth
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Fusee.Xene.CollapsingStateStack(Of T).Depth
- uid: Fusee.Xene.CollapsingStateStack`1.Tos
  commentId: P:Fusee.Xene.CollapsingStateStack`1.Tos
  id: Tos
  parent: Fusee.Xene.CollapsingStateStack`1
  langs:
  - csharp
  - vb
  name: Tos
  nameWithType: CollapsingStateStack<T>.Tos
  fullName: Fusee.Xene.CollapsingStateStack<T>.Tos
  type: Property
  source:
    id: Tos
    path: C:\Users\test\Documents\fusee\Fusee\src\Xene\VisitorState.cs
    startLine: 195
  assemblies:
  - Fusee.Xene
  namespace: Fusee.Xene
  summary: "\nGets and sets the Top of stack.\n"
  example: []
  syntax:
    content: public T Tos { get; set; }
    parameters: []
    return:
      type: '{T}'
      description: "\nThe top of stack.\n"
    content.vb: Public Property Tos As T
  overload: Fusee.Xene.CollapsingStateStack`1.Tos*
  nameWithType.vb: CollapsingStateStack(Of T).Tos
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Fusee.Xene.CollapsingStateStack(Of T).Tos
references:
- uid: Fusee.Xene.IStateStack
  commentId: T:Fusee.Xene.IStateStack
  parent: Fusee.Xene
  name: IStateStack
  nameWithType: IStateStack
  fullName: Fusee.Xene.IStateStack
- uid: Fusee.Xene.CollapsingStateStack`1.Tos
  commentId: P:Fusee.Xene.CollapsingStateStack`1.Tos
  isExternal: true
- uid: Fusee.Xene
  commentId: N:Fusee.Xene
  name: Fusee.Xene
  nameWithType: Fusee.Xene
  fullName: Fusee.Xene
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Fusee.Xene.CollapsingStateStack`1
  commentId: T:Fusee.Xene.CollapsingStateStack`1
  name: CollapsingStateStack<T>
  nameWithType: CollapsingStateStack<T>
  fullName: Fusee.Xene.CollapsingStateStack<T>
  nameWithType.vb: CollapsingStateStack(Of T)
  fullName.vb: Fusee.Xene.CollapsingStateStack(Of T)
  name.vb: CollapsingStateStack(Of T)
  spec.csharp:
  - uid: Fusee.Xene.CollapsingStateStack`1
    name: CollapsingStateStack
    nameWithType: CollapsingStateStack
    fullName: Fusee.Xene.CollapsingStateStack
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Fusee.Xene.CollapsingStateStack`1
    name: CollapsingStateStack
    nameWithType: CollapsingStateStack
    fullName: Fusee.Xene.CollapsingStateStack
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.CollapsingStateStack`1.#ctor*
  commentId: Overload:Fusee.Xene.CollapsingStateStack`1.#ctor
  name: CollapsingStateStack
  nameWithType: CollapsingStateStack<T>.CollapsingStateStack
  fullName: Fusee.Xene.CollapsingStateStack<T>.CollapsingStateStack
  nameWithType.vb: CollapsingStateStack(Of T).CollapsingStateStack
  fullName.vb: Fusee.Xene.CollapsingStateStack(Of T).CollapsingStateStack
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Fusee.Xene.CollapsingStateStack`1.Push*
  commentId: Overload:Fusee.Xene.CollapsingStateStack`1.Push
  name: Push
  nameWithType: CollapsingStateStack<T>.Push
  fullName: Fusee.Xene.CollapsingStateStack<T>.Push
  nameWithType.vb: CollapsingStateStack(Of T).Push
  fullName.vb: Fusee.Xene.CollapsingStateStack(Of T).Push
- uid: Fusee.Xene.IStateStack.Push
  commentId: M:Fusee.Xene.IStateStack.Push
  parent: Fusee.Xene.IStateStack
  name: Push()
  nameWithType: IStateStack.Push()
  fullName: Fusee.Xene.IStateStack.Push()
  spec.csharp:
  - uid: Fusee.Xene.IStateStack.Push
    name: Push
    nameWithType: IStateStack.Push
    fullName: Fusee.Xene.IStateStack.Push
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.IStateStack.Push
    name: Push
    nameWithType: IStateStack.Push
    fullName: Fusee.Xene.IStateStack.Push
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
- uid: Fusee.Xene.CollapsingStateStack`1.Pop*
  commentId: Overload:Fusee.Xene.CollapsingStateStack`1.Pop
  name: Pop
  nameWithType: CollapsingStateStack<T>.Pop
  fullName: Fusee.Xene.CollapsingStateStack<T>.Pop
  nameWithType.vb: CollapsingStateStack(Of T).Pop
  fullName.vb: Fusee.Xene.CollapsingStateStack(Of T).Pop
- uid: Fusee.Xene.IStateStack.Pop
  commentId: M:Fusee.Xene.IStateStack.Pop
  parent: Fusee.Xene.IStateStack
  name: Pop()
  nameWithType: IStateStack.Pop()
  fullName: Fusee.Xene.IStateStack.Pop()
  spec.csharp:
  - uid: Fusee.Xene.IStateStack.Pop
    name: Pop
    nameWithType: IStateStack.Pop
    fullName: Fusee.Xene.IStateStack.Pop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.IStateStack.Pop
    name: Pop
    nameWithType: IStateStack.Pop
    fullName: Fusee.Xene.IStateStack.Pop
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.CollapsingStateStack`1.Clear*
  commentId: Overload:Fusee.Xene.CollapsingStateStack`1.Clear
  name: Clear
  nameWithType: CollapsingStateStack<T>.Clear
  fullName: Fusee.Xene.CollapsingStateStack<T>.Clear
  nameWithType.vb: CollapsingStateStack(Of T).Clear
  fullName.vb: Fusee.Xene.CollapsingStateStack(Of T).Clear
- uid: Fusee.Xene.IStateStack.Clear
  commentId: M:Fusee.Xene.IStateStack.Clear
  parent: Fusee.Xene.IStateStack
  name: Clear()
  nameWithType: IStateStack.Clear()
  fullName: Fusee.Xene.IStateStack.Clear()
  spec.csharp:
  - uid: Fusee.Xene.IStateStack.Clear
    name: Clear
    nameWithType: IStateStack.Clear
    fullName: Fusee.Xene.IStateStack.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Xene.IStateStack.Clear
    name: Clear
    nameWithType: IStateStack.Clear
    fullName: Fusee.Xene.IStateStack.Clear
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Xene.CollapsingStateStack`1.Depth*
  commentId: Overload:Fusee.Xene.CollapsingStateStack`1.Depth
  name: Depth
  nameWithType: CollapsingStateStack<T>.Depth
  fullName: Fusee.Xene.CollapsingStateStack<T>.Depth
  nameWithType.vb: CollapsingStateStack(Of T).Depth
  fullName.vb: Fusee.Xene.CollapsingStateStack(Of T).Depth
- uid: Fusee.Xene.IStateStack.Depth
  commentId: P:Fusee.Xene.IStateStack.Depth
  parent: Fusee.Xene.IStateStack
  name: Depth
  nameWithType: IStateStack.Depth
  fullName: Fusee.Xene.IStateStack.Depth
- uid: Fusee.Xene.CollapsingStateStack`1.Tos*
  commentId: Overload:Fusee.Xene.CollapsingStateStack`1.Tos
  name: Tos
  nameWithType: CollapsingStateStack<T>.Tos
  fullName: Fusee.Xene.CollapsingStateStack<T>.Tos
  nameWithType.vb: CollapsingStateStack(Of T).Tos
  fullName.vb: Fusee.Xene.CollapsingStateStack(Of T).Tos
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T

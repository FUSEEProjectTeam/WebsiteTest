### YamlMime:ManagedReference
items:
- uid: Fusee.Engine.Core.TouchDevice
  commentId: T:Fusee.Engine.Core.TouchDevice
  id: TouchDevice
  parent: Fusee.Engine.Core
  children:
  - Fusee.Engine.Core.TouchDevice.#ctor(Fusee.Engine.Common.IInputDeviceImp)
  - Fusee.Engine.Core.TouchDevice.ActiveTouchpoints
  - Fusee.Engine.Core.TouchDevice.GetPosition(Fusee.Engine.Common.TouchPoints)
  - Fusee.Engine.Core.TouchDevice.GetTouchActive(Fusee.Engine.Common.TouchPoints)
  - Fusee.Engine.Core.TouchDevice.GetVelocity(Fusee.Engine.Common.TouchPoints)
  - Fusee.Engine.Core.TouchDevice.RegisterTtpAngleAxis
  - Fusee.Engine.Core.TouchDevice.RegisterTtpDistanceAxis
  - Fusee.Engine.Core.TouchDevice.RegisterTtpMidpointAxis(System.Int32,System.Int32,System.Int32,System.Int32,Fusee.Engine.Common.AxisDirection,System.String)
  - Fusee.Engine.Core.TouchDevice.TwoPoint
  - Fusee.Engine.Core.TouchDevice.TwoPointAngle
  - Fusee.Engine.Core.TouchDevice.TwoPointAngleVel
  - Fusee.Engine.Core.TouchDevice.TwoPointDistance
  - Fusee.Engine.Core.TouchDevice.TwoPointDistanceVel
  - Fusee.Engine.Core.TouchDevice.TwoPointGesture
  - Fusee.Engine.Core.TouchDevice.TwoPointMidPoint
  - Fusee.Engine.Core.TouchDevice.TwoPointMidPointVel
  langs:
  - csharp
  - vb
  name: TouchDevice
  nameWithType: TouchDevice
  fullName: Fusee.Engine.Core.TouchDevice
  type: Class
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/TouchDevice.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: TouchDevice
    path: src/Fusee/src/Engine/Core/TouchDevice.cs
    startLine: 49
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nSpecial case of an <xref href=\"Fusee.Engine.Core.InputDevice\" data-throw-if-not-resolved=\"false\"></xref> identifying itself as a <xref href=\"Fusee.Engine.Common.DeviceCategory.Touch\" data-throw-if-not-resolved=\"false\"></xref>.\nDefines convenience methods to access the touch buttons and axes.\n"
  remarks: "\nA touch device represents input typically performed by fingers or a stylus. Touch devices support\nsimultaneous presence of multiple touchpoints (performed by multiple fingers). Each touchpoint \nis captured by four axes and one button. The button state (pressed or not pressed) signals the presence\nof the respective axis. Two positional axes for each touchpoint reveal the position in X/Y screen space \nand two velocity axes represent the current velocity along X and Y.\n\nIn Addition to tracking individual touchpoints, this device also tracks the simultaneous movements of the \nfirst two active touchpoints and generates derived information, like two-point-move, pinch or rotate.\n"
  example: []
  syntax:
    content: 'public class TouchDevice : InputDevice'
    content.vb: >-
      Public Class TouchDevice
          Inherits InputDevice
  inheritance:
  - System.Object
  - Fusee.Engine.Core.InputDevice
  inheritedMembers:
  - Fusee.Engine.Core.InputDevice.NewAxisID
  - Fusee.Engine.Core.InputDevice.IsConnected
  - Fusee.Engine.Core.InputDevice.Id
  - Fusee.Engine.Core.InputDevice.Desc
  - Fusee.Engine.Core.InputDevice.Category
  - Fusee.Engine.Core.InputDevice.AxesCount
  - Fusee.Engine.Core.InputDevice.AxisDesc
  - Fusee.Engine.Core.InputDevice.GetAxisDescription(System.Int32)
  - Fusee.Engine.Core.InputDevice.GetAxis(System.Int32)
  - Fusee.Engine.Core.InputDevice.GetAxisRaw(System.Int32)
  - Fusee.Engine.Core.InputDevice.SetAxisDeadzone(System.Int32,System.Single)
  - Fusee.Engine.Core.InputDevice.GetAxisDeadzone(System.Int32)
  - Fusee.Engine.Core.InputDevice.AxisValueChanged
  - Fusee.Engine.Core.InputDevice.ButtonCount
  - Fusee.Engine.Core.InputDevice.ButtonDesc
  - Fusee.Engine.Core.InputDevice.GetButtonDescription(System.Int32)
  - Fusee.Engine.Core.InputDevice.GetButton(System.Int32)
  - Fusee.Engine.Core.InputDevice.IsButtonDown(System.Int32)
  - Fusee.Engine.Core.InputDevice.IsButtonUp(System.Int32)
  - Fusee.Engine.Core.InputDevice.ButtonValueChanged
  - Fusee.Engine.Core.InputDevice.RegisterCalculatedAxis(Fusee.Engine.Common.AxisDescription,Fusee.Engine.Core.InputDevice.AxisValueCalculator,System.Single)
  - Fusee.Engine.Core.InputDevice.RegisterVelocityAxis(System.Int32,System.Int32,System.Int32,System.String,Fusee.Engine.Common.AxisDirection)
  - Fusee.Engine.Core.InputDevice.RegisterSingleButtonAxis(System.Int32,Fusee.Engine.Common.AxisDirection,System.Single,System.Single,System.Int32,System.String)
  - Fusee.Engine.Core.InputDevice.RegisterTwoButtonAxis(System.Int32,System.Int32,Fusee.Engine.Common.AxisDirection,System.Single,System.Single,System.Int32,System.String)
  - Fusee.Engine.Core.InputDevice.PostRender
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Fusee.Engine.Core.TouchDevice.#ctor(Fusee.Engine.Common.IInputDeviceImp)
  commentId: M:Fusee.Engine.Core.TouchDevice.#ctor(Fusee.Engine.Common.IInputDeviceImp)
  id: '#ctor(Fusee.Engine.Common.IInputDeviceImp)'
  parent: Fusee.Engine.Core.TouchDevice
  langs:
  - csharp
  - vb
  name: TouchDevice(IInputDeviceImp)
  nameWithType: TouchDevice.TouchDevice(IInputDeviceImp)
  fullName: Fusee.Engine.Core.TouchDevice.TouchDevice(Fusee.Engine.Common.IInputDeviceImp)
  type: Constructor
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/TouchDevice.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: .ctor
    path: src/Fusee/src/Engine/Core/TouchDevice.cs
    startLine: 66
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nInitializes a new instance of the <xref href=\"Fusee.Engine.Core.TouchDevice\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public TouchDevice(IInputDeviceImp inpDeviceImp)
    parameters:
    - id: inpDeviceImp
      type: Fusee.Engine.Common.IInputDeviceImp
      description: The &quot;driver&quot;.
    content.vb: Public Sub New(inpDeviceImp As IInputDeviceImp)
  overload: Fusee.Engine.Core.TouchDevice.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Engine.Core.TouchDevice.RegisterTtpAngleAxis
  commentId: M:Fusee.Engine.Core.TouchDevice.RegisterTtpAngleAxis
  id: RegisterTtpAngleAxis
  parent: Fusee.Engine.Core.TouchDevice
  langs:
  - csharp
  - vb
  name: RegisterTtpAngleAxis()
  nameWithType: TouchDevice.RegisterTtpAngleAxis()
  fullName: Fusee.Engine.Core.TouchDevice.RegisterTtpAngleAxis()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/TouchDevice.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: RegisterTtpAngleAxis
    path: src/Fusee/src/Engine/Core/TouchDevice.cs
    startLine: 93
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nRegisters a new (Two-) touch point angle and returns the id.\n"
  example: []
  syntax:
    content: protected int RegisterTtpAngleAxis()
    return:
      type: System.Int32
      description: The id of the newly registered angle axis.
    content.vb: Protected Function RegisterTtpAngleAxis As Integer
  overload: Fusee.Engine.Core.TouchDevice.RegisterTtpAngleAxis*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Fusee.Engine.Core.TouchDevice.RegisterTtpDistanceAxis
  commentId: M:Fusee.Engine.Core.TouchDevice.RegisterTtpDistanceAxis
  id: RegisterTtpDistanceAxis
  parent: Fusee.Engine.Core.TouchDevice
  langs:
  - csharp
  - vb
  name: RegisterTtpDistanceAxis()
  nameWithType: TouchDevice.RegisterTtpDistanceAxis()
  fullName: Fusee.Engine.Core.TouchDevice.RegisterTtpDistanceAxis()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/TouchDevice.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: RegisterTtpDistanceAxis
    path: src/Fusee/src/Engine/Core/TouchDevice.cs
    startLine: 129
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nRegisters a new (Two-) touch point distance and returns its id.\n"
  example: []
  syntax:
    content: protected int RegisterTtpDistanceAxis()
    return:
      type: System.Int32
      description: The id of the newly registered distance.
    content.vb: Protected Function RegisterTtpDistanceAxis As Integer
  overload: Fusee.Engine.Core.TouchDevice.RegisterTtpDistanceAxis*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Fusee.Engine.Core.TouchDevice.RegisterTtpMidpointAxis(System.Int32,System.Int32,System.Int32,System.Int32,Fusee.Engine.Common.AxisDirection,System.String)
  commentId: M:Fusee.Engine.Core.TouchDevice.RegisterTtpMidpointAxis(System.Int32,System.Int32,System.Int32,System.Int32,Fusee.Engine.Common.AxisDirection,System.String)
  id: RegisterTtpMidpointAxis(System.Int32,System.Int32,System.Int32,System.Int32,Fusee.Engine.Common.AxisDirection,System.String)
  parent: Fusee.Engine.Core.TouchDevice
  langs:
  - csharp
  - vb
  name: RegisterTtpMidpointAxis(Int32, Int32, Int32, Int32, AxisDirection, String)
  nameWithType: TouchDevice.RegisterTtpMidpointAxis(Int32, Int32, Int32, Int32, AxisDirection, String)
  fullName: Fusee.Engine.Core.TouchDevice.RegisterTtpMidpointAxis(System.Int32, System.Int32, System.Int32, System.Int32, Fusee.Engine.Common.AxisDirection, System.String)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/TouchDevice.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: RegisterTtpMidpointAxis
    path: src/Fusee/src/Engine/Core/TouchDevice.cs
    startLine: 169
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nRegisters a new (Two-) touch point midpoint and returns its id.\n"
  example: []
  syntax:
    content: protected int RegisterTtpMidpointAxis(int axId0, int axId1, int axIdMin, int axIdMax, AxisDirection dir, string name)
    parameters:
    - id: axId0
      type: System.Int32
      description: The first point.
    - id: axId1
      type: System.Int32
      description: The second point.
    - id: axIdMin
      type: System.Int32
      description: The minimum value of the chosen axis.
    - id: axIdMax
      type: System.Int32
      description: The maximum value of the chosen axis.
    - id: dir
      type: Fusee.Engine.Common.AxisDirection
      description: The direction of the axis.
    - id: name
      type: System.String
      description: The name of the axis.
    return:
      type: System.Int32
      description: The id of the registered midpoint.
    content.vb: Protected Function RegisterTtpMidpointAxis(axId0 As Integer, axId1 As Integer, axIdMin As Integer, axIdMax As Integer, dir As AxisDirection, name As String) As Integer
  overload: Fusee.Engine.Core.TouchDevice.RegisterTtpMidpointAxis*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Fusee.Engine.Core.TouchDevice.GetTouchActive(Fusee.Engine.Common.TouchPoints)
  commentId: M:Fusee.Engine.Core.TouchDevice.GetTouchActive(Fusee.Engine.Common.TouchPoints)
  id: GetTouchActive(Fusee.Engine.Common.TouchPoints)
  parent: Fusee.Engine.Core.TouchDevice
  langs:
  - csharp
  - vb
  name: GetTouchActive(TouchPoints)
  nameWithType: TouchDevice.GetTouchActive(TouchPoints)
  fullName: Fusee.Engine.Core.TouchDevice.GetTouchActive(Fusee.Engine.Common.TouchPoints)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/TouchDevice.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: GetTouchActive
    path: src/Fusee/src/Engine/Core/TouchDevice.cs
    startLine: 206
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nReturns a value signaling if the given touchpoint is currently active (if something hits the screen).\n"
  example: []
  syntax:
    content: public bool GetTouchActive(TouchPoints touch)
    parameters:
    - id: touch
      type: Fusee.Engine.Common.TouchPoints
      description: The touchpoint to check.
    return:
      type: System.Boolean
      description: true if this touch is active (a finger is on the screen), otherwise false.
    content.vb: Public Function GetTouchActive(touch As TouchPoints) As Boolean
  overload: Fusee.Engine.Core.TouchDevice.GetTouchActive*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Engine.Core.TouchDevice.GetPosition(Fusee.Engine.Common.TouchPoints)
  commentId: M:Fusee.Engine.Core.TouchDevice.GetPosition(Fusee.Engine.Common.TouchPoints)
  id: GetPosition(Fusee.Engine.Common.TouchPoints)
  parent: Fusee.Engine.Core.TouchDevice
  langs:
  - csharp
  - vb
  name: GetPosition(TouchPoints)
  nameWithType: TouchDevice.GetPosition(TouchPoints)
  fullName: Fusee.Engine.Core.TouchDevice.GetPosition(Fusee.Engine.Common.TouchPoints)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/TouchDevice.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: GetPosition
    path: src/Fusee/src/Engine/Core/TouchDevice.cs
    startLine: 217
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nReturns the current position of the given touchpoint. \nThe returned values are only valid if <xref href=\"Fusee.Engine.Core.TouchDevice.GetTouchActive(Fusee.Engine.Common.TouchPoints)\" data-throw-if-not-resolved=\"false\"></xref> holds true for the same touchpoint.\n"
  example: []
  syntax:
    content: public float2 GetPosition(TouchPoints touch)
    parameters:
    - id: touch
      type: Fusee.Engine.Common.TouchPoints
      description: The touchpoint.
    return:
      type: Fusee.Math.Core.float2
      description: The X/Y position of the given touchpoint.
    content.vb: Public Function GetPosition(touch As TouchPoints) As float2
  overload: Fusee.Engine.Core.TouchDevice.GetPosition*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Engine.Core.TouchDevice.GetVelocity(Fusee.Engine.Common.TouchPoints)
  commentId: M:Fusee.Engine.Core.TouchDevice.GetVelocity(Fusee.Engine.Common.TouchPoints)
  id: GetVelocity(Fusee.Engine.Common.TouchPoints)
  parent: Fusee.Engine.Core.TouchDevice
  langs:
  - csharp
  - vb
  name: GetVelocity(TouchPoints)
  nameWithType: TouchDevice.GetVelocity(TouchPoints)
  fullName: Fusee.Engine.Core.TouchDevice.GetVelocity(Fusee.Engine.Common.TouchPoints)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/TouchDevice.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: GetVelocity
    path: src/Fusee/src/Engine/Core/TouchDevice.cs
    startLine: 231
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nRetrieves the current velocity (in pixels per second) of the given touch point. \nThe returned values are only valid if <xref href=\"Fusee.Engine.Core.TouchDevice.GetTouchActive(Fusee.Engine.Common.TouchPoints)\" data-throw-if-not-resolved=\"false\"></xref> holds true for the same touchpoint.\n"
  example: []
  syntax:
    content: public float2 GetVelocity(TouchPoints touch)
    parameters:
    - id: touch
      type: Fusee.Engine.Common.TouchPoints
      description: The touchpoint.
    return:
      type: Fusee.Math.Core.float2
      description: The two-dimensional velocity of the touchpoint.
    content.vb: Public Function GetVelocity(touch As TouchPoints) As float2
  overload: Fusee.Engine.Core.TouchDevice.GetVelocity*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Engine.Core.TouchDevice.ActiveTouchpoints
  commentId: P:Fusee.Engine.Core.TouchDevice.ActiveTouchpoints
  id: ActiveTouchpoints
  parent: Fusee.Engine.Core.TouchDevice
  langs:
  - csharp
  - vb
  name: ActiveTouchpoints
  nameWithType: TouchDevice.ActiveTouchpoints
  fullName: Fusee.Engine.Core.TouchDevice.ActiveTouchpoints
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/TouchDevice.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: ActiveTouchpoints
    path: src/Fusee/src/Engine/Core/TouchDevice.cs
    startLine: 245
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nRetrieves the number of currently active touchpoints (e.g. the number of fingers currently touching the screen).\n"
  example: []
  syntax:
    content: public int ActiveTouchpoints { get; }
    parameters: []
    return:
      type: System.Int32
      description: "\nThe number of active touchpoints.\n"
    content.vb: Public ReadOnly Property ActiveTouchpoints As Integer
  overload: Fusee.Engine.Core.TouchDevice.ActiveTouchpoints*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Engine.Core.TouchDevice.TwoPoint
  commentId: P:Fusee.Engine.Core.TouchDevice.TwoPoint
  id: TwoPoint
  parent: Fusee.Engine.Core.TouchDevice
  langs:
  - csharp
  - vb
  name: TwoPoint
  nameWithType: TouchDevice.TwoPoint
  fullName: Fusee.Engine.Core.TouchDevice.TwoPoint
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/TouchDevice.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: TwoPoint
    path: src/Fusee/src/Engine/Core/TouchDevice.cs
    startLine: 253
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nGets a value indicating whether two touchpoints are active.\n"
  example: []
  syntax:
    content: public bool TwoPoint { get; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n<code>true</code> if currently two touchpoints are active; otherwise, <code>false</code>.\n"
    content.vb: Public ReadOnly Property TwoPoint As Boolean
  overload: Fusee.Engine.Core.TouchDevice.TwoPoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Engine.Core.TouchDevice.TwoPointGesture
  commentId: P:Fusee.Engine.Core.TouchDevice.TwoPointGesture
  id: TwoPointGesture
  parent: Fusee.Engine.Core.TouchDevice
  langs:
  - csharp
  - vb
  name: TwoPointGesture
  nameWithType: TouchDevice.TwoPointGesture
  fullName: Fusee.Engine.Core.TouchDevice.TwoPointGesture
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/TouchDevice.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: TwoPointGesture
    path: src/Fusee/src/Engine/Core/TouchDevice.cs
    startLine: 277
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nGets a value indicating the <xref href=\"Fusee.Engine.Core.TwoPointAction\" data-throw-if-not-resolved=\"false\"></xref> currently performed with the highest intensity.\n"
  remarks: "\nTwo moving touchpoints on the screen can be interpreted in various ways. It&apos;s up to the application to interpret the two individual changes in position\nas <xref href=\"Fusee.Engine.Core.TwoPointAction.Move\" data-throw-if-not-resolved=\"false\"></xref> , as a <xref href=\"Fusee.Engine.Core.TwoPointAction.Rotate\" data-throw-if-not-resolved=\"false\"></xref> or as a <xref href=\"Fusee.Engine.Core.TwoPointAction.Pinch\" data-throw-if-not-resolved=\"false\"></xref> . Use this method to retrieve\na symbolic value which of these three possibilities is currently performed with the highest intensity. Applications should sensibly decide whether to \nallow to change their behavior during a two-point-gesture (as long as <xref href=\"Fusee.Engine.Core.TouchDevice.TwoPoint\" data-throw-if-not-resolved=\"false\"></xref> holds true) or to check this value only initially whenever\na two-point gesture starts, or do something in-between. As a practice: Investigate how the \n<a href=\"https://play.google.com/store/apps/details?id=com.google.earth\">Google Earth mobile app</a> handles this question!\n"
  example: []
  syntax:
    content: public TwoPointAction TwoPointGesture { get; }
    parameters: []
    return:
      type: Fusee.Engine.Core.TwoPointAction
      description: "\nThe double touch action currently performed by the user with the highest intensity.\n"
    content.vb: Public ReadOnly Property TwoPointGesture As TwoPointAction
  overload: Fusee.Engine.Core.TouchDevice.TwoPointGesture*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Engine.Core.TouchDevice.TwoPointDistance
  commentId: P:Fusee.Engine.Core.TouchDevice.TwoPointDistance
  id: TwoPointDistance
  parent: Fusee.Engine.Core.TouchDevice
  langs:
  - csharp
  - vb
  name: TwoPointDistance
  nameWithType: TouchDevice.TwoPointDistance
  fullName: Fusee.Engine.Core.TouchDevice.TwoPointDistance
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/TouchDevice.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: TwoPointDistance
    path: src/Fusee/src/Engine/Core/TouchDevice.cs
    startLine: 312
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nGets the distance between the first two touchpoints. Use this value if you want to implement pinch-like actions based on the current absolute distance.\n"
  example: []
  syntax:
    content: public float TwoPointDistance { get; }
    parameters: []
    return:
      type: System.Single
      description: "\nThe distance between the first two active touchpoints, or zero, if no two touchpoints are active.\n"
    content.vb: Public ReadOnly Property TwoPointDistance As Single
  overload: Fusee.Engine.Core.TouchDevice.TwoPointDistance*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Engine.Core.TouchDevice.TwoPointDistanceVel
  commentId: P:Fusee.Engine.Core.TouchDevice.TwoPointDistanceVel
  id: TwoPointDistanceVel
  parent: Fusee.Engine.Core.TouchDevice
  langs:
  - csharp
  - vb
  name: TwoPointDistanceVel
  nameWithType: TouchDevice.TwoPointDistanceVel
  fullName: Fusee.Engine.Core.TouchDevice.TwoPointDistanceVel
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/TouchDevice.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: TwoPointDistanceVel
    path: src/Fusee/src/Engine/Core/TouchDevice.cs
    startLine: 319
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nGets velocity of the distance between the first two touchpoints. Use this value if you want to implement pinch-like actions based on the current speed of the distance.\n"
  example: []
  syntax:
    content: public float TwoPointDistanceVel { get; }
    parameters: []
    return:
      type: System.Single
      description: "\nThe distance velocity. Positive values mean fingers move away from each others (Zoom-In), negative values mean fingers approach each others (Zoom-Out).\n"
    content.vb: Public ReadOnly Property TwoPointDistanceVel As Single
  overload: Fusee.Engine.Core.TouchDevice.TwoPointDistanceVel*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Engine.Core.TouchDevice.TwoPointAngle
  commentId: P:Fusee.Engine.Core.TouchDevice.TwoPointAngle
  id: TwoPointAngle
  parent: Fusee.Engine.Core.TouchDevice
  langs:
  - csharp
  - vb
  name: TwoPointAngle
  nameWithType: TouchDevice.TwoPointAngle
  fullName: Fusee.Engine.Core.TouchDevice.TwoPointAngle
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/TouchDevice.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: TwoPointAngle
    path: src/Fusee/src/Engine/Core/TouchDevice.cs
    startLine: 327
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nGets the angle of a line between the first two active touchpoints measured from the positive screen x-axis. Use this value if you want to implement rotation-like actions \nbased on the current absolute angle.\n"
  example: []
  syntax:
    content: public float TwoPointAngle { get; }
    parameters: []
    return:
      type: System.Single
      description: "\nThe angle value in radians. Ranges between -PI and PI. An angle of zero denotes the positive x-axis.\n"
    content.vb: Public ReadOnly Property TwoPointAngle As Single
  overload: Fusee.Engine.Core.TouchDevice.TwoPointAngle*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Engine.Core.TouchDevice.TwoPointAngleVel
  commentId: P:Fusee.Engine.Core.TouchDevice.TwoPointAngleVel
  id: TwoPointAngleVel
  parent: Fusee.Engine.Core.TouchDevice
  langs:
  - csharp
  - vb
  name: TwoPointAngleVel
  nameWithType: TouchDevice.TwoPointAngleVel
  fullName: Fusee.Engine.Core.TouchDevice.TwoPointAngleVel
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/TouchDevice.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: TwoPointAngleVel
    path: src/Fusee/src/Engine/Core/TouchDevice.cs
    startLine: 335
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nGets the angular velocity of a line between the first two active touchpoints measured from the positive screen x-axis. Use this value if you want to implement rotation-like actions \nbased on the current rotation speed of the first two touchpoints.\n"
  example: []
  syntax:
    content: public float TwoPointAngleVel { get; }
    parameters: []
    return:
      type: System.Single
      description: "\nThe angular velocity of the rotation movement of the first two touchpoints. Positive values mean counter-clockwise rotation, negative values mean clockwise rotation.\n"
    content.vb: Public ReadOnly Property TwoPointAngleVel As Single
  overload: Fusee.Engine.Core.TouchDevice.TwoPointAngleVel*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Engine.Core.TouchDevice.TwoPointMidPoint
  commentId: P:Fusee.Engine.Core.TouchDevice.TwoPointMidPoint
  id: TwoPointMidPoint
  parent: Fusee.Engine.Core.TouchDevice
  langs:
  - csharp
  - vb
  name: TwoPointMidPoint
  nameWithType: TouchDevice.TwoPointMidPoint
  fullName: Fusee.Engine.Core.TouchDevice.TwoPointMidPoint
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/TouchDevice.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: TwoPointMidPoint
    path: src/Fusee/src/Engine/Core/TouchDevice.cs
    startLine: 343
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nGets midpoint between the first two active touch points. Use this value if you want to implement two-finger movement-like actions based on the current averaged\nabsolute position of the first two touchpoints\n"
  example: []
  syntax:
    content: public float2 TwoPointMidPoint { get; }
    parameters: []
    return:
      type: Fusee.Math.Core.float2
      description: "\nThe midpoint (halfway between) touchpoint 0 and touchpoint 1.\n"
    content.vb: Public ReadOnly Property TwoPointMidPoint As float2
  overload: Fusee.Engine.Core.TouchDevice.TwoPointMidPoint*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Engine.Core.TouchDevice.TwoPointMidPointVel
  commentId: P:Fusee.Engine.Core.TouchDevice.TwoPointMidPointVel
  id: TwoPointMidPointVel
  parent: Fusee.Engine.Core.TouchDevice
  langs:
  - csharp
  - vb
  name: TwoPointMidPointVel
  nameWithType: TouchDevice.TwoPointMidPointVel
  fullName: Fusee.Engine.Core.TouchDevice.TwoPointMidPointVel
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Engine/Core/TouchDevice.cs
      branch: master
      repo: git@github.com:FUSEEProjectTeam/WebsiteTest.git
    id: TwoPointMidPointVel
    path: src/Fusee/src/Engine/Core/TouchDevice.cs
    startLine: 351
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core
  summary: "\nGets speed of the midpoint between the first two active touch points. Use this value if you want to implement two-finger movement-like actions based on the current \naveraged speed of the first two touchpoints.\n"
  example: []
  syntax:
    content: public float2 TwoPointMidPointVel { get; }
    parameters: []
    return:
      type: Fusee.Math.Core.float2
      description: "\nThe two-dimensional speed vector of the midpoint between touchpoint 0 and touchpoint 1.\n"
    content.vb: Public ReadOnly Property TwoPointMidPointVel As float2
  overload: Fusee.Engine.Core.TouchDevice.TwoPointMidPointVel*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
references:
- uid: Fusee.Engine.Core.InputDevice
  commentId: T:Fusee.Engine.Core.InputDevice
  parent: Fusee.Engine.Core
  name: InputDevice
  nameWithType: InputDevice
  fullName: Fusee.Engine.Core.InputDevice
- uid: Fusee.Engine.Common.DeviceCategory.Touch
  commentId: F:Fusee.Engine.Common.DeviceCategory.Touch
  isExternal: true
- uid: Fusee.Engine.Core
  commentId: N:Fusee.Engine.Core
  name: Fusee.Engine.Core
  nameWithType: Fusee.Engine.Core
  fullName: Fusee.Engine.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Fusee.Engine.Core.InputDevice.NewAxisID
  commentId: P:Fusee.Engine.Core.InputDevice.NewAxisID
  parent: Fusee.Engine.Core.InputDevice
  name: NewAxisID
  nameWithType: InputDevice.NewAxisID
  fullName: Fusee.Engine.Core.InputDevice.NewAxisID
- uid: Fusee.Engine.Core.InputDevice.IsConnected
  commentId: P:Fusee.Engine.Core.InputDevice.IsConnected
  parent: Fusee.Engine.Core.InputDevice
  name: IsConnected
  nameWithType: InputDevice.IsConnected
  fullName: Fusee.Engine.Core.InputDevice.IsConnected
- uid: Fusee.Engine.Core.InputDevice.Id
  commentId: P:Fusee.Engine.Core.InputDevice.Id
  parent: Fusee.Engine.Core.InputDevice
  name: Id
  nameWithType: InputDevice.Id
  fullName: Fusee.Engine.Core.InputDevice.Id
- uid: Fusee.Engine.Core.InputDevice.Desc
  commentId: P:Fusee.Engine.Core.InputDevice.Desc
  parent: Fusee.Engine.Core.InputDevice
  name: Desc
  nameWithType: InputDevice.Desc
  fullName: Fusee.Engine.Core.InputDevice.Desc
- uid: Fusee.Engine.Core.InputDevice.Category
  commentId: P:Fusee.Engine.Core.InputDevice.Category
  parent: Fusee.Engine.Core.InputDevice
  name: Category
  nameWithType: InputDevice.Category
  fullName: Fusee.Engine.Core.InputDevice.Category
- uid: Fusee.Engine.Core.InputDevice.AxesCount
  commentId: P:Fusee.Engine.Core.InputDevice.AxesCount
  parent: Fusee.Engine.Core.InputDevice
  name: AxesCount
  nameWithType: InputDevice.AxesCount
  fullName: Fusee.Engine.Core.InputDevice.AxesCount
- uid: Fusee.Engine.Core.InputDevice.AxisDesc
  commentId: P:Fusee.Engine.Core.InputDevice.AxisDesc
  parent: Fusee.Engine.Core.InputDevice
  name: AxisDesc
  nameWithType: InputDevice.AxisDesc
  fullName: Fusee.Engine.Core.InputDevice.AxisDesc
- uid: Fusee.Engine.Core.InputDevice.GetAxisDescription(System.Int32)
  commentId: M:Fusee.Engine.Core.InputDevice.GetAxisDescription(System.Int32)
  parent: Fusee.Engine.Core.InputDevice
  isExternal: true
  name: GetAxisDescription(Int32)
  nameWithType: InputDevice.GetAxisDescription(Int32)
  fullName: Fusee.Engine.Core.InputDevice.GetAxisDescription(System.Int32)
  spec.csharp:
  - uid: Fusee.Engine.Core.InputDevice.GetAxisDescription(System.Int32)
    name: GetAxisDescription
    nameWithType: InputDevice.GetAxisDescription
    fullName: Fusee.Engine.Core.InputDevice.GetAxisDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Engine.Core.InputDevice.GetAxisDescription(System.Int32)
    name: GetAxisDescription
    nameWithType: InputDevice.GetAxisDescription
    fullName: Fusee.Engine.Core.InputDevice.GetAxisDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Engine.Core.InputDevice.GetAxis(System.Int32)
  commentId: M:Fusee.Engine.Core.InputDevice.GetAxis(System.Int32)
  parent: Fusee.Engine.Core.InputDevice
  isExternal: true
  name: GetAxis(Int32)
  nameWithType: InputDevice.GetAxis(Int32)
  fullName: Fusee.Engine.Core.InputDevice.GetAxis(System.Int32)
  spec.csharp:
  - uid: Fusee.Engine.Core.InputDevice.GetAxis(System.Int32)
    name: GetAxis
    nameWithType: InputDevice.GetAxis
    fullName: Fusee.Engine.Core.InputDevice.GetAxis
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Engine.Core.InputDevice.GetAxis(System.Int32)
    name: GetAxis
    nameWithType: InputDevice.GetAxis
    fullName: Fusee.Engine.Core.InputDevice.GetAxis
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Engine.Core.InputDevice.GetAxisRaw(System.Int32)
  commentId: M:Fusee.Engine.Core.InputDevice.GetAxisRaw(System.Int32)
  parent: Fusee.Engine.Core.InputDevice
  isExternal: true
  name: GetAxisRaw(Int32)
  nameWithType: InputDevice.GetAxisRaw(Int32)
  fullName: Fusee.Engine.Core.InputDevice.GetAxisRaw(System.Int32)
  spec.csharp:
  - uid: Fusee.Engine.Core.InputDevice.GetAxisRaw(System.Int32)
    name: GetAxisRaw
    nameWithType: InputDevice.GetAxisRaw
    fullName: Fusee.Engine.Core.InputDevice.GetAxisRaw
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Engine.Core.InputDevice.GetAxisRaw(System.Int32)
    name: GetAxisRaw
    nameWithType: InputDevice.GetAxisRaw
    fullName: Fusee.Engine.Core.InputDevice.GetAxisRaw
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Engine.Core.InputDevice.SetAxisDeadzone(System.Int32,System.Single)
  commentId: M:Fusee.Engine.Core.InputDevice.SetAxisDeadzone(System.Int32,System.Single)
  parent: Fusee.Engine.Core.InputDevice
  isExternal: true
  name: SetAxisDeadzone(Int32, Single)
  nameWithType: InputDevice.SetAxisDeadzone(Int32, Single)
  fullName: Fusee.Engine.Core.InputDevice.SetAxisDeadzone(System.Int32, System.Single)
  spec.csharp:
  - uid: Fusee.Engine.Core.InputDevice.SetAxisDeadzone(System.Int32,System.Single)
    name: SetAxisDeadzone
    nameWithType: InputDevice.SetAxisDeadzone
    fullName: Fusee.Engine.Core.InputDevice.SetAxisDeadzone
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Engine.Core.InputDevice.SetAxisDeadzone(System.Int32,System.Single)
    name: SetAxisDeadzone
    nameWithType: InputDevice.SetAxisDeadzone
    fullName: Fusee.Engine.Core.InputDevice.SetAxisDeadzone
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Engine.Core.InputDevice.GetAxisDeadzone(System.Int32)
  commentId: M:Fusee.Engine.Core.InputDevice.GetAxisDeadzone(System.Int32)
  parent: Fusee.Engine.Core.InputDevice
  isExternal: true
  name: GetAxisDeadzone(Int32)
  nameWithType: InputDevice.GetAxisDeadzone(Int32)
  fullName: Fusee.Engine.Core.InputDevice.GetAxisDeadzone(System.Int32)
  spec.csharp:
  - uid: Fusee.Engine.Core.InputDevice.GetAxisDeadzone(System.Int32)
    name: GetAxisDeadzone
    nameWithType: InputDevice.GetAxisDeadzone
    fullName: Fusee.Engine.Core.InputDevice.GetAxisDeadzone
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Engine.Core.InputDevice.GetAxisDeadzone(System.Int32)
    name: GetAxisDeadzone
    nameWithType: InputDevice.GetAxisDeadzone
    fullName: Fusee.Engine.Core.InputDevice.GetAxisDeadzone
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Engine.Core.InputDevice.AxisValueChanged
  commentId: E:Fusee.Engine.Core.InputDevice.AxisValueChanged
  parent: Fusee.Engine.Core.InputDevice
  name: AxisValueChanged
  nameWithType: InputDevice.AxisValueChanged
  fullName: Fusee.Engine.Core.InputDevice.AxisValueChanged
- uid: Fusee.Engine.Core.InputDevice.ButtonCount
  commentId: P:Fusee.Engine.Core.InputDevice.ButtonCount
  parent: Fusee.Engine.Core.InputDevice
  name: ButtonCount
  nameWithType: InputDevice.ButtonCount
  fullName: Fusee.Engine.Core.InputDevice.ButtonCount
- uid: Fusee.Engine.Core.InputDevice.ButtonDesc
  commentId: P:Fusee.Engine.Core.InputDevice.ButtonDesc
  parent: Fusee.Engine.Core.InputDevice
  name: ButtonDesc
  nameWithType: InputDevice.ButtonDesc
  fullName: Fusee.Engine.Core.InputDevice.ButtonDesc
- uid: Fusee.Engine.Core.InputDevice.GetButtonDescription(System.Int32)
  commentId: M:Fusee.Engine.Core.InputDevice.GetButtonDescription(System.Int32)
  parent: Fusee.Engine.Core.InputDevice
  isExternal: true
  name: GetButtonDescription(Int32)
  nameWithType: InputDevice.GetButtonDescription(Int32)
  fullName: Fusee.Engine.Core.InputDevice.GetButtonDescription(System.Int32)
  spec.csharp:
  - uid: Fusee.Engine.Core.InputDevice.GetButtonDescription(System.Int32)
    name: GetButtonDescription
    nameWithType: InputDevice.GetButtonDescription
    fullName: Fusee.Engine.Core.InputDevice.GetButtonDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Engine.Core.InputDevice.GetButtonDescription(System.Int32)
    name: GetButtonDescription
    nameWithType: InputDevice.GetButtonDescription
    fullName: Fusee.Engine.Core.InputDevice.GetButtonDescription
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Engine.Core.InputDevice.GetButton(System.Int32)
  commentId: M:Fusee.Engine.Core.InputDevice.GetButton(System.Int32)
  parent: Fusee.Engine.Core.InputDevice
  isExternal: true
  name: GetButton(Int32)
  nameWithType: InputDevice.GetButton(Int32)
  fullName: Fusee.Engine.Core.InputDevice.GetButton(System.Int32)
  spec.csharp:
  - uid: Fusee.Engine.Core.InputDevice.GetButton(System.Int32)
    name: GetButton
    nameWithType: InputDevice.GetButton
    fullName: Fusee.Engine.Core.InputDevice.GetButton
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Engine.Core.InputDevice.GetButton(System.Int32)
    name: GetButton
    nameWithType: InputDevice.GetButton
    fullName: Fusee.Engine.Core.InputDevice.GetButton
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Engine.Core.InputDevice.IsButtonDown(System.Int32)
  commentId: M:Fusee.Engine.Core.InputDevice.IsButtonDown(System.Int32)
  parent: Fusee.Engine.Core.InputDevice
  isExternal: true
  name: IsButtonDown(Int32)
  nameWithType: InputDevice.IsButtonDown(Int32)
  fullName: Fusee.Engine.Core.InputDevice.IsButtonDown(System.Int32)
  spec.csharp:
  - uid: Fusee.Engine.Core.InputDevice.IsButtonDown(System.Int32)
    name: IsButtonDown
    nameWithType: InputDevice.IsButtonDown
    fullName: Fusee.Engine.Core.InputDevice.IsButtonDown
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Engine.Core.InputDevice.IsButtonDown(System.Int32)
    name: IsButtonDown
    nameWithType: InputDevice.IsButtonDown
    fullName: Fusee.Engine.Core.InputDevice.IsButtonDown
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Engine.Core.InputDevice.IsButtonUp(System.Int32)
  commentId: M:Fusee.Engine.Core.InputDevice.IsButtonUp(System.Int32)
  parent: Fusee.Engine.Core.InputDevice
  isExternal: true
  name: IsButtonUp(Int32)
  nameWithType: InputDevice.IsButtonUp(Int32)
  fullName: Fusee.Engine.Core.InputDevice.IsButtonUp(System.Int32)
  spec.csharp:
  - uid: Fusee.Engine.Core.InputDevice.IsButtonUp(System.Int32)
    name: IsButtonUp
    nameWithType: InputDevice.IsButtonUp
    fullName: Fusee.Engine.Core.InputDevice.IsButtonUp
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Engine.Core.InputDevice.IsButtonUp(System.Int32)
    name: IsButtonUp
    nameWithType: InputDevice.IsButtonUp
    fullName: Fusee.Engine.Core.InputDevice.IsButtonUp
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Engine.Core.InputDevice.ButtonValueChanged
  commentId: E:Fusee.Engine.Core.InputDevice.ButtonValueChanged
  parent: Fusee.Engine.Core.InputDevice
  name: ButtonValueChanged
  nameWithType: InputDevice.ButtonValueChanged
  fullName: Fusee.Engine.Core.InputDevice.ButtonValueChanged
- uid: Fusee.Engine.Core.InputDevice.RegisterCalculatedAxis(Fusee.Engine.Common.AxisDescription,Fusee.Engine.Core.InputDevice.AxisValueCalculator,System.Single)
  commentId: M:Fusee.Engine.Core.InputDevice.RegisterCalculatedAxis(Fusee.Engine.Common.AxisDescription,Fusee.Engine.Core.InputDevice.AxisValueCalculator,System.Single)
  parent: Fusee.Engine.Core.InputDevice
  isExternal: true
  name: RegisterCalculatedAxis(AxisDescription, InputDevice.AxisValueCalculator, Single)
  nameWithType: InputDevice.RegisterCalculatedAxis(AxisDescription, InputDevice.AxisValueCalculator, Single)
  fullName: Fusee.Engine.Core.InputDevice.RegisterCalculatedAxis(Fusee.Engine.Common.AxisDescription, Fusee.Engine.Core.InputDevice.AxisValueCalculator, System.Single)
  spec.csharp:
  - uid: Fusee.Engine.Core.InputDevice.RegisterCalculatedAxis(Fusee.Engine.Common.AxisDescription,Fusee.Engine.Core.InputDevice.AxisValueCalculator,System.Single)
    name: RegisterCalculatedAxis
    nameWithType: InputDevice.RegisterCalculatedAxis
    fullName: Fusee.Engine.Core.InputDevice.RegisterCalculatedAxis
  - name: (
    nameWithType: (
    fullName: (
  - uid: Fusee.Engine.Common.AxisDescription
    name: AxisDescription
    nameWithType: AxisDescription
    fullName: Fusee.Engine.Common.AxisDescription
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Fusee.Engine.Core.InputDevice.AxisValueCalculator
    name: InputDevice.AxisValueCalculator
    nameWithType: InputDevice.AxisValueCalculator
    fullName: Fusee.Engine.Core.InputDevice.AxisValueCalculator
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Engine.Core.InputDevice.RegisterCalculatedAxis(Fusee.Engine.Common.AxisDescription,Fusee.Engine.Core.InputDevice.AxisValueCalculator,System.Single)
    name: RegisterCalculatedAxis
    nameWithType: InputDevice.RegisterCalculatedAxis
    fullName: Fusee.Engine.Core.InputDevice.RegisterCalculatedAxis
  - name: (
    nameWithType: (
    fullName: (
  - uid: Fusee.Engine.Common.AxisDescription
    name: AxisDescription
    nameWithType: AxisDescription
    fullName: Fusee.Engine.Common.AxisDescription
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Fusee.Engine.Core.InputDevice.AxisValueCalculator
    name: InputDevice.AxisValueCalculator
    nameWithType: InputDevice.AxisValueCalculator
    fullName: Fusee.Engine.Core.InputDevice.AxisValueCalculator
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Engine.Core.InputDevice.RegisterVelocityAxis(System.Int32,System.Int32,System.Int32,System.String,Fusee.Engine.Common.AxisDirection)
  commentId: M:Fusee.Engine.Core.InputDevice.RegisterVelocityAxis(System.Int32,System.Int32,System.Int32,System.String,Fusee.Engine.Common.AxisDirection)
  parent: Fusee.Engine.Core.InputDevice
  isExternal: true
  name: RegisterVelocityAxis(Int32, Int32, Int32, String, AxisDirection)
  nameWithType: InputDevice.RegisterVelocityAxis(Int32, Int32, Int32, String, AxisDirection)
  fullName: Fusee.Engine.Core.InputDevice.RegisterVelocityAxis(System.Int32, System.Int32, System.Int32, System.String, Fusee.Engine.Common.AxisDirection)
  spec.csharp:
  - uid: Fusee.Engine.Core.InputDevice.RegisterVelocityAxis(System.Int32,System.Int32,System.Int32,System.String,Fusee.Engine.Common.AxisDirection)
    name: RegisterVelocityAxis
    nameWithType: InputDevice.RegisterVelocityAxis
    fullName: Fusee.Engine.Core.InputDevice.RegisterVelocityAxis
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Fusee.Engine.Common.AxisDirection
    name: AxisDirection
    nameWithType: AxisDirection
    fullName: Fusee.Engine.Common.AxisDirection
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Engine.Core.InputDevice.RegisterVelocityAxis(System.Int32,System.Int32,System.Int32,System.String,Fusee.Engine.Common.AxisDirection)
    name: RegisterVelocityAxis
    nameWithType: InputDevice.RegisterVelocityAxis
    fullName: Fusee.Engine.Core.InputDevice.RegisterVelocityAxis
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Fusee.Engine.Common.AxisDirection
    name: AxisDirection
    nameWithType: AxisDirection
    fullName: Fusee.Engine.Common.AxisDirection
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Engine.Core.InputDevice.RegisterSingleButtonAxis(System.Int32,Fusee.Engine.Common.AxisDirection,System.Single,System.Single,System.Int32,System.String)
  commentId: M:Fusee.Engine.Core.InputDevice.RegisterSingleButtonAxis(System.Int32,Fusee.Engine.Common.AxisDirection,System.Single,System.Single,System.Int32,System.String)
  parent: Fusee.Engine.Core.InputDevice
  isExternal: true
  name: RegisterSingleButtonAxis(Int32, AxisDirection, Single, Single, Int32, String)
  nameWithType: InputDevice.RegisterSingleButtonAxis(Int32, AxisDirection, Single, Single, Int32, String)
  fullName: Fusee.Engine.Core.InputDevice.RegisterSingleButtonAxis(System.Int32, Fusee.Engine.Common.AxisDirection, System.Single, System.Single, System.Int32, System.String)
  spec.csharp:
  - uid: Fusee.Engine.Core.InputDevice.RegisterSingleButtonAxis(System.Int32,Fusee.Engine.Common.AxisDirection,System.Single,System.Single,System.Int32,System.String)
    name: RegisterSingleButtonAxis
    nameWithType: InputDevice.RegisterSingleButtonAxis
    fullName: Fusee.Engine.Core.InputDevice.RegisterSingleButtonAxis
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Fusee.Engine.Common.AxisDirection
    name: AxisDirection
    nameWithType: AxisDirection
    fullName: Fusee.Engine.Common.AxisDirection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Engine.Core.InputDevice.RegisterSingleButtonAxis(System.Int32,Fusee.Engine.Common.AxisDirection,System.Single,System.Single,System.Int32,System.String)
    name: RegisterSingleButtonAxis
    nameWithType: InputDevice.RegisterSingleButtonAxis
    fullName: Fusee.Engine.Core.InputDevice.RegisterSingleButtonAxis
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Fusee.Engine.Common.AxisDirection
    name: AxisDirection
    nameWithType: AxisDirection
    fullName: Fusee.Engine.Common.AxisDirection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Engine.Core.InputDevice.RegisterTwoButtonAxis(System.Int32,System.Int32,Fusee.Engine.Common.AxisDirection,System.Single,System.Single,System.Int32,System.String)
  commentId: M:Fusee.Engine.Core.InputDevice.RegisterTwoButtonAxis(System.Int32,System.Int32,Fusee.Engine.Common.AxisDirection,System.Single,System.Single,System.Int32,System.String)
  parent: Fusee.Engine.Core.InputDevice
  isExternal: true
  name: RegisterTwoButtonAxis(Int32, Int32, AxisDirection, Single, Single, Int32, String)
  nameWithType: InputDevice.RegisterTwoButtonAxis(Int32, Int32, AxisDirection, Single, Single, Int32, String)
  fullName: Fusee.Engine.Core.InputDevice.RegisterTwoButtonAxis(System.Int32, System.Int32, Fusee.Engine.Common.AxisDirection, System.Single, System.Single, System.Int32, System.String)
  spec.csharp:
  - uid: Fusee.Engine.Core.InputDevice.RegisterTwoButtonAxis(System.Int32,System.Int32,Fusee.Engine.Common.AxisDirection,System.Single,System.Single,System.Int32,System.String)
    name: RegisterTwoButtonAxis
    nameWithType: InputDevice.RegisterTwoButtonAxis
    fullName: Fusee.Engine.Core.InputDevice.RegisterTwoButtonAxis
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Fusee.Engine.Common.AxisDirection
    name: AxisDirection
    nameWithType: AxisDirection
    fullName: Fusee.Engine.Common.AxisDirection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Engine.Core.InputDevice.RegisterTwoButtonAxis(System.Int32,System.Int32,Fusee.Engine.Common.AxisDirection,System.Single,System.Single,System.Int32,System.String)
    name: RegisterTwoButtonAxis
    nameWithType: InputDevice.RegisterTwoButtonAxis
    fullName: Fusee.Engine.Core.InputDevice.RegisterTwoButtonAxis
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Fusee.Engine.Common.AxisDirection
    name: AxisDirection
    nameWithType: AxisDirection
    fullName: Fusee.Engine.Common.AxisDirection
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Engine.Core.InputDevice.PostRender
  commentId: M:Fusee.Engine.Core.InputDevice.PostRender
  parent: Fusee.Engine.Core.InputDevice
  name: PostRender()
  nameWithType: InputDevice.PostRender()
  fullName: Fusee.Engine.Core.InputDevice.PostRender()
  spec.csharp:
  - uid: Fusee.Engine.Core.InputDevice.PostRender
    name: PostRender
    nameWithType: InputDevice.PostRender
    fullName: Fusee.Engine.Core.InputDevice.PostRender
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Engine.Core.InputDevice.PostRender
    name: PostRender
    nameWithType: InputDevice.PostRender
    fullName: Fusee.Engine.Core.InputDevice.PostRender
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Fusee.Engine.Core.TouchDevice
  commentId: T:Fusee.Engine.Core.TouchDevice
  parent: Fusee.Engine.Core
  name: TouchDevice
  nameWithType: TouchDevice
  fullName: Fusee.Engine.Core.TouchDevice
- uid: Fusee.Engine.Core.TouchDevice.#ctor*
  commentId: Overload:Fusee.Engine.Core.TouchDevice.#ctor
  name: TouchDevice
  nameWithType: TouchDevice.TouchDevice
  fullName: Fusee.Engine.Core.TouchDevice.TouchDevice
- uid: Fusee.Engine.Common.IInputDeviceImp
  commentId: T:Fusee.Engine.Common.IInputDeviceImp
  parent: Fusee.Engine.Common
  name: IInputDeviceImp
  nameWithType: IInputDeviceImp
  fullName: Fusee.Engine.Common.IInputDeviceImp
- uid: Fusee.Engine.Common
  commentId: N:Fusee.Engine.Common
  name: Fusee.Engine.Common
  nameWithType: Fusee.Engine.Common
  fullName: Fusee.Engine.Common
- uid: Fusee.Engine.Core.TouchDevice.RegisterTtpAngleAxis*
  commentId: Overload:Fusee.Engine.Core.TouchDevice.RegisterTtpAngleAxis
  name: RegisterTtpAngleAxis
  nameWithType: TouchDevice.RegisterTtpAngleAxis
  fullName: Fusee.Engine.Core.TouchDevice.RegisterTtpAngleAxis
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Fusee.Engine.Core.TouchDevice.RegisterTtpDistanceAxis*
  commentId: Overload:Fusee.Engine.Core.TouchDevice.RegisterTtpDistanceAxis
  name: RegisterTtpDistanceAxis
  nameWithType: TouchDevice.RegisterTtpDistanceAxis
  fullName: Fusee.Engine.Core.TouchDevice.RegisterTtpDistanceAxis
- uid: Fusee.Engine.Core.TouchDevice.RegisterTtpMidpointAxis*
  commentId: Overload:Fusee.Engine.Core.TouchDevice.RegisterTtpMidpointAxis
  name: RegisterTtpMidpointAxis
  nameWithType: TouchDevice.RegisterTtpMidpointAxis
  fullName: Fusee.Engine.Core.TouchDevice.RegisterTtpMidpointAxis
- uid: Fusee.Engine.Common.AxisDirection
  commentId: T:Fusee.Engine.Common.AxisDirection
  parent: Fusee.Engine.Common
  name: AxisDirection
  nameWithType: AxisDirection
  fullName: Fusee.Engine.Common.AxisDirection
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Fusee.Engine.Core.TouchDevice.GetTouchActive*
  commentId: Overload:Fusee.Engine.Core.TouchDevice.GetTouchActive
  name: GetTouchActive
  nameWithType: TouchDevice.GetTouchActive
  fullName: Fusee.Engine.Core.TouchDevice.GetTouchActive
- uid: Fusee.Engine.Common.TouchPoints
  commentId: T:Fusee.Engine.Common.TouchPoints
  parent: Fusee.Engine.Common
  name: TouchPoints
  nameWithType: TouchPoints
  fullName: Fusee.Engine.Common.TouchPoints
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Fusee.Engine.Core.TouchDevice.GetTouchActive(Fusee.Engine.Common.TouchPoints)
  commentId: M:Fusee.Engine.Core.TouchDevice.GetTouchActive(Fusee.Engine.Common.TouchPoints)
  isExternal: true
- uid: Fusee.Engine.Core.TouchDevice.GetPosition*
  commentId: Overload:Fusee.Engine.Core.TouchDevice.GetPosition
  name: GetPosition
  nameWithType: TouchDevice.GetPosition
  fullName: Fusee.Engine.Core.TouchDevice.GetPosition
- uid: Fusee.Math.Core.float2
  commentId: T:Fusee.Math.Core.float2
  parent: Fusee.Math.Core
  name: float2
  nameWithType: float2
  fullName: Fusee.Math.Core.float2
- uid: Fusee.Math.Core
  commentId: N:Fusee.Math.Core
  name: Fusee.Math.Core
  nameWithType: Fusee.Math.Core
  fullName: Fusee.Math.Core
- uid: Fusee.Engine.Core.TouchDevice.GetVelocity*
  commentId: Overload:Fusee.Engine.Core.TouchDevice.GetVelocity
  name: GetVelocity
  nameWithType: TouchDevice.GetVelocity
  fullName: Fusee.Engine.Core.TouchDevice.GetVelocity
- uid: Fusee.Engine.Core.TouchDevice.ActiveTouchpoints*
  commentId: Overload:Fusee.Engine.Core.TouchDevice.ActiveTouchpoints
  name: ActiveTouchpoints
  nameWithType: TouchDevice.ActiveTouchpoints
  fullName: Fusee.Engine.Core.TouchDevice.ActiveTouchpoints
- uid: Fusee.Engine.Core.TouchDevice.TwoPoint*
  commentId: Overload:Fusee.Engine.Core.TouchDevice.TwoPoint
  name: TwoPoint
  nameWithType: TouchDevice.TwoPoint
  fullName: Fusee.Engine.Core.TouchDevice.TwoPoint
- uid: Fusee.Engine.Core.TwoPointAction
  commentId: T:Fusee.Engine.Core.TwoPointAction
  parent: Fusee.Engine.Core
  name: TwoPointAction
  nameWithType: TwoPointAction
  fullName: Fusee.Engine.Core.TwoPointAction
- uid: Fusee.Engine.Core.TwoPointAction.Move
  commentId: F:Fusee.Engine.Core.TwoPointAction.Move
  isExternal: true
- uid: Fusee.Engine.Core.TwoPointAction.Rotate
  commentId: F:Fusee.Engine.Core.TwoPointAction.Rotate
  isExternal: true
- uid: Fusee.Engine.Core.TwoPointAction.Pinch
  commentId: F:Fusee.Engine.Core.TwoPointAction.Pinch
  isExternal: true
- uid: Fusee.Engine.Core.TouchDevice.TwoPoint
  commentId: P:Fusee.Engine.Core.TouchDevice.TwoPoint
  isExternal: true
- uid: Fusee.Engine.Core.TouchDevice.TwoPointGesture*
  commentId: Overload:Fusee.Engine.Core.TouchDevice.TwoPointGesture
  name: TwoPointGesture
  nameWithType: TouchDevice.TwoPointGesture
  fullName: Fusee.Engine.Core.TouchDevice.TwoPointGesture
- uid: Fusee.Engine.Core.TouchDevice.TwoPointDistance*
  commentId: Overload:Fusee.Engine.Core.TouchDevice.TwoPointDistance
  name: TwoPointDistance
  nameWithType: TouchDevice.TwoPointDistance
  fullName: Fusee.Engine.Core.TouchDevice.TwoPointDistance
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: Fusee.Engine.Core.TouchDevice.TwoPointDistanceVel*
  commentId: Overload:Fusee.Engine.Core.TouchDevice.TwoPointDistanceVel
  name: TwoPointDistanceVel
  nameWithType: TouchDevice.TwoPointDistanceVel
  fullName: Fusee.Engine.Core.TouchDevice.TwoPointDistanceVel
- uid: Fusee.Engine.Core.TouchDevice.TwoPointAngle*
  commentId: Overload:Fusee.Engine.Core.TouchDevice.TwoPointAngle
  name: TwoPointAngle
  nameWithType: TouchDevice.TwoPointAngle
  fullName: Fusee.Engine.Core.TouchDevice.TwoPointAngle
- uid: Fusee.Engine.Core.TouchDevice.TwoPointAngleVel*
  commentId: Overload:Fusee.Engine.Core.TouchDevice.TwoPointAngleVel
  name: TwoPointAngleVel
  nameWithType: TouchDevice.TwoPointAngleVel
  fullName: Fusee.Engine.Core.TouchDevice.TwoPointAngleVel
- uid: Fusee.Engine.Core.TouchDevice.TwoPointMidPoint*
  commentId: Overload:Fusee.Engine.Core.TouchDevice.TwoPointMidPoint
  name: TwoPointMidPoint
  nameWithType: TouchDevice.TwoPointMidPoint
  fullName: Fusee.Engine.Core.TouchDevice.TwoPointMidPoint
- uid: Fusee.Engine.Core.TouchDevice.TwoPointMidPointVel*
  commentId: Overload:Fusee.Engine.Core.TouchDevice.TwoPointMidPointVel
  name: TwoPointMidPointVel
  nameWithType: TouchDevice.TwoPointMidPointVel
  fullName: Fusee.Engine.Core.TouchDevice.TwoPointMidPointVel

### YamlMime:ManagedReference
items:
- uid: Fusee.Math.Core.EigenF
  commentId: T:Fusee.Math.Core.EigenF
  id: EigenF
  parent: Fusee.Math.Core
  children:
  - Fusee.Math.Core.EigenF.Equals(System.Object)
  - Fusee.Math.Core.EigenF.GetHashCode
  - Fusee.Math.Core.EigenF.op_Equality(Fusee.Math.Core.EigenF,Fusee.Math.Core.EigenF)
  - Fusee.Math.Core.EigenF.op_Inequality(Fusee.Math.Core.EigenF,Fusee.Math.Core.EigenF)
  - Fusee.Math.Core.EigenF.RotationMatrix
  - Fusee.Math.Core.EigenF.Values
  - Fusee.Math.Core.EigenF.Vectors
  langs:
  - csharp
  - vb
  name: EigenF
  nameWithType: EigenF
  fullName: Fusee.Math.Core.EigenF
  type: Struct
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Eigen.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: EigenF
    path: src/Fusee/src/Math/Core/Eigen.cs
    startLine: 8
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nEigen data structure with values and vectors in single precision.\n"
  example: []
  syntax:
    content: public struct EigenF
    content.vb: Public Structure EigenF
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - struct
  modifiers.vb:
  - Public
  - Structure
- uid: Fusee.Math.Core.EigenF.Values
  commentId: F:Fusee.Math.Core.EigenF.Values
  id: Values
  parent: Fusee.Math.Core.EigenF
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: EigenF.Values
  fullName: Fusee.Math.Core.EigenF.Values
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Eigen.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Values
    path: src/Fusee/src/Math/Core/Eigen.cs
    startLine: 13
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nEigen values.\n"
  example: []
  syntax:
    content: public float[] Values
    return:
      type: System.Single[]
    content.vb: Public Values As Single()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.EigenF.Vectors
  commentId: F:Fusee.Math.Core.EigenF.Vectors
  id: Vectors
  parent: Fusee.Math.Core.EigenF
  langs:
  - csharp
  - vb
  name: Vectors
  nameWithType: EigenF.Vectors
  fullName: Fusee.Math.Core.EigenF.Vectors
  type: Field
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Eigen.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Vectors
    path: src/Fusee/src/Math/Core/Eigen.cs
    startLine: 18
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nEigen vectors.\n"
  example: []
  syntax:
    content: public float3[] Vectors
    return:
      type: Fusee.Math.Core.float3[]
    content.vb: Public Vectors As float3()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Fusee.Math.Core.EigenF.RotationMatrix
  commentId: P:Fusee.Math.Core.EigenF.RotationMatrix
  id: RotationMatrix
  parent: Fusee.Math.Core.EigenF
  langs:
  - csharp
  - vb
  name: RotationMatrix
  nameWithType: EigenF.RotationMatrix
  fullName: Fusee.Math.Core.EigenF.RotationMatrix
  type: Property
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Eigen.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: RotationMatrix
    path: src/Fusee/src/Math/Core/Eigen.cs
    startLine: 23
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nGenerates the rotation matrix from eigen vectors\n"
  example: []
  syntax:
    content: public float4x4 RotationMatrix { get; }
    parameters: []
    return:
      type: Fusee.Math.Core.float4x4
    content.vb: Public ReadOnly Property RotationMatrix As float4x4
  overload: Fusee.Math.Core.EigenF.RotationMatrix*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Fusee.Math.Core.EigenF.Equals(System.Object)
  commentId: M:Fusee.Math.Core.EigenF.Equals(System.Object)
  id: Equals(System.Object)
  parent: Fusee.Math.Core.EigenF
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: EigenF.Equals(Object)
  fullName: Fusee.Math.Core.EigenF.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Eigen.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: Equals
    path: src/Fusee/src/Math/Core/Eigen.cs
    startLine: 30
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nChecks if two EigenF values are the same\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Fusee.Math.Core.EigenF.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Fusee.Math.Core.EigenF.GetHashCode
  commentId: M:Fusee.Math.Core.EigenF.GetHashCode
  id: GetHashCode
  parent: Fusee.Math.Core.EigenF
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: EigenF.GetHashCode()
  fullName: Fusee.Math.Core.EigenF.GetHashCode()
  type: Method
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Eigen.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: GetHashCode
    path: src/Fusee/src/Math/Core/Eigen.cs
    startLine: 36
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nReturns hash code\n"
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: ''
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.ValueType.GetHashCode
  overload: Fusee.Math.Core.EigenF.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Fusee.Math.Core.EigenF.op_Equality(Fusee.Math.Core.EigenF,Fusee.Math.Core.EigenF)
  commentId: M:Fusee.Math.Core.EigenF.op_Equality(Fusee.Math.Core.EigenF,Fusee.Math.Core.EigenF)
  id: op_Equality(Fusee.Math.Core.EigenF,Fusee.Math.Core.EigenF)
  parent: Fusee.Math.Core.EigenF
  langs:
  - csharp
  - vb
  name: Equality(EigenF, EigenF)
  nameWithType: EigenF.Equality(EigenF, EigenF)
  fullName: Fusee.Math.Core.EigenF.Equality(Fusee.Math.Core.EigenF, Fusee.Math.Core.EigenF)
  type: Operator
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Eigen.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: op_Equality
    path: src/Fusee/src/Math/Core/Eigen.cs
    startLine: 44
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nChecks if two EigenF values are the same\n"
  example: []
  syntax:
    content: public static bool operator ==(EigenF left, EigenF right)
    parameters:
    - id: left
      type: Fusee.Math.Core.EigenF
      description: ''
    - id: right
      type: Fusee.Math.Core.EigenF
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Operator =(left As EigenF, right As EigenF) As Boolean
  overload: Fusee.Math.Core.EigenF.op_Equality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Math.Core.EigenF.op_Inequality(Fusee.Math.Core.EigenF,Fusee.Math.Core.EigenF)
  commentId: M:Fusee.Math.Core.EigenF.op_Inequality(Fusee.Math.Core.EigenF,Fusee.Math.Core.EigenF)
  id: op_Inequality(Fusee.Math.Core.EigenF,Fusee.Math.Core.EigenF)
  parent: Fusee.Math.Core.EigenF
  langs:
  - csharp
  - vb
  name: Inequality(EigenF, EigenF)
  nameWithType: EigenF.Inequality(EigenF, EigenF)
  fullName: Fusee.Math.Core.EigenF.Inequality(Fusee.Math.Core.EigenF, Fusee.Math.Core.EigenF)
  type: Operator
  source:
    remote:
      path: src/DocFX/src/Fusee/src/Math/Core/Eigen.cs
      branch: master
      repo: https://github.com/FUSEEProjectTeam/WebsiteTest.git
    id: op_Inequality
    path: src/Fusee/src/Math/Core/Eigen.cs
    startLine: 52
  assemblies:
  - Fusee.Math.Core
  namespace: Fusee.Math.Core
  summary: "\nChecks if two EigenF values aren&apos;t the same\n"
  example: []
  syntax:
    content: public static bool operator !=(EigenF left, EigenF right)
    parameters:
    - id: left
      type: Fusee.Math.Core.EigenF
      description: ''
    - id: right
      type: Fusee.Math.Core.EigenF
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Operator <>(left As EigenF, right As EigenF) As Boolean
  overload: Fusee.Math.Core.EigenF.op_Inequality*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Fusee.Math.Core
  commentId: N:Fusee.Math.Core
  name: Fusee.Math.Core
  nameWithType: Fusee.Math.Core
  fullName: Fusee.Math.Core
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    nameWithType: ValueType.ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Single[]
  isExternal: true
  name: Single[]
  nameWithType: Single[]
  fullName: System.Single[]
  nameWithType.vb: Single()
  fullName.vb: System.Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: System.Single
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Fusee.Math.Core.float3[]
  isExternal: true
  name: float3[]
  nameWithType: float3[]
  fullName: Fusee.Math.Core.float3[]
  nameWithType.vb: float3()
  fullName.vb: Fusee.Math.Core.float3()
  name.vb: float3()
  spec.csharp:
  - uid: Fusee.Math.Core.float3
    name: float3
    nameWithType: float3
    fullName: Fusee.Math.Core.float3
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Fusee.Math.Core.float3
    name: float3
    nameWithType: float3
    fullName: Fusee.Math.Core.float3
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Fusee.Math.Core.EigenF.RotationMatrix*
  commentId: Overload:Fusee.Math.Core.EigenF.RotationMatrix
  name: RotationMatrix
  nameWithType: EigenF.RotationMatrix
  fullName: Fusee.Math.Core.EigenF.RotationMatrix
- uid: Fusee.Math.Core.float4x4
  commentId: T:Fusee.Math.Core.float4x4
  parent: Fusee.Math.Core
  name: float4x4
  nameWithType: float4x4
  fullName: Fusee.Math.Core.float4x4
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  nameWithType: ValueType.Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    nameWithType: ValueType.Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Math.Core.EigenF.Equals*
  commentId: Overload:Fusee.Math.Core.EigenF.Equals
  name: Equals
  nameWithType: EigenF.Equals
  fullName: Fusee.Math.Core.EigenF.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    nameWithType: ValueType.GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Math.Core.EigenF.GetHashCode*
  commentId: Overload:Fusee.Math.Core.EigenF.GetHashCode
  name: GetHashCode
  nameWithType: EigenF.GetHashCode
  fullName: Fusee.Math.Core.EigenF.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Fusee.Math.Core.EigenF.op_Equality*
  commentId: Overload:Fusee.Math.Core.EigenF.op_Equality
  name: Equality
  nameWithType: EigenF.Equality
  fullName: Fusee.Math.Core.EigenF.Equality
- uid: Fusee.Math.Core.EigenF
  commentId: T:Fusee.Math.Core.EigenF
  parent: Fusee.Math.Core
  name: EigenF
  nameWithType: EigenF
  fullName: Fusee.Math.Core.EigenF
- uid: Fusee.Math.Core.EigenF.op_Inequality*
  commentId: Overload:Fusee.Math.Core.EigenF.op_Inequality
  name: Inequality
  nameWithType: EigenF.Inequality
  fullName: Fusee.Math.Core.EigenF.Inequality

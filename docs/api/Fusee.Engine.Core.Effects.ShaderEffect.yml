### YamlMime:ManagedReference
items:
- uid: Fusee.Engine.Core.Effects.ShaderEffect
  commentId: T:Fusee.Engine.Core.Effects.ShaderEffect
  id: ShaderEffect
  parent: Fusee.Engine.Core.Effects
  children:
  - Fusee.Engine.Core.Effects.ShaderEffect.#ctor(Fusee.Engine.Core.Effects.FxPassDeclaration,System.Collections.Generic.IEnumerable{Fusee.Engine.Core.Effects.IFxParamDeclaration})
  - Fusee.Engine.Core.Effects.ShaderEffect.Dispose
  - Fusee.Engine.Core.Effects.ShaderEffect.Finalize
  - Fusee.Engine.Core.Effects.ShaderEffect.GeometryShaderSrc
  - Fusee.Engine.Core.Effects.ShaderEffect.PixelShaderSrc
  - Fusee.Engine.Core.Effects.ShaderEffect.VertexShaderSrc
  langs:
  - csharp
  - vb
  name: ShaderEffect
  nameWithType: ShaderEffect
  fullName: Fusee.Engine.Core.Effects.ShaderEffect
  type: Class
  source:
    id: ShaderEffect
    path: C:\Users\test\Documents\fusee\Fusee\src\Engine\Core\Effects\ShaderEffect.cs
    startLine: 10
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Effects
  summary: "\nA ShaderEffect contains a string for each, the vertex, fragment and geometry shader and a set of render states.\nUse this if you want to write the shader code on your own. \nThe values of uniform variables you defined (<xref href=\"Fusee.Engine.Core.Effects.Effect.ParamDecl\" data-throw-if-not-resolved=\"false\"></xref>) can be set using <xref href=\"Fusee.Engine.Core.Effects.Effect.SetFxParam%60%601(System.String%2c%60%600)\" data-throw-if-not-resolved=\"false\"></xref>. \n"
  example: []
  syntax:
    content: 'public class ShaderEffect : Effect, IComponent, IDisposable'
    content.vb: >-
      Public Class ShaderEffect
          Inherits Effect
          Implements IComponent, IDisposable
  inheritance:
  - System.Object
  - Fusee.Engine.Core.Scene.SceneComponent
  - Fusee.Engine.Core.Effects.Effect
  implements:
  - Fusee.Xene.IComponent
  - System.IDisposable
  inheritedMembers:
  - Fusee.Engine.Core.Effects.Effect.ParamDecl
  - Fusee.Engine.Core.Effects.Effect.RendererStates
  - Fusee.Engine.Core.Effects.Effect.EffectChanged
  - Fusee.Engine.Core.Effects.Effect.EffectManagerEventArgs
  - Fusee.Engine.Core.Effects.Effect.SessionUniqueIdentifier
  - Fusee.Engine.Core.Effects.Effect.SetFxParam``1(System.String,{T})
  - Fusee.Engine.Core.Effects.Effect.GetFxParam``1(System.String)
  - Fusee.Engine.Core.Scene.SceneComponent.Name
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Fusee.Engine.Core.Effects.ShaderEffect.VertexShaderSrc
  commentId: P:Fusee.Engine.Core.Effects.ShaderEffect.VertexShaderSrc
  id: VertexShaderSrc
  parent: Fusee.Engine.Core.Effects.ShaderEffect
  langs:
  - csharp
  - vb
  name: VertexShaderSrc
  nameWithType: ShaderEffect.VertexShaderSrc
  fullName: Fusee.Engine.Core.Effects.ShaderEffect.VertexShaderSrc
  type: Property
  source:
    id: VertexShaderSrc
    path: C:\Users\test\Documents\fusee\Fusee\src\Engine\Core\Effects\ShaderEffect.cs
    startLine: 15
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Effects
  summary: "\nThe Vertex shader code.\n"
  example: []
  syntax:
    content: public string VertexShaderSrc { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property VertexShaderSrc As String
  overload: Fusee.Engine.Core.Effects.ShaderEffect.VertexShaderSrc*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Fusee.Engine.Core.Effects.ShaderEffect.PixelShaderSrc
  commentId: P:Fusee.Engine.Core.Effects.ShaderEffect.PixelShaderSrc
  id: PixelShaderSrc
  parent: Fusee.Engine.Core.Effects.ShaderEffect
  langs:
  - csharp
  - vb
  name: PixelShaderSrc
  nameWithType: ShaderEffect.PixelShaderSrc
  fullName: Fusee.Engine.Core.Effects.ShaderEffect.PixelShaderSrc
  type: Property
  source:
    id: PixelShaderSrc
    path: C:\Users\test\Documents\fusee\Fusee\src\Engine\Core\Effects\ShaderEffect.cs
    startLine: 20
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Effects
  summary: "\nThe Fragment shader code.\n"
  example: []
  syntax:
    content: public string PixelShaderSrc { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PixelShaderSrc As String
  overload: Fusee.Engine.Core.Effects.ShaderEffect.PixelShaderSrc*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Fusee.Engine.Core.Effects.ShaderEffect.GeometryShaderSrc
  commentId: P:Fusee.Engine.Core.Effects.ShaderEffect.GeometryShaderSrc
  id: GeometryShaderSrc
  parent: Fusee.Engine.Core.Effects.ShaderEffect
  langs:
  - csharp
  - vb
  name: GeometryShaderSrc
  nameWithType: ShaderEffect.GeometryShaderSrc
  fullName: Fusee.Engine.Core.Effects.ShaderEffect.GeometryShaderSrc
  type: Property
  source:
    id: GeometryShaderSrc
    path: C:\Users\test\Documents\fusee\Fusee\src\Engine\Core\Effects\ShaderEffect.cs
    startLine: 25
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Effects
  summary: "\nThe Geometry shader code.\n"
  example: []
  syntax:
    content: public string GeometryShaderSrc { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property GeometryShaderSrc As String
  overload: Fusee.Engine.Core.Effects.ShaderEffect.GeometryShaderSrc*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Fusee.Engine.Core.Effects.ShaderEffect.#ctor(Fusee.Engine.Core.Effects.FxPassDeclaration,System.Collections.Generic.IEnumerable{Fusee.Engine.Core.Effects.IFxParamDeclaration})
  commentId: M:Fusee.Engine.Core.Effects.ShaderEffect.#ctor(Fusee.Engine.Core.Effects.FxPassDeclaration,System.Collections.Generic.IEnumerable{Fusee.Engine.Core.Effects.IFxParamDeclaration})
  id: '#ctor(Fusee.Engine.Core.Effects.FxPassDeclaration,System.Collections.Generic.IEnumerable{Fusee.Engine.Core.Effects.IFxParamDeclaration})'
  parent: Fusee.Engine.Core.Effects.ShaderEffect
  langs:
  - csharp
  - vb
  name: ShaderEffect(FxPassDeclaration, IEnumerable<IFxParamDeclaration>)
  nameWithType: ShaderEffect.ShaderEffect(FxPassDeclaration, IEnumerable<IFxParamDeclaration>)
  fullName: Fusee.Engine.Core.Effects.ShaderEffect.ShaderEffect(Fusee.Engine.Core.Effects.FxPassDeclaration, System.Collections.Generic.IEnumerable<Fusee.Engine.Core.Effects.IFxParamDeclaration>)
  type: Constructor
  source:
    id: .ctor
    path: C:\Users\test\Documents\fusee\Fusee\src\Engine\Core\Effects\ShaderEffect.cs
    startLine: 34
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Effects
  summary: "\nThe constructor to create a shader effect.\n"
  remarks: Make sure to insert all uniform variable in &quot;effectParameters&quot; that are declared in the shader code.
  example: []
  syntax:
    content: public ShaderEffect(FxPassDeclaration effectPass, IEnumerable<IFxParamDeclaration> effectParameters)
    parameters:
    - id: effectPass
      type: Fusee.Engine.Core.Effects.FxPassDeclaration
      description: See <xref href="Fusee.Engine.Core.Effects.FxPassDeclaration" data-throw-if-not-resolved="false"></xref>.
    - id: effectParameters
      type: System.Collections.Generic.IEnumerable{Fusee.Engine.Core.Effects.IFxParamDeclaration}
      description: >
        The list of (uniform) parameters. The concrete type of the object also indicates the parameter&apos;s type.
    content.vb: Public Sub New(effectPass As FxPassDeclaration, effectParameters As IEnumerable(Of IFxParamDeclaration))
  overload: Fusee.Engine.Core.Effects.ShaderEffect.#ctor*
  nameWithType.vb: ShaderEffect.ShaderEffect(FxPassDeclaration, IEnumerable(Of IFxParamDeclaration))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Fusee.Engine.Core.Effects.ShaderEffect.ShaderEffect(Fusee.Engine.Core.Effects.FxPassDeclaration, System.Collections.Generic.IEnumerable(Of Fusee.Engine.Core.Effects.IFxParamDeclaration))
  name.vb: ShaderEffect(FxPassDeclaration, IEnumerable(Of IFxParamDeclaration))
- uid: Fusee.Engine.Core.Effects.ShaderEffect.Finalize
  commentId: M:Fusee.Engine.Core.Effects.ShaderEffect.Finalize
  id: Finalize
  parent: Fusee.Engine.Core.Effects.ShaderEffect
  langs:
  - csharp
  - vb
  name: Finalize()
  nameWithType: ShaderEffect.Finalize()
  fullName: Fusee.Engine.Core.Effects.ShaderEffect.Finalize()
  type: Method
  source:
    id: Finalize
    path: C:\Users\test\Documents\fusee\Fusee\src\Engine\Core\Effects\ShaderEffect.cs
    startLine: 55
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Effects
  summary: "\nDestructor calls <xref href=\"Fusee.Engine.Core.Effects.ShaderEffect.Dispose\" data-throw-if-not-resolved=\"false\"></xref> in order to fire MeshChanged event.\n"
  example: []
  syntax:
    content: protected void Finalize()
    content.vb: Protected Sub Finalize
  overload: Fusee.Engine.Core.Effects.ShaderEffect.Finalize*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Fusee.Engine.Core.Effects.ShaderEffect.Dispose
  commentId: M:Fusee.Engine.Core.Effects.ShaderEffect.Dispose
  id: Dispose
  parent: Fusee.Engine.Core.Effects.ShaderEffect
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ShaderEffect.Dispose()
  fullName: Fusee.Engine.Core.Effects.ShaderEffect.Dispose()
  type: Method
  source:
    id: Dispose
    path: C:\Users\test\Documents\fusee\Fusee\src\Engine\Core\Effects\ShaderEffect.cs
    startLine: 63
  assemblies:
  - Fusee.Engine.Core
  namespace: Fusee.Engine.Core.Effects
  summary: "\nIs called when GC of this shader effect kicks in\n"
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
  overload: Fusee.Engine.Core.Effects.ShaderEffect.Dispose*
  implements:
  - System.IDisposable.Dispose
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Fusee.Engine.Core.Effects.Effect.ParamDecl
  commentId: P:Fusee.Engine.Core.Effects.Effect.ParamDecl
  parent: Fusee.Engine.Core.Effects.Effect
  name: ParamDecl
  nameWithType: Effect.ParamDecl
  fullName: Fusee.Engine.Core.Effects.Effect.ParamDecl
- uid: Fusee.Engine.Core.Effects.Effect.SetFxParam``1(System.String,``0)
  commentId: M:Fusee.Engine.Core.Effects.Effect.SetFxParam``1(System.String,``0)
  isExternal: true
  name: SetFxParam<T>(String, T)
  nameWithType: Effect.SetFxParam<T>(String, T)
  fullName: Fusee.Engine.Core.Effects.Effect.SetFxParam<T>(System.String, T)
  nameWithType.vb: Effect.SetFxParam(Of T)(String, T)
  fullName.vb: Fusee.Engine.Core.Effects.Effect.SetFxParam(Of T)(System.String, T)
  name.vb: SetFxParam(Of T)(String, T)
  spec.csharp:
  - uid: Fusee.Engine.Core.Effects.Effect.SetFxParam``1(System.String,``0)
    name: SetFxParam<T>
    nameWithType: Effect.SetFxParam<T>
    fullName: Fusee.Engine.Core.Effects.Effect.SetFxParam<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Engine.Core.Effects.Effect.SetFxParam``1(System.String,``0)
    name: SetFxParam(Of T)
    nameWithType: Effect.SetFxParam(Of T)
    fullName: Fusee.Engine.Core.Effects.Effect.SetFxParam(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Engine.Core.Effects
  commentId: N:Fusee.Engine.Core.Effects
  name: Fusee.Engine.Core.Effects
  nameWithType: Fusee.Engine.Core.Effects
  fullName: Fusee.Engine.Core.Effects
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Fusee.Engine.Core.Scene.SceneComponent
  commentId: T:Fusee.Engine.Core.Scene.SceneComponent
  parent: Fusee.Engine.Core.Scene
  name: SceneComponent
  nameWithType: SceneComponent
  fullName: Fusee.Engine.Core.Scene.SceneComponent
- uid: Fusee.Engine.Core.Effects.Effect
  commentId: T:Fusee.Engine.Core.Effects.Effect
  parent: Fusee.Engine.Core.Effects
  name: Effect
  nameWithType: Effect
  fullName: Fusee.Engine.Core.Effects.Effect
- uid: Fusee.Xene.IComponent
  commentId: T:Fusee.Xene.IComponent
  parent: Fusee.Xene
  name: IComponent
  nameWithType: IComponent
  fullName: Fusee.Xene.IComponent
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Fusee.Engine.Core.Effects.Effect.RendererStates
  commentId: P:Fusee.Engine.Core.Effects.Effect.RendererStates
  parent: Fusee.Engine.Core.Effects.Effect
  name: RendererStates
  nameWithType: Effect.RendererStates
  fullName: Fusee.Engine.Core.Effects.Effect.RendererStates
- uid: Fusee.Engine.Core.Effects.Effect.EffectChanged
  commentId: P:Fusee.Engine.Core.Effects.Effect.EffectChanged
  parent: Fusee.Engine.Core.Effects.Effect
  name: EffectChanged
  nameWithType: Effect.EffectChanged
  fullName: Fusee.Engine.Core.Effects.Effect.EffectChanged
- uid: Fusee.Engine.Core.Effects.Effect.EffectManagerEventArgs
  commentId: P:Fusee.Engine.Core.Effects.Effect.EffectManagerEventArgs
  parent: Fusee.Engine.Core.Effects.Effect
  name: EffectManagerEventArgs
  nameWithType: Effect.EffectManagerEventArgs
  fullName: Fusee.Engine.Core.Effects.Effect.EffectManagerEventArgs
- uid: Fusee.Engine.Core.Effects.Effect.SessionUniqueIdentifier
  commentId: P:Fusee.Engine.Core.Effects.Effect.SessionUniqueIdentifier
  parent: Fusee.Engine.Core.Effects.Effect
  name: SessionUniqueIdentifier
  nameWithType: Effect.SessionUniqueIdentifier
  fullName: Fusee.Engine.Core.Effects.Effect.SessionUniqueIdentifier
- uid: Fusee.Engine.Core.Effects.Effect.SetFxParam``1(System.String,{T})
  commentId: M:Fusee.Engine.Core.Effects.Effect.SetFxParam``1(System.String,``0)
  parent: Fusee.Engine.Core.Effects.Effect
  definition: Fusee.Engine.Core.Effects.Effect.SetFxParam``1(System.String,``0)
  name: SetFxParam<T>(String, T)
  nameWithType: Effect.SetFxParam<T>(String, T)
  fullName: Fusee.Engine.Core.Effects.Effect.SetFxParam<T>(System.String, T)
  nameWithType.vb: Effect.SetFxParam(Of T)(String, T)
  fullName.vb: Fusee.Engine.Core.Effects.Effect.SetFxParam(Of T)(System.String, T)
  name.vb: SetFxParam(Of T)(String, T)
  spec.csharp:
  - uid: Fusee.Engine.Core.Effects.Effect.SetFxParam``1(System.String,``0)
    name: SetFxParam<T>
    nameWithType: Effect.SetFxParam<T>
    fullName: Fusee.Engine.Core.Effects.Effect.SetFxParam<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Engine.Core.Effects.Effect.SetFxParam``1(System.String,``0)
    name: SetFxParam(Of T)
    nameWithType: Effect.SetFxParam(Of T)
    fullName: Fusee.Engine.Core.Effects.Effect.SetFxParam(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Engine.Core.Effects.Effect.GetFxParam``1(System.String)
  commentId: M:Fusee.Engine.Core.Effects.Effect.GetFxParam``1(System.String)
  parent: Fusee.Engine.Core.Effects.Effect
  isExternal: true
  name: GetFxParam<T>(String)
  nameWithType: Effect.GetFxParam<T>(String)
  fullName: Fusee.Engine.Core.Effects.Effect.GetFxParam<T>(System.String)
  nameWithType.vb: Effect.GetFxParam(Of T)(String)
  fullName.vb: Fusee.Engine.Core.Effects.Effect.GetFxParam(Of T)(System.String)
  name.vb: GetFxParam(Of T)(String)
  spec.csharp:
  - uid: Fusee.Engine.Core.Effects.Effect.GetFxParam``1(System.String)
    name: GetFxParam<T>
    nameWithType: Effect.GetFxParam<T>
    fullName: Fusee.Engine.Core.Effects.Effect.GetFxParam<T>
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Fusee.Engine.Core.Effects.Effect.GetFxParam``1(System.String)
    name: GetFxParam(Of T)
    nameWithType: Effect.GetFxParam(Of T)
    fullName: Fusee.Engine.Core.Effects.Effect.GetFxParam(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Engine.Core.Scene.SceneComponent.Name
  commentId: F:Fusee.Engine.Core.Scene.SceneComponent.Name
  parent: Fusee.Engine.Core.Scene.SceneComponent
  name: Name
  nameWithType: SceneComponent.Name
  fullName: Fusee.Engine.Core.Scene.SceneComponent.Name
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Fusee.Engine.Core.Scene
  commentId: N:Fusee.Engine.Core.Scene
  name: Fusee.Engine.Core.Scene
  nameWithType: Fusee.Engine.Core.Scene
  fullName: Fusee.Engine.Core.Scene
- uid: Fusee.Xene
  commentId: N:Fusee.Xene
  name: Fusee.Xene
  nameWithType: Fusee.Xene
  fullName: Fusee.Xene
- uid: Fusee.Engine.Core.Effects.ShaderEffect.VertexShaderSrc*
  commentId: Overload:Fusee.Engine.Core.Effects.ShaderEffect.VertexShaderSrc
  name: VertexShaderSrc
  nameWithType: ShaderEffect.VertexShaderSrc
  fullName: Fusee.Engine.Core.Effects.ShaderEffect.VertexShaderSrc
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Fusee.Engine.Core.Effects.ShaderEffect.PixelShaderSrc*
  commentId: Overload:Fusee.Engine.Core.Effects.ShaderEffect.PixelShaderSrc
  name: PixelShaderSrc
  nameWithType: ShaderEffect.PixelShaderSrc
  fullName: Fusee.Engine.Core.Effects.ShaderEffect.PixelShaderSrc
- uid: Fusee.Engine.Core.Effects.ShaderEffect.GeometryShaderSrc*
  commentId: Overload:Fusee.Engine.Core.Effects.ShaderEffect.GeometryShaderSrc
  name: GeometryShaderSrc
  nameWithType: ShaderEffect.GeometryShaderSrc
  fullName: Fusee.Engine.Core.Effects.ShaderEffect.GeometryShaderSrc
- uid: Fusee.Engine.Core.Effects.FxPassDeclaration
  commentId: T:Fusee.Engine.Core.Effects.FxPassDeclaration
  parent: Fusee.Engine.Core.Effects
  name: FxPassDeclaration
  nameWithType: FxPassDeclaration
  fullName: Fusee.Engine.Core.Effects.FxPassDeclaration
- uid: Fusee.Engine.Core.Effects.ShaderEffect.#ctor*
  commentId: Overload:Fusee.Engine.Core.Effects.ShaderEffect.#ctor
  name: ShaderEffect
  nameWithType: ShaderEffect.ShaderEffect
  fullName: Fusee.Engine.Core.Effects.ShaderEffect.ShaderEffect
- uid: System.Collections.Generic.IEnumerable{Fusee.Engine.Core.Effects.IFxParamDeclaration}
  commentId: T:System.Collections.Generic.IEnumerable{Fusee.Engine.Core.Effects.IFxParamDeclaration}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<IFxParamDeclaration>
  nameWithType: IEnumerable<IFxParamDeclaration>
  fullName: System.Collections.Generic.IEnumerable<Fusee.Engine.Core.Effects.IFxParamDeclaration>
  nameWithType.vb: IEnumerable(Of IFxParamDeclaration)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Fusee.Engine.Core.Effects.IFxParamDeclaration)
  name.vb: IEnumerable(Of IFxParamDeclaration)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Fusee.Engine.Core.Effects.IFxParamDeclaration
    name: IFxParamDeclaration
    nameWithType: IFxParamDeclaration
    fullName: Fusee.Engine.Core.Effects.IFxParamDeclaration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Fusee.Engine.Core.Effects.IFxParamDeclaration
    name: IFxParamDeclaration
    nameWithType: IFxParamDeclaration
    fullName: Fusee.Engine.Core.Effects.IFxParamDeclaration
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Fusee.Engine.Core.Effects.ShaderEffect.Dispose
  commentId: M:Fusee.Engine.Core.Effects.ShaderEffect.Dispose
  isExternal: true
- uid: Fusee.Engine.Core.Effects.ShaderEffect.Finalize*
  commentId: Overload:Fusee.Engine.Core.Effects.ShaderEffect.Finalize
  name: Finalize
  nameWithType: ShaderEffect.Finalize
  fullName: Fusee.Engine.Core.Effects.ShaderEffect.Finalize
- uid: Fusee.Engine.Core.Effects.ShaderEffect.Dispose*
  commentId: Overload:Fusee.Engine.Core.Effects.ShaderEffect.Dispose
  name: Dispose
  nameWithType: ShaderEffect.Dispose
  fullName: Fusee.Engine.Core.Effects.ShaderEffect.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    nameWithType: IDisposable.Dispose
    fullName: System.IDisposable.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )

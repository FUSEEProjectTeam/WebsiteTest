### YamlMime:ManagedReference
items:
- uid: Fusee.Jometri.GeometricOperations
  commentId: T:Fusee.Jometri.GeometricOperations
  id: GeometricOperations
  parent: Fusee.Jometri
  children:
  - Fusee.Jometri.GeometricOperations.CalculateFaceNormal(System.Collections.Generic.IList{Fusee.Jometri.Vertex})
  - Fusee.Jometri.GeometricOperations.GetHalfEdgesWChangedWinding(Fusee.Jometri.Geometry,System.Collections.Generic.IEnumerable{Fusee.Jometri.HalfEdge})
  - Fusee.Jometri.GeometricOperations.GetVerticesMeanPos(System.Collections.Generic.List{Fusee.Jometri.Vertex})
  - Fusee.Jometri.GeometricOperations.IsAngleGreaterOrEqualPi(Fusee.Jometri.Geometry,Fusee.Jometri.Face,Fusee.Jometri.Vertex,Fusee.Jometri.Vertex,Fusee.Jometri.Vertex)
  - Fusee.Jometri.GeometricOperations.IsAngleGreaterPi(Fusee.Jometri.Geometry,Fusee.Jometri.Face,Fusee.Jometri.Vertex,Fusee.Jometri.Vertex,Fusee.Jometri.Vertex)
  - Fusee.Jometri.GeometricOperations.IsCounterClockwise(System.Collections.Generic.IList{Fusee.Math.Core.float3})
  - Fusee.Jometri.GeometricOperations.IsLineIntersectingLine(Fusee.Math.Core.float3,Fusee.Math.Core.float3,Fusee.Math.Core.float3,Fusee.Math.Core.float3,Fusee.Math.Core.float3@)
  - Fusee.Jometri.GeometricOperations.IsPointInPolygon(Fusee.Jometri.Geometry,Fusee.Jometri.Face,Fusee.Jometri.Vertex)
  - Fusee.Jometri.GeometricOperations.IsPointInPolygon(Fusee.Jometri.Geometry,Fusee.Jometri.Face,Fusee.Math.Core.float3)
  - Fusee.Jometri.GeometricOperations.IsVertexAdjacentToVertex(Fusee.Jometri.Geometry,System.Int32,System.Int32,Fusee.Jometri.HalfEdge,Fusee.Jometri.HalfEdge)
  langs:
  - csharp
  - vb
  name: GeometricOperations
  nameWithType: GeometricOperations
  fullName: Fusee.Jometri.GeometricOperations
  type: Class
  source:
    id: GeometricOperations
    path: C:\Users\test\Documents\fusee\Fusee\src\Jometri\GeometricOperations.cs
    startLine: 9
  assemblies:
  - Fusee.Jometri
  namespace: Fusee.Jometri
  summary: "\nProvides methods to perform geometric operations.\n"
  example: []
  syntax:
    content: public static class GeometricOperations
    content.vb: Public Module GeometricOperations
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Fusee.Jometri.GeometricOperations.CalculateFaceNormal(System.Collections.Generic.IList{Fusee.Jometri.Vertex})
  commentId: M:Fusee.Jometri.GeometricOperations.CalculateFaceNormal(System.Collections.Generic.IList{Fusee.Jometri.Vertex})
  id: CalculateFaceNormal(System.Collections.Generic.IList{Fusee.Jometri.Vertex})
  parent: Fusee.Jometri.GeometricOperations
  langs:
  - csharp
  - vb
  name: CalculateFaceNormal(IList<Vertex>)
  nameWithType: GeometricOperations.CalculateFaceNormal(IList<Vertex>)
  fullName: Fusee.Jometri.GeometricOperations.CalculateFaceNormal(System.Collections.Generic.IList<Fusee.Jometri.Vertex>)
  type: Method
  source:
    id: CalculateFaceNormal
    path: C:\Users\test\Documents\fusee\Fusee\src\Jometri\GeometricOperations.cs
    startLine: 72
  assemblies:
  - Fusee.Jometri
  namespace: Fusee.Jometri
  summary: "\nCalculates a face normal from three vertices. The vertices have to be coplanar and part of the face.\n"
  example: []
  syntax:
    content: public static float3 CalculateFaceNormal(IList<Vertex> faceOuterVertices)
    parameters:
    - id: faceOuterVertices
      type: System.Collections.Generic.IList{Fusee.Jometri.Vertex}
      description: All vertices of the outer boundary of the face.
    return:
      type: Fusee.Math.Core.float3
      description: ''
    content.vb: Public Shared Function CalculateFaceNormal(faceOuterVertices As IList(Of Vertex)) As float3
  overload: Fusee.Jometri.GeometricOperations.CalculateFaceNormal*
  nameWithType.vb: GeometricOperations.CalculateFaceNormal(IList(Of Vertex))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Fusee.Jometri.GeometricOperations.CalculateFaceNormal(System.Collections.Generic.IList(Of Fusee.Jometri.Vertex))
  name.vb: CalculateFaceNormal(IList(Of Vertex))
- uid: Fusee.Jometri.GeometricOperations.IsPointInPolygon(Fusee.Jometri.Geometry,Fusee.Jometri.Face,Fusee.Jometri.Vertex)
  commentId: M:Fusee.Jometri.GeometricOperations.IsPointInPolygon(Fusee.Jometri.Geometry,Fusee.Jometri.Face,Fusee.Jometri.Vertex)
  id: IsPointInPolygon(Fusee.Jometri.Geometry,Fusee.Jometri.Face,Fusee.Jometri.Vertex)
  isExtensionMethod: true
  parent: Fusee.Jometri.GeometricOperations
  langs:
  - csharp
  - vb
  name: IsPointInPolygon(Geometry, Face, Vertex)
  nameWithType: GeometricOperations.IsPointInPolygon(Geometry, Face, Vertex)
  fullName: Fusee.Jometri.GeometricOperations.IsPointInPolygon(Fusee.Jometri.Geometry, Fusee.Jometri.Face, Fusee.Jometri.Vertex)
  type: Method
  source:
    id: IsPointInPolygon
    path: C:\Users\test\Documents\fusee\Fusee\src\Jometri\GeometricOperations.cs
    startLine: 100
  assemblies:
  - Fusee.Jometri
  namespace: Fusee.Jometri
  summary: "\nTests if a point/vertex lies inside or outside a face - only works for polygons parallel to a plane!\n"
  example: []
  syntax:
    content: public static bool IsPointInPolygon(this Geometry geometry, Face face, Vertex v)
    parameters:
    - id: geometry
      type: Fusee.Jometri.Geometry
      description: 'The geometry the polygon (here: face) belongs to.'
    - id: face
      type: Fusee.Jometri.Face
      description: The faces to be tested.
    - id: v
      type: Fusee.Jometri.Vertex
      description: The vertex to be tested.
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsPointInPolygon(geometry As Geometry, face As Face, v As Vertex) As Boolean
  overload: Fusee.Jometri.GeometricOperations.IsPointInPolygon*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Jometri.GeometricOperations.IsPointInPolygon(Fusee.Jometri.Geometry,Fusee.Jometri.Face,Fusee.Math.Core.float3)
  commentId: M:Fusee.Jometri.GeometricOperations.IsPointInPolygon(Fusee.Jometri.Geometry,Fusee.Jometri.Face,Fusee.Math.Core.float3)
  id: IsPointInPolygon(Fusee.Jometri.Geometry,Fusee.Jometri.Face,Fusee.Math.Core.float3)
  isExtensionMethod: true
  parent: Fusee.Jometri.GeometricOperations
  langs:
  - csharp
  - vb
  name: IsPointInPolygon(Geometry, Face, float3)
  nameWithType: GeometricOperations.IsPointInPolygon(Geometry, Face, float3)
  fullName: Fusee.Jometri.GeometricOperations.IsPointInPolygon(Fusee.Jometri.Geometry, Fusee.Jometri.Face, Fusee.Math.Core.float3)
  type: Method
  source:
    id: IsPointInPolygon
    path: C:\Users\test\Documents\fusee\Fusee\src\Jometri\GeometricOperations.cs
    startLine: 140
  assemblies:
  - Fusee.Jometri
  namespace: Fusee.Jometri
  summary: "\nTests if a point/vertex lies inside or outside a face - Only use this if you know the face AND vertex lie in the same plane and this plane is parallel to xy or xz or yz!\n"
  example: []
  syntax:
    content: public static bool IsPointInPolygon(this Geometry geometry, Face face, float3 v)
    parameters:
    - id: geometry
      type: Fusee.Jometri.Geometry
      description: 'The geometry the polygon (here: face) belongs to.'
    - id: face
      type: Fusee.Jometri.Face
      description: The faces to be tested. It will not be Reduced2D!
    - id: v
      type: Fusee.Math.Core.float3
      description: The vertex to be tested.
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsPointInPolygon(geometry As Geometry, face As Face, v As float3) As Boolean
  overload: Fusee.Jometri.GeometricOperations.IsPointInPolygon*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Jometri.GeometricOperations.IsAngleGreaterPi(Fusee.Jometri.Geometry,Fusee.Jometri.Face,Fusee.Jometri.Vertex,Fusee.Jometri.Vertex,Fusee.Jometri.Vertex)
  commentId: M:Fusee.Jometri.GeometricOperations.IsAngleGreaterPi(Fusee.Jometri.Geometry,Fusee.Jometri.Face,Fusee.Jometri.Vertex,Fusee.Jometri.Vertex,Fusee.Jometri.Vertex)
  id: IsAngleGreaterPi(Fusee.Jometri.Geometry,Fusee.Jometri.Face,Fusee.Jometri.Vertex,Fusee.Jometri.Vertex,Fusee.Jometri.Vertex)
  isExtensionMethod: true
  parent: Fusee.Jometri.GeometricOperations
  langs:
  - csharp
  - vb
  name: IsAngleGreaterPi(Geometry, Face, Vertex, Vertex, Vertex)
  nameWithType: GeometricOperations.IsAngleGreaterPi(Geometry, Face, Vertex, Vertex, Vertex)
  fullName: Fusee.Jometri.GeometricOperations.IsAngleGreaterPi(Fusee.Jometri.Geometry, Fusee.Jometri.Face, Fusee.Jometri.Vertex, Fusee.Jometri.Vertex, Fusee.Jometri.Vertex)
  type: Method
  source:
    id: IsAngleGreaterPi
    path: C:\Users\test\Documents\fusee\Fusee\src\Jometri\GeometricOperations.cs
    startLine: 180
  assemblies:
  - Fusee.Jometri
  namespace: Fusee.Jometri
  summary: "\nDetermines whether the angle between two vectors formed by three vertices is greater than 180 Â°.\nThe first vector will be created from v1 and v2, the second from v2 and v3.\n"
  example: []
  syntax:
    content: public static bool IsAngleGreaterPi(this Geometry geom, Face face, Vertex v1, Vertex v2, Vertex v3)
    parameters:
    - id: geom
      type: Fusee.Jometri.Geometry
      description: The geometry the vertices belong to.
    - id: face
      type: Fusee.Jometri.Face
      description: The face the vertices belong to.
    - id: v1
      type: Fusee.Jometri.Vertex
      description: Vertex one
    - id: v2
      type: Fusee.Jometri.Vertex
      description: Vertex two
    - id: v3
      type: Fusee.Jometri.Vertex
      description: Vertex three
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsAngleGreaterPi(geom As Geometry, face As Face, v1 As Vertex, v2 As Vertex, v3 As Vertex) As Boolean
  overload: Fusee.Jometri.GeometricOperations.IsAngleGreaterPi*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Jometri.GeometricOperations.IsAngleGreaterOrEqualPi(Fusee.Jometri.Geometry,Fusee.Jometri.Face,Fusee.Jometri.Vertex,Fusee.Jometri.Vertex,Fusee.Jometri.Vertex)
  commentId: M:Fusee.Jometri.GeometricOperations.IsAngleGreaterOrEqualPi(Fusee.Jometri.Geometry,Fusee.Jometri.Face,Fusee.Jometri.Vertex,Fusee.Jometri.Vertex,Fusee.Jometri.Vertex)
  id: IsAngleGreaterOrEqualPi(Fusee.Jometri.Geometry,Fusee.Jometri.Face,Fusee.Jometri.Vertex,Fusee.Jometri.Vertex,Fusee.Jometri.Vertex)
  isExtensionMethod: true
  parent: Fusee.Jometri.GeometricOperations
  langs:
  - csharp
  - vb
  name: IsAngleGreaterOrEqualPi(Geometry, Face, Vertex, Vertex, Vertex)
  nameWithType: GeometricOperations.IsAngleGreaterOrEqualPi(Geometry, Face, Vertex, Vertex, Vertex)
  fullName: Fusee.Jometri.GeometricOperations.IsAngleGreaterOrEqualPi(Fusee.Jometri.Geometry, Fusee.Jometri.Face, Fusee.Jometri.Vertex, Fusee.Jometri.Vertex, Fusee.Jometri.Vertex)
  type: Method
  source:
    id: IsAngleGreaterOrEqualPi
    path: C:\Users\test\Documents\fusee\Fusee\src\Jometri\GeometricOperations.cs
    startLine: 210
  assemblies:
  - Fusee.Jometri
  namespace: Fusee.Jometri
  summary: "\nDetermines if the angle between two vectors, formed by three vertices, is greater or equal 180Â°.\nThe first vector will be created from v1 and v2, the second from v2 and v3.\n"
  example: []
  syntax:
    content: public static bool IsAngleGreaterOrEqualPi(this Geometry geom, Face face, Vertex v1, Vertex v2, Vertex v3)
    parameters:
    - id: geom
      type: Fusee.Jometri.Geometry
      description: The geometry the vertices belong to.
    - id: face
      type: Fusee.Jometri.Face
      description: The face the vertices belong to.
    - id: v1
      type: Fusee.Jometri.Vertex
      description: Vertex one
    - id: v2
      type: Fusee.Jometri.Vertex
      description: Vertex two
    - id: v3
      type: Fusee.Jometri.Vertex
      description: Vertex three
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsAngleGreaterOrEqualPi(geom As Geometry, face As Face, v1 As Vertex, v2 As Vertex, v3 As Vertex) As Boolean
  overload: Fusee.Jometri.GeometricOperations.IsAngleGreaterOrEqualPi*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Jometri.GeometricOperations.IsVertexAdjacentToVertex(Fusee.Jometri.Geometry,System.Int32,System.Int32,Fusee.Jometri.HalfEdge,Fusee.Jometri.HalfEdge)
  commentId: M:Fusee.Jometri.GeometricOperations.IsVertexAdjacentToVertex(Fusee.Jometri.Geometry,System.Int32,System.Int32,Fusee.Jometri.HalfEdge,Fusee.Jometri.HalfEdge)
  id: IsVertexAdjacentToVertex(Fusee.Jometri.Geometry,System.Int32,System.Int32,Fusee.Jometri.HalfEdge,Fusee.Jometri.HalfEdge)
  isExtensionMethod: true
  parent: Fusee.Jometri.GeometricOperations
  langs:
  - csharp
  - vb
  name: IsVertexAdjacentToVertex(Geometry, Int32, Int32, HalfEdge, HalfEdge)
  nameWithType: GeometricOperations.IsVertexAdjacentToVertex(Geometry, Int32, Int32, HalfEdge, HalfEdge)
  fullName: Fusee.Jometri.GeometricOperations.IsVertexAdjacentToVertex(Fusee.Jometri.Geometry, System.Int32, System.Int32, Fusee.Jometri.HalfEdge, Fusee.Jometri.HalfEdge)
  type: Method
  source:
    id: IsVertexAdjacentToVertex
    path: C:\Users\test\Documents\fusee\Fusee\src\Jometri\GeometricOperations.cs
    startLine: 236
  assemblies:
  - Fusee.Jometri
  namespace: Fusee.Jometri
  summary: "\nTests if a vertex is a direct neighbor of an other vertex. Only use this method if you know the incident half edges of the vertex.\n"
  example: []
  syntax:
    content: public static bool IsVertexAdjacentToVertex(this Geometry geometry, int p, int q, HalfEdge vertPStartHe, HalfEdge vertQStartHe)
    parameters:
    - id: geometry
      type: Fusee.Jometri.Geometry
      description: The geometry the vertex belongs to.
    - id: p
      type: System.Int32
      description: First vertex
    - id: q
      type: System.Int32
      description: Second vertex
    - id: vertPStartHe
      type: Fusee.Jometri.HalfEdge
      description: 'p incident half edge. '
    - id: vertQStartHe
      type: Fusee.Jometri.HalfEdge
      description: q incident half edge.
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsVertexAdjacentToVertex(geometry As Geometry, p As Integer, q As Integer, vertPStartHe As HalfEdge, vertQStartHe As HalfEdge) As Boolean
  overload: Fusee.Jometri.GeometricOperations.IsVertexAdjacentToVertex*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Jometri.GeometricOperations.GetHalfEdgesWChangedWinding(Fusee.Jometri.Geometry,System.Collections.Generic.IEnumerable{Fusee.Jometri.HalfEdge})
  commentId: M:Fusee.Jometri.GeometricOperations.GetHalfEdgesWChangedWinding(Fusee.Jometri.Geometry,System.Collections.Generic.IEnumerable{Fusee.Jometri.HalfEdge})
  id: GetHalfEdgesWChangedWinding(Fusee.Jometri.Geometry,System.Collections.Generic.IEnumerable{Fusee.Jometri.HalfEdge})
  isExtensionMethod: true
  parent: Fusee.Jometri.GeometricOperations
  langs:
  - csharp
  - vb
  name: GetHalfEdgesWChangedWinding(Geometry, IEnumerable<HalfEdge>)
  nameWithType: GeometricOperations.GetHalfEdgesWChangedWinding(Geometry, IEnumerable<HalfEdge>)
  fullName: Fusee.Jometri.GeometricOperations.GetHalfEdgesWChangedWinding(Fusee.Jometri.Geometry, System.Collections.Generic.IEnumerable<Fusee.Jometri.HalfEdge>)
  type: Method
  source:
    id: GetHalfEdgesWChangedWinding
    path: C:\Users\test\Documents\fusee\Fusee\src\Jometri\GeometricOperations.cs
    startLine: 250
  assemblies:
  - Fusee.Jometri
  namespace: Fusee.Jometri
  summary: "\nReturns the half edges from a source collection of half edges - with opposite direction.\n"
  example: []
  syntax:
    content: public static IEnumerable<HalfEdge> GetHalfEdgesWChangedWinding(this Geometry geometry, IEnumerable<HalfEdge> originHEdges)
    parameters:
    - id: geometry
      type: Fusee.Jometri.Geometry
      description: ''
    - id: originHEdges
      type: System.Collections.Generic.IEnumerable{Fusee.Jometri.HalfEdge}
      description: ''
    return:
      type: System.Collections.Generic.IEnumerable{Fusee.Jometri.HalfEdge}
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function GetHalfEdgesWChangedWinding(geometry As Geometry, originHEdges As IEnumerable(Of HalfEdge)) As IEnumerable(Of HalfEdge)
  overload: Fusee.Jometri.GeometricOperations.GetHalfEdgesWChangedWinding*
  nameWithType.vb: GeometricOperations.GetHalfEdgesWChangedWinding(Geometry, IEnumerable(Of HalfEdge))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Fusee.Jometri.GeometricOperations.GetHalfEdgesWChangedWinding(Fusee.Jometri.Geometry, System.Collections.Generic.IEnumerable(Of Fusee.Jometri.HalfEdge))
  name.vb: GetHalfEdgesWChangedWinding(Geometry, IEnumerable(Of HalfEdge))
- uid: Fusee.Jometri.GeometricOperations.IsCounterClockwise(System.Collections.Generic.IList{Fusee.Math.Core.float3})
  commentId: M:Fusee.Jometri.GeometricOperations.IsCounterClockwise(System.Collections.Generic.IList{Fusee.Math.Core.float3})
  id: IsCounterClockwise(System.Collections.Generic.IList{Fusee.Math.Core.float3})
  isExtensionMethod: true
  parent: Fusee.Jometri.GeometricOperations
  langs:
  - csharp
  - vb
  name: IsCounterClockwise(IList<float3>)
  nameWithType: GeometricOperations.IsCounterClockwise(IList<float3>)
  fullName: Fusee.Jometri.GeometricOperations.IsCounterClockwise(System.Collections.Generic.IList<Fusee.Math.Core.float3>)
  type: Method
  source:
    id: IsCounterClockwise
    path: C:\Users\test\Documents\fusee\Fusee\src\Jometri\GeometricOperations.cs
    startLine: 280
  assemblies:
  - Fusee.Jometri
  namespace: Fusee.Jometri
  summary: "\nChecks whether a polygon, parallel to the xy plane, has a ccw winding.\nThis method does NOT support polygons parallel to the yz or xz plane!\nTo guarantee a correct output make sure the polygon doesn&apos;t degenerate when the z coordinates are ignored.\n"
  example: []
  syntax:
    content: public static bool IsCounterClockwise(this IList<float3> source)
    parameters:
    - id: source
      type: System.Collections.Generic.IList{Fusee.Math.Core.float3}
      description: The polygon, represented as list of float3s.
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function IsCounterClockwise(source As IList(Of float3)) As Boolean
  overload: Fusee.Jometri.GeometricOperations.IsCounterClockwise*
  nameWithType.vb: GeometricOperations.IsCounterClockwise(IList(Of float3))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Fusee.Jometri.GeometricOperations.IsCounterClockwise(System.Collections.Generic.IList(Of Fusee.Math.Core.float3))
  name.vb: IsCounterClockwise(IList(Of float3))
- uid: Fusee.Jometri.GeometricOperations.IsLineIntersectingLine(Fusee.Math.Core.float3,Fusee.Math.Core.float3,Fusee.Math.Core.float3,Fusee.Math.Core.float3,Fusee.Math.Core.float3@)
  commentId: M:Fusee.Jometri.GeometricOperations.IsLineIntersectingLine(Fusee.Math.Core.float3,Fusee.Math.Core.float3,Fusee.Math.Core.float3,Fusee.Math.Core.float3,Fusee.Math.Core.float3@)
  id: IsLineIntersectingLine(Fusee.Math.Core.float3,Fusee.Math.Core.float3,Fusee.Math.Core.float3,Fusee.Math.Core.float3,Fusee.Math.Core.float3@)
  parent: Fusee.Jometri.GeometricOperations
  langs:
  - csharp
  - vb
  name: IsLineIntersectingLine(float3, float3, float3, float3, out float3)
  nameWithType: GeometricOperations.IsLineIntersectingLine(float3, float3, float3, float3, out float3)
  fullName: Fusee.Jometri.GeometricOperations.IsLineIntersectingLine(Fusee.Math.Core.float3, Fusee.Math.Core.float3, Fusee.Math.Core.float3, Fusee.Math.Core.float3, out Fusee.Math.Core.float3)
  type: Method
  source:
    id: IsLineIntersectingLine
    path: C:\Users\test\Documents\fusee\Fusee\src\Jometri\GeometricOperations.cs
    startLine: 306
  assemblies:
  - Fusee.Jometri
  namespace: Fusee.Jometri
  summary: "\nChecks if two lines intersect.\n"
  example: []
  syntax:
    content: public static bool IsLineIntersectingLine(float3 p1, float3 p2, float3 p3, float3 p4, out float3 intersectionPoint)
    parameters:
    - id: p1
      type: Fusee.Math.Core.float3
      description: First control point of the first line.
    - id: p2
      type: Fusee.Math.Core.float3
      description: Second control point of the first line.
    - id: p3
      type: Fusee.Math.Core.float3
      description: First point of the second line.
    - id: p4
      type: Fusee.Math.Core.float3
      description: Second point of the second line.
    - id: intersectionPoint
      type: Fusee.Math.Core.float3
      description: The intersection point, if the lines do not intersect this will be float3 Infinity.
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsLineIntersectingLine(p1 As float3, p2 As float3, p3 As float3, p4 As float3, ByRef intersectionPoint As float3) As Boolean
  overload: Fusee.Jometri.GeometricOperations.IsLineIntersectingLine*
  nameWithType.vb: GeometricOperations.IsLineIntersectingLine(float3, float3, float3, float3, ByRef float3)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Fusee.Jometri.GeometricOperations.IsLineIntersectingLine(Fusee.Math.Core.float3, Fusee.Math.Core.float3, Fusee.Math.Core.float3, Fusee.Math.Core.float3, ByRef Fusee.Math.Core.float3)
  name.vb: IsLineIntersectingLine(float3, float3, float3, float3, ByRef float3)
- uid: Fusee.Jometri.GeometricOperations.GetVerticesMeanPos(System.Collections.Generic.List{Fusee.Jometri.Vertex})
  commentId: M:Fusee.Jometri.GeometricOperations.GetVerticesMeanPos(System.Collections.Generic.List{Fusee.Jometri.Vertex})
  id: GetVerticesMeanPos(System.Collections.Generic.List{Fusee.Jometri.Vertex})
  parent: Fusee.Jometri.GeometricOperations
  langs:
  - csharp
  - vb
  name: GetVerticesMeanPos(List<Vertex>)
  nameWithType: GeometricOperations.GetVerticesMeanPos(List<Vertex>)
  fullName: Fusee.Jometri.GeometricOperations.GetVerticesMeanPos(System.Collections.Generic.List<Fusee.Jometri.Vertex>)
  type: Method
  source:
    id: GetVerticesMeanPos
    path: C:\Users\test\Documents\fusee\Fusee\src\Jometri\GeometricOperations.cs
    startLine: 352
  assemblies:
  - Fusee.Jometri
  namespace: Fusee.Jometri
  summary: "\nCalculates the mean Vertex position of given Vertices.\n"
  example: []
  syntax:
    content: public static float3 GetVerticesMeanPos(List<Vertex> vertices)
    parameters:
    - id: vertices
      type: System.Collections.Generic.List{Fusee.Jometri.Vertex}
      description: List of all Vertices which are part of the new mean position.
    return:
      type: Fusee.Math.Core.float3
      description: Returns the position of the mean of all Vertices as a float3.
    content.vb: Public Shared Function GetVerticesMeanPos(vertices As List(Of Vertex)) As float3
  overload: Fusee.Jometri.GeometricOperations.GetVerticesMeanPos*
  nameWithType.vb: GeometricOperations.GetVerticesMeanPos(List(Of Vertex))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Fusee.Jometri.GeometricOperations.GetVerticesMeanPos(System.Collections.Generic.List(Of Fusee.Jometri.Vertex))
  name.vb: GetVerticesMeanPos(List(Of Vertex))
references:
- uid: Fusee.Jometri
  commentId: N:Fusee.Jometri
  name: Fusee.Jometri
  nameWithType: Fusee.Jometri
  fullName: Fusee.Jometri
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Fusee.Jometri.GeometricOperations.CalculateFaceNormal*
  commentId: Overload:Fusee.Jometri.GeometricOperations.CalculateFaceNormal
  name: CalculateFaceNormal
  nameWithType: GeometricOperations.CalculateFaceNormal
  fullName: Fusee.Jometri.GeometricOperations.CalculateFaceNormal
- uid: System.Collections.Generic.IList{Fusee.Jometri.Vertex}
  commentId: T:System.Collections.Generic.IList{Fusee.Jometri.Vertex}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<Vertex>
  nameWithType: IList<Vertex>
  fullName: System.Collections.Generic.IList<Fusee.Jometri.Vertex>
  nameWithType.vb: IList(Of Vertex)
  fullName.vb: System.Collections.Generic.IList(Of Fusee.Jometri.Vertex)
  name.vb: IList(Of Vertex)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Fusee.Jometri.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: Fusee.Jometri.Vertex
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Fusee.Jometri.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: Fusee.Jometri.Vertex
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Math.Core.float3
  commentId: T:Fusee.Math.Core.float3
  parent: Fusee.Math.Core
  name: float3
  nameWithType: float3
  fullName: Fusee.Math.Core.float3
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Fusee.Math.Core
  commentId: N:Fusee.Math.Core
  name: Fusee.Math.Core
  nameWithType: Fusee.Math.Core
  fullName: Fusee.Math.Core
- uid: Fusee.Jometri.GeometricOperations.IsPointInPolygon*
  commentId: Overload:Fusee.Jometri.GeometricOperations.IsPointInPolygon
  name: IsPointInPolygon
  nameWithType: GeometricOperations.IsPointInPolygon
  fullName: Fusee.Jometri.GeometricOperations.IsPointInPolygon
- uid: Fusee.Jometri.Geometry
  commentId: T:Fusee.Jometri.Geometry
  parent: Fusee.Jometri
  name: Geometry
  nameWithType: Geometry
  fullName: Fusee.Jometri.Geometry
- uid: Fusee.Jometri.Face
  commentId: T:Fusee.Jometri.Face
  parent: Fusee.Jometri
  name: Face
  nameWithType: Face
  fullName: Fusee.Jometri.Face
- uid: Fusee.Jometri.Vertex
  commentId: T:Fusee.Jometri.Vertex
  parent: Fusee.Jometri
  name: Vertex
  nameWithType: Vertex
  fullName: Fusee.Jometri.Vertex
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Fusee.Jometri.GeometricOperations.IsAngleGreaterPi*
  commentId: Overload:Fusee.Jometri.GeometricOperations.IsAngleGreaterPi
  name: IsAngleGreaterPi
  nameWithType: GeometricOperations.IsAngleGreaterPi
  fullName: Fusee.Jometri.GeometricOperations.IsAngleGreaterPi
- uid: Fusee.Jometri.GeometricOperations.IsAngleGreaterOrEqualPi*
  commentId: Overload:Fusee.Jometri.GeometricOperations.IsAngleGreaterOrEqualPi
  name: IsAngleGreaterOrEqualPi
  nameWithType: GeometricOperations.IsAngleGreaterOrEqualPi
  fullName: Fusee.Jometri.GeometricOperations.IsAngleGreaterOrEqualPi
- uid: Fusee.Jometri.GeometricOperations.IsVertexAdjacentToVertex*
  commentId: Overload:Fusee.Jometri.GeometricOperations.IsVertexAdjacentToVertex
  name: IsVertexAdjacentToVertex
  nameWithType: GeometricOperations.IsVertexAdjacentToVertex
  fullName: Fusee.Jometri.GeometricOperations.IsVertexAdjacentToVertex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Fusee.Jometri.HalfEdge
  commentId: T:Fusee.Jometri.HalfEdge
  parent: Fusee.Jometri
  name: HalfEdge
  nameWithType: HalfEdge
  fullName: Fusee.Jometri.HalfEdge
- uid: Fusee.Jometri.GeometricOperations.GetHalfEdgesWChangedWinding*
  commentId: Overload:Fusee.Jometri.GeometricOperations.GetHalfEdgesWChangedWinding
  name: GetHalfEdgesWChangedWinding
  nameWithType: GeometricOperations.GetHalfEdgesWChangedWinding
  fullName: Fusee.Jometri.GeometricOperations.GetHalfEdgesWChangedWinding
- uid: System.Collections.Generic.IEnumerable{Fusee.Jometri.HalfEdge}
  commentId: T:System.Collections.Generic.IEnumerable{Fusee.Jometri.HalfEdge}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<HalfEdge>
  nameWithType: IEnumerable<HalfEdge>
  fullName: System.Collections.Generic.IEnumerable<Fusee.Jometri.HalfEdge>
  nameWithType.vb: IEnumerable(Of HalfEdge)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Fusee.Jometri.HalfEdge)
  name.vb: IEnumerable(Of HalfEdge)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Fusee.Jometri.HalfEdge
    name: HalfEdge
    nameWithType: HalfEdge
    fullName: Fusee.Jometri.HalfEdge
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Fusee.Jometri.HalfEdge
    name: HalfEdge
    nameWithType: HalfEdge
    fullName: Fusee.Jometri.HalfEdge
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Jometri.GeometricOperations.IsCounterClockwise*
  commentId: Overload:Fusee.Jometri.GeometricOperations.IsCounterClockwise
  name: IsCounterClockwise
  nameWithType: GeometricOperations.IsCounterClockwise
  fullName: Fusee.Jometri.GeometricOperations.IsCounterClockwise
- uid: System.Collections.Generic.IList{Fusee.Math.Core.float3}
  commentId: T:System.Collections.Generic.IList{Fusee.Math.Core.float3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<float3>
  nameWithType: IList<float3>
  fullName: System.Collections.Generic.IList<Fusee.Math.Core.float3>
  nameWithType.vb: IList(Of float3)
  fullName.vb: System.Collections.Generic.IList(Of Fusee.Math.Core.float3)
  name.vb: IList(Of float3)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Fusee.Math.Core.float3
    name: float3
    nameWithType: float3
    fullName: Fusee.Math.Core.float3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Fusee.Math.Core.float3
    name: float3
    nameWithType: float3
    fullName: Fusee.Math.Core.float3
  - name: )
    nameWithType: )
    fullName: )
- uid: Fusee.Jometri.GeometricOperations.IsLineIntersectingLine*
  commentId: Overload:Fusee.Jometri.GeometricOperations.IsLineIntersectingLine
  name: IsLineIntersectingLine
  nameWithType: GeometricOperations.IsLineIntersectingLine
  fullName: Fusee.Jometri.GeometricOperations.IsLineIntersectingLine
- uid: Fusee.Jometri.GeometricOperations.GetVerticesMeanPos*
  commentId: Overload:Fusee.Jometri.GeometricOperations.GetVerticesMeanPos
  name: GetVerticesMeanPos
  nameWithType: GeometricOperations.GetVerticesMeanPos
  fullName: Fusee.Jometri.GeometricOperations.GetVerticesMeanPos
- uid: System.Collections.Generic.List{Fusee.Jometri.Vertex}
  commentId: T:System.Collections.Generic.List{Fusee.Jometri.Vertex}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Vertex>
  nameWithType: List<Vertex>
  fullName: System.Collections.Generic.List<Fusee.Jometri.Vertex>
  nameWithType.vb: List(Of Vertex)
  fullName.vb: System.Collections.Generic.List(Of Fusee.Jometri.Vertex)
  name.vb: List(Of Vertex)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Fusee.Jometri.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: Fusee.Jometri.Vertex
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Fusee.Jometri.Vertex
    name: Vertex
    nameWithType: Vertex
    fullName: Fusee.Jometri.Vertex
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )

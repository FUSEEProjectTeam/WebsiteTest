### YamlMime:ManagedReference
items:
- uid: Fusee.Base.Core.Diagnostics
  commentId: T:Fusee.Base.Core.Diagnostics
  id: Diagnostics
  parent: Fusee.Base.Core
  children:
  - Fusee.Base.Core.Diagnostics.Debug(System.Object,System.Exception,System.Object[],System.String,System.Int32,System.String)
  - Fusee.Base.Core.Diagnostics.Error(System.Object,System.Exception,System.Object[],System.String,System.Int32,System.String)
  - Fusee.Base.Core.Diagnostics.Info(System.Object,System.Exception,System.Object[],System.String,System.Int32,System.String)
  - Fusee.Base.Core.Diagnostics.Log(System.Object,Fusee.Base.Core.Diagnostics.SeverityLevel,System.String,System.Int32,System.String)
  - Fusee.Base.Core.Diagnostics.LogToTextFile(System.Boolean,System.String)
  - Fusee.Base.Core.Diagnostics.SetFormat(Fusee.Base.Core.Diagnostics.Formater)
  - Fusee.Base.Core.Diagnostics.SetMinConsoleLoggingSeverityLevel(Fusee.Base.Core.Diagnostics.SeverityLevel)
  - Fusee.Base.Core.Diagnostics.SetMinDebugOutputLoggingSeverityLevel(Fusee.Base.Core.Diagnostics.SeverityLevel)
  - Fusee.Base.Core.Diagnostics.SetMinTextFileLoggingSeverityLevel(Fusee.Base.Core.Diagnostics.SeverityLevel)
  - Fusee.Base.Core.Diagnostics.Timer
  - Fusee.Base.Core.Diagnostics.Warn(System.Object,System.Exception,System.Object[],System.String,System.Int32,System.String)
  langs:
  - csharp
  - vb
  name: Diagnostics
  nameWithType: Diagnostics
  fullName: Fusee.Base.Core.Diagnostics
  type: Class
  source:
    id: Diagnostics
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Core\Diagnostics.cs
    startLine: 10
  assemblies:
  - Fusee.Base.Core
  namespace: Fusee.Base.Core
  summary: "\nContains mostly static functions for diagnostic purposes.\n"
  example: []
  syntax:
    content: public static class Diagnostics
    content.vb: Public Module Diagnostics
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Fusee.Base.Core.Diagnostics.Timer
  commentId: P:Fusee.Base.Core.Diagnostics.Timer
  id: Timer
  parent: Fusee.Base.Core.Diagnostics
  langs:
  - csharp
  - vb
  name: Timer
  nameWithType: Diagnostics.Timer
  fullName: Fusee.Base.Core.Diagnostics.Timer
  type: Property
  source:
    id: Timer
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Core\Diagnostics.cs
    startLine: 75
  assemblies:
  - Fusee.Base.Core
  namespace: Fusee.Base.Core
  summary: "\nHigh precision timer values.\n"
  remarks: "\nTo measure the elapsed time between two places in code get this value twice and calculate the difference.\n"
  example: []
  syntax:
    content: public static double Timer { get; }
    parameters: []
    return:
      type: System.Double
      description: "\nA double value containing consecutive real time values in milliseconds.\n"
    content.vb: Public Shared ReadOnly Property Timer As Double
  overload: Fusee.Base.Core.Diagnostics.Timer*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Fusee.Base.Core.Diagnostics.LogToTextFile(System.Boolean,System.String)
  commentId: M:Fusee.Base.Core.Diagnostics.LogToTextFile(System.Boolean,System.String)
  id: LogToTextFile(System.Boolean,System.String)
  parent: Fusee.Base.Core.Diagnostics
  langs:
  - csharp
  - vb
  name: LogToTextFile(Boolean, String)
  nameWithType: Diagnostics.LogToTextFile(Boolean, String)
  fullName: Fusee.Base.Core.Diagnostics.LogToTextFile(System.Boolean, System.String)
  type: Method
  source:
    id: LogToTextFile
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Core\Diagnostics.cs
    startLine: 149
  assemblies:
  - Fusee.Base.Core
  namespace: Fusee.Base.Core
  summary: "\nEnable / disable text file logging, default is disabled\n"
  example: []
  syntax:
    content: public static void LogToTextFile(bool logToTxtFile, string logFileName = "")
    parameters:
    - id: logToTxtFile
      type: System.Boolean
      description: ''
    - id: logFileName
      type: System.String
      description: ''
    content.vb: Public Shared Sub LogToTextFile(logToTxtFile As Boolean, logFileName As String = "")
  overload: Fusee.Base.Core.Diagnostics.LogToTextFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Base.Core.Diagnostics.SetMinTextFileLoggingSeverityLevel(Fusee.Base.Core.Diagnostics.SeverityLevel)
  commentId: M:Fusee.Base.Core.Diagnostics.SetMinTextFileLoggingSeverityLevel(Fusee.Base.Core.Diagnostics.SeverityLevel)
  id: SetMinTextFileLoggingSeverityLevel(Fusee.Base.Core.Diagnostics.SeverityLevel)
  parent: Fusee.Base.Core.Diagnostics
  langs:
  - csharp
  - vb
  name: SetMinTextFileLoggingSeverityLevel(Diagnostics.SeverityLevel)
  nameWithType: Diagnostics.SetMinTextFileLoggingSeverityLevel(Diagnostics.SeverityLevel)
  fullName: Fusee.Base.Core.Diagnostics.SetMinTextFileLoggingSeverityLevel(Fusee.Base.Core.Diagnostics.SeverityLevel)
  type: Method
  source:
    id: SetMinTextFileLoggingSeverityLevel
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Core\Diagnostics.cs
    startLine: 163
  assemblies:
  - Fusee.Base.Core
  namespace: Fusee.Base.Core
  summary: "\nChange the min logging severity level before logging is placed within the log text file\n"
  example: []
  syntax:
    content: public static void SetMinTextFileLoggingSeverityLevel(Diagnostics.SeverityLevel lvl)
    parameters:
    - id: lvl
      type: Fusee.Base.Core.Diagnostics.SeverityLevel
      description: ''
    content.vb: Public Shared Sub SetMinTextFileLoggingSeverityLevel(lvl As Diagnostics.SeverityLevel)
  overload: Fusee.Base.Core.Diagnostics.SetMinTextFileLoggingSeverityLevel*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Base.Core.Diagnostics.SetMinConsoleLoggingSeverityLevel(Fusee.Base.Core.Diagnostics.SeverityLevel)
  commentId: M:Fusee.Base.Core.Diagnostics.SetMinConsoleLoggingSeverityLevel(Fusee.Base.Core.Diagnostics.SeverityLevel)
  id: SetMinConsoleLoggingSeverityLevel(Fusee.Base.Core.Diagnostics.SeverityLevel)
  parent: Fusee.Base.Core.Diagnostics
  langs:
  - csharp
  - vb
  name: SetMinConsoleLoggingSeverityLevel(Diagnostics.SeverityLevel)
  nameWithType: Diagnostics.SetMinConsoleLoggingSeverityLevel(Diagnostics.SeverityLevel)
  fullName: Fusee.Base.Core.Diagnostics.SetMinConsoleLoggingSeverityLevel(Fusee.Base.Core.Diagnostics.SeverityLevel)
  type: Method
  source:
    id: SetMinConsoleLoggingSeverityLevel
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Core\Diagnostics.cs
    startLine: 179
  assemblies:
  - Fusee.Base.Core
  namespace: Fusee.Base.Core
  summary: "\nChange the min logging severity level before logging is written to the console\n"
  example: []
  syntax:
    content: public static void SetMinConsoleLoggingSeverityLevel(Diagnostics.SeverityLevel lvl)
    parameters:
    - id: lvl
      type: Fusee.Base.Core.Diagnostics.SeverityLevel
      description: ''
    content.vb: Public Shared Sub SetMinConsoleLoggingSeverityLevel(lvl As Diagnostics.SeverityLevel)
  overload: Fusee.Base.Core.Diagnostics.SetMinConsoleLoggingSeverityLevel*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Base.Core.Diagnostics.SetMinDebugOutputLoggingSeverityLevel(Fusee.Base.Core.Diagnostics.SeverityLevel)
  commentId: M:Fusee.Base.Core.Diagnostics.SetMinDebugOutputLoggingSeverityLevel(Fusee.Base.Core.Diagnostics.SeverityLevel)
  id: SetMinDebugOutputLoggingSeverityLevel(Fusee.Base.Core.Diagnostics.SeverityLevel)
  parent: Fusee.Base.Core.Diagnostics
  langs:
  - csharp
  - vb
  name: SetMinDebugOutputLoggingSeverityLevel(Diagnostics.SeverityLevel)
  nameWithType: Diagnostics.SetMinDebugOutputLoggingSeverityLevel(Diagnostics.SeverityLevel)
  fullName: Fusee.Base.Core.Diagnostics.SetMinDebugOutputLoggingSeverityLevel(Fusee.Base.Core.Diagnostics.SeverityLevel)
  type: Method
  source:
    id: SetMinDebugOutputLoggingSeverityLevel
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Core\Diagnostics.cs
    startLine: 188
  assemblies:
  - Fusee.Base.Core
  namespace: Fusee.Base.Core
  summary: "\nChange the min logging severity level before logging is written to the debug output\n"
  example: []
  syntax:
    content: public static void SetMinDebugOutputLoggingSeverityLevel(Diagnostics.SeverityLevel lvl)
    parameters:
    - id: lvl
      type: Fusee.Base.Core.Diagnostics.SeverityLevel
      description: ''
    content.vb: Public Shared Sub SetMinDebugOutputLoggingSeverityLevel(lvl As Diagnostics.SeverityLevel)
  overload: Fusee.Base.Core.Diagnostics.SetMinDebugOutputLoggingSeverityLevel*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Base.Core.Diagnostics.SetFormat(Fusee.Base.Core.Diagnostics.Formater)
  commentId: M:Fusee.Base.Core.Diagnostics.SetFormat(Fusee.Base.Core.Diagnostics.Formater)
  id: SetFormat(Fusee.Base.Core.Diagnostics.Formater)
  parent: Fusee.Base.Core.Diagnostics
  langs:
  - csharp
  - vb
  name: SetFormat(Diagnostics.Formater)
  nameWithType: Diagnostics.SetFormat(Diagnostics.Formater)
  fullName: Fusee.Base.Core.Diagnostics.SetFormat(Fusee.Base.Core.Diagnostics.Formater)
  type: Method
  source:
    id: SetFormat
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Core\Diagnostics.cs
    startLine: 197
  assemblies:
  - Fusee.Base.Core
  namespace: Fusee.Base.Core
  summary: "\nUpdate the format of the logging messages\n"
  example: []
  syntax:
    content: public static void SetFormat(Diagnostics.Formater formater)
    parameters:
    - id: formater
      type: Fusee.Base.Core.Diagnostics.Formater
      description: ''
    content.vb: Public Shared Sub SetFormat(formater As Diagnostics.Formater)
  overload: Fusee.Base.Core.Diagnostics.SetFormat*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Base.Core.Diagnostics.Log(System.Object,Fusee.Base.Core.Diagnostics.SeverityLevel,System.String,System.Int32,System.String)
  commentId: M:Fusee.Base.Core.Diagnostics.Log(System.Object,Fusee.Base.Core.Diagnostics.SeverityLevel,System.String,System.Int32,System.String)
  id: Log(System.Object,Fusee.Base.Core.Diagnostics.SeverityLevel,System.String,System.Int32,System.String)
  parent: Fusee.Base.Core.Diagnostics
  langs:
  - csharp
  - vb
  name: Log(Object, Diagnostics.SeverityLevel, String, Int32, String)
  nameWithType: Diagnostics.Log(Object, Diagnostics.SeverityLevel, String, Int32, String)
  fullName: Fusee.Base.Core.Diagnostics.Log(System.Object, Fusee.Base.Core.Diagnostics.SeverityLevel, System.String, System.Int32, System.String)
  type: Method
  source:
    id: Log
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Core\Diagnostics.cs
    startLine: 226
  assemblies:
  - Fusee.Base.Core
  namespace: Fusee.Base.Core
  summary: "\nLog a debug output message to the respective output console.\n"
  example: []
  syntax:
    content: >-
      [Obsolete("Please use the new logging methods (Debug, Warn, Error) instead")]

      [Conditional("DEBUG")]

      public static void Log(object o, Diagnostics.SeverityLevel logLevel = Diagnostics.SeverityLevel.DEBUG, string callerName = "", int sourceLineNumber = 0, string sourceFilePath = "")
    parameters:
    - id: o
      type: System.Object
      description: The object to log. Will be converted to a string.
    - id: logLevel
      type: Fusee.Base.Core.Diagnostics.SeverityLevel
      description: The level to log, see <xref href="Fusee.Base.Core.Diagnostics.SeverityLevel" data-throw-if-not-resolved="false"></xref> for a list
    - id: callerName
      type: System.String
      description: The calling method
    - id: sourceLineNumber
      type: System.Int32
      description: The line number, optional.
    - id: sourceFilePath
      type: System.String
      description: The file path, optional.
    content.vb: >-
      <Obsolete("Please use the new logging methods (Debug, Warn, Error) instead")>

      <Conditional("DEBUG")>

      Public Shared Sub Log(o As Object, logLevel As Diagnostics.SeverityLevel = Diagnostics.SeverityLevel.DEBUG, callerName As String = "", sourceLineNumber As Integer = 0, sourceFilePath As String = "")
  overload: Fusee.Base.Core.Diagnostics.Log*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Please use the new logging methods (Debug, Warn, Error) instead
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Fusee.Base.Core.Diagnostics.Debug(System.Object,System.Exception,System.Object[],System.String,System.Int32,System.String)
  commentId: M:Fusee.Base.Core.Diagnostics.Debug(System.Object,System.Exception,System.Object[],System.String,System.Int32,System.String)
  id: Debug(System.Object,System.Exception,System.Object[],System.String,System.Int32,System.String)
  parent: Fusee.Base.Core.Diagnostics
  langs:
  - csharp
  - vb
  name: Debug(Object, Exception, Object[], String, Int32, String)
  nameWithType: Diagnostics.Debug(Object, Exception, Object[], String, Int32, String)
  fullName: Fusee.Base.Core.Diagnostics.Debug(System.Object, System.Exception, System.Object[], System.String, System.Int32, System.String)
  type: Method
  source:
    id: Debug
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Core\Diagnostics.cs
    startLine: 243
  assemblies:
  - Fusee.Base.Core
  namespace: Fusee.Base.Core
  summary: "\nLog a debug event.\nPer default visible within the Visual Studio debug console and the console window in debug builds.\n"
  example: []
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public static void Debug(object o, Exception ex = null, object[] args = null, string callerName = "", int sourceLineNumber = 0, string sourceFilePath = "")
    parameters:
    - id: o
      type: System.Object
      description: The object to write
    - id: ex
      type: System.Exception
      description: A possible exception, optional
    - id: args
      type: System.Object[]
      description: Possible arguments, optional
    - id: callerName
      type: System.String
      description: The calling method
    - id: sourceLineNumber
      type: System.Int32
      description: The line number, optional.
    - id: sourceFilePath
      type: System.String
      description: The file path, optional.
    content.vb: >-
      <Conditional("DEBUG")>

      Public Shared Sub Debug(o As Object, ex As Exception = Nothing, args As Object() = Nothing, callerName As String = "", sourceLineNumber As Integer = 0, sourceFilePath As String = "")
  overload: Fusee.Base.Core.Diagnostics.Debug*
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
  nameWithType.vb: Diagnostics.Debug(Object, Exception, Object(), String, Int32, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Fusee.Base.Core.Diagnostics.Debug(System.Object, System.Exception, System.Object(), System.String, System.Int32, System.String)
  name.vb: Debug(Object, Exception, Object(), String, Int32, String)
- uid: Fusee.Base.Core.Diagnostics.Info(System.Object,System.Exception,System.Object[],System.String,System.Int32,System.String)
  commentId: M:Fusee.Base.Core.Diagnostics.Info(System.Object,System.Exception,System.Object[],System.String,System.Int32,System.String)
  id: Info(System.Object,System.Exception,System.Object[],System.String,System.Int32,System.String)
  parent: Fusee.Base.Core.Diagnostics
  langs:
  - csharp
  - vb
  name: Info(Object, Exception, Object[], String, Int32, String)
  nameWithType: Diagnostics.Info(Object, Exception, Object[], String, Int32, String)
  fullName: Fusee.Base.Core.Diagnostics.Info(System.Object, System.Exception, System.Object[], System.String, System.Int32, System.String)
  type: Method
  source:
    id: Info
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Core\Diagnostics.cs
    startLine: 259
  assemblies:
  - Fusee.Base.Core
  namespace: Fusee.Base.Core
  summary: "\nLog a info event.\nPer default visible within the Visual Studio debug console and the console window in debug builds, as well as in release builds.\n"
  example: []
  syntax:
    content: public static void Info(object o, Exception ex = null, object[] args = null, string callerName = "", int sourceLineNumber = 0, string sourceFilePath = "")
    parameters:
    - id: o
      type: System.Object
      description: The object to write
    - id: ex
      type: System.Exception
      description: A possible exception, optional
    - id: args
      type: System.Object[]
      description: Possible arguments, optional
    - id: callerName
      type: System.String
      description: The calling method
    - id: sourceLineNumber
      type: System.Int32
      description: The line number, optional.
    - id: sourceFilePath
      type: System.String
      description: The file path, optional.
    content.vb: Public Shared Sub Info(o As Object, ex As Exception = Nothing, args As Object() = Nothing, callerName As String = "", sourceLineNumber As Integer = 0, sourceFilePath As String = "")
  overload: Fusee.Base.Core.Diagnostics.Info*
  nameWithType.vb: Diagnostics.Info(Object, Exception, Object(), String, Int32, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Fusee.Base.Core.Diagnostics.Info(System.Object, System.Exception, System.Object(), System.String, System.Int32, System.String)
  name.vb: Info(Object, Exception, Object(), String, Int32, String)
- uid: Fusee.Base.Core.Diagnostics.Warn(System.Object,System.Exception,System.Object[],System.String,System.Int32,System.String)
  commentId: M:Fusee.Base.Core.Diagnostics.Warn(System.Object,System.Exception,System.Object[],System.String,System.Int32,System.String)
  id: Warn(System.Object,System.Exception,System.Object[],System.String,System.Int32,System.String)
  parent: Fusee.Base.Core.Diagnostics
  langs:
  - csharp
  - vb
  name: Warn(Object, Exception, Object[], String, Int32, String)
  nameWithType: Diagnostics.Warn(Object, Exception, Object[], String, Int32, String)
  fullName: Fusee.Base.Core.Diagnostics.Warn(System.Object, System.Exception, System.Object[], System.String, System.Int32, System.String)
  type: Method
  source:
    id: Warn
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Core\Diagnostics.cs
    startLine: 274
  assemblies:
  - Fusee.Base.Core
  namespace: Fusee.Base.Core
  summary: "\nLog a warning event.\nPer default visible within the Visual Studio debug console and the console window in debug builds.\n"
  example: []
  syntax:
    content: public static void Warn(object o, Exception ex = null, object[] args = null, string callerName = "", int sourceLineNumber = 0, string sourceFilePath = "")
    parameters:
    - id: o
      type: System.Object
      description: The object to write
    - id: ex
      type: System.Exception
      description: A possible exception, optional
    - id: args
      type: System.Object[]
      description: Possible arguments, optional
    - id: callerName
      type: System.String
      description: The calling method
    - id: sourceLineNumber
      type: System.Int32
      description: The line number, optional.
    - id: sourceFilePath
      type: System.String
      description: The file path, optional.
    content.vb: Public Shared Sub Warn(o As Object, ex As Exception = Nothing, args As Object() = Nothing, callerName As String = "", sourceLineNumber As Integer = 0, sourceFilePath As String = "")
  overload: Fusee.Base.Core.Diagnostics.Warn*
  nameWithType.vb: Diagnostics.Warn(Object, Exception, Object(), String, Int32, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Fusee.Base.Core.Diagnostics.Warn(System.Object, System.Exception, System.Object(), System.String, System.Int32, System.String)
  name.vb: Warn(Object, Exception, Object(), String, Int32, String)
- uid: Fusee.Base.Core.Diagnostics.Error(System.Object,System.Exception,System.Object[],System.String,System.Int32,System.String)
  commentId: M:Fusee.Base.Core.Diagnostics.Error(System.Object,System.Exception,System.Object[],System.String,System.Int32,System.String)
  id: Error(System.Object,System.Exception,System.Object[],System.String,System.Int32,System.String)
  parent: Fusee.Base.Core.Diagnostics
  langs:
  - csharp
  - vb
  name: Error(Object, Exception, Object[], String, Int32, String)
  nameWithType: Diagnostics.Error(Object, Exception, Object[], String, Int32, String)
  fullName: Fusee.Base.Core.Diagnostics.Error(System.Object, System.Exception, System.Object[], System.String, System.Int32, System.String)
  type: Method
  source:
    id: Error
    path: C:\Users\test\Documents\fusee\Fusee\src\Base\Core\Diagnostics.cs
    startLine: 289
  assemblies:
  - Fusee.Base.Core
  namespace: Fusee.Base.Core
  summary: "\nLog an error event.\nPer default visible within the Visual Studio debug console and the console window in debug and release builds.\n"
  example: []
  syntax:
    content: public static void Error(object o, Exception ex = null, object[] args = null, string callerName = "", int sourceLineNumber = 0, string sourceFilePath = "")
    parameters:
    - id: o
      type: System.Object
      description: The object to write
    - id: ex
      type: System.Exception
      description: A possible exception, optional
    - id: args
      type: System.Object[]
      description: Possible arguments, optional
    - id: callerName
      type: System.String
      description: The calling method
    - id: sourceLineNumber
      type: System.Int32
      description: The line number, optional.
    - id: sourceFilePath
      type: System.String
      description: The file path, optional.
    content.vb: Public Shared Sub Error(o As Object, ex As Exception = Nothing, args As Object() = Nothing, callerName As String = "", sourceLineNumber As Integer = 0, sourceFilePath As String = "")
  overload: Fusee.Base.Core.Diagnostics.Error*
  nameWithType.vb: Diagnostics.Error(Object, Exception, Object(), String, Int32, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Fusee.Base.Core.Diagnostics.Error(System.Object, System.Exception, System.Object(), System.String, System.Int32, System.String)
  name.vb: Error(Object, Exception, Object(), String, Int32, String)
references:
- uid: Fusee.Base.Core
  commentId: N:Fusee.Base.Core
  name: Fusee.Base.Core
  nameWithType: Fusee.Base.Core
  fullName: Fusee.Base.Core
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Fusee.Base.Core.Diagnostics.Timer*
  commentId: Overload:Fusee.Base.Core.Diagnostics.Timer
  name: Timer
  nameWithType: Diagnostics.Timer
  fullName: Fusee.Base.Core.Diagnostics.Timer
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Fusee.Base.Core.Diagnostics.LogToTextFile*
  commentId: Overload:Fusee.Base.Core.Diagnostics.LogToTextFile
  name: LogToTextFile
  nameWithType: Diagnostics.LogToTextFile
  fullName: Fusee.Base.Core.Diagnostics.LogToTextFile
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Fusee.Base.Core.Diagnostics.SetMinTextFileLoggingSeverityLevel*
  commentId: Overload:Fusee.Base.Core.Diagnostics.SetMinTextFileLoggingSeverityLevel
  name: SetMinTextFileLoggingSeverityLevel
  nameWithType: Diagnostics.SetMinTextFileLoggingSeverityLevel
  fullName: Fusee.Base.Core.Diagnostics.SetMinTextFileLoggingSeverityLevel
- uid: Fusee.Base.Core.Diagnostics.SeverityLevel
  commentId: T:Fusee.Base.Core.Diagnostics.SeverityLevel
  parent: Fusee.Base.Core
  name: Diagnostics.SeverityLevel
  nameWithType: Diagnostics.SeverityLevel
  fullName: Fusee.Base.Core.Diagnostics.SeverityLevel
- uid: Fusee.Base.Core.Diagnostics.SetMinConsoleLoggingSeverityLevel*
  commentId: Overload:Fusee.Base.Core.Diagnostics.SetMinConsoleLoggingSeverityLevel
  name: SetMinConsoleLoggingSeverityLevel
  nameWithType: Diagnostics.SetMinConsoleLoggingSeverityLevel
  fullName: Fusee.Base.Core.Diagnostics.SetMinConsoleLoggingSeverityLevel
- uid: Fusee.Base.Core.Diagnostics.SetMinDebugOutputLoggingSeverityLevel*
  commentId: Overload:Fusee.Base.Core.Diagnostics.SetMinDebugOutputLoggingSeverityLevel
  name: SetMinDebugOutputLoggingSeverityLevel
  nameWithType: Diagnostics.SetMinDebugOutputLoggingSeverityLevel
  fullName: Fusee.Base.Core.Diagnostics.SetMinDebugOutputLoggingSeverityLevel
- uid: Fusee.Base.Core.Diagnostics.SetFormat*
  commentId: Overload:Fusee.Base.Core.Diagnostics.SetFormat
  name: SetFormat
  nameWithType: Diagnostics.SetFormat
  fullName: Fusee.Base.Core.Diagnostics.SetFormat
- uid: Fusee.Base.Core.Diagnostics.Formater
  commentId: T:Fusee.Base.Core.Diagnostics.Formater
  parent: Fusee.Base.Core
  name: Diagnostics.Formater
  nameWithType: Diagnostics.Formater
  fullName: Fusee.Base.Core.Diagnostics.Formater
- uid: Fusee.Base.Core.Diagnostics.Log*
  commentId: Overload:Fusee.Base.Core.Diagnostics.Log
  name: Log
  nameWithType: Diagnostics.Log
  fullName: Fusee.Base.Core.Diagnostics.Log
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Fusee.Base.Core.Diagnostics.Debug*
  commentId: Overload:Fusee.Base.Core.Diagnostics.Debug
  name: Debug
  nameWithType: Diagnostics.Debug
  fullName: Fusee.Base.Core.Diagnostics.Debug
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Object[]
  isExternal: true
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  nameWithType.vb: Object()
  fullName.vb: System.Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Fusee.Base.Core.Diagnostics.Info*
  commentId: Overload:Fusee.Base.Core.Diagnostics.Info
  name: Info
  nameWithType: Diagnostics.Info
  fullName: Fusee.Base.Core.Diagnostics.Info
- uid: Fusee.Base.Core.Diagnostics.Warn*
  commentId: Overload:Fusee.Base.Core.Diagnostics.Warn
  name: Warn
  nameWithType: Diagnostics.Warn
  fullName: Fusee.Base.Core.Diagnostics.Warn
- uid: Fusee.Base.Core.Diagnostics.Error*
  commentId: Overload:Fusee.Base.Core.Diagnostics.Error
  name: Error
  nameWithType: Diagnostics.Error
  fullName: Fusee.Base.Core.Diagnostics.Error
